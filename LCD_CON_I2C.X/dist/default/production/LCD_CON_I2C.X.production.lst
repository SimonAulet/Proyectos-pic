

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Apr 16 20:04:07 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=3
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,space=0,merge=1,inline,delta=2
    37                           	psect	text25,local,class=CODE,space=0,merge=1,inline,delta=2
    38                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,space=0,merge=1,inline,delta=2
    41                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,space=0,merge=1,inline,delta=2
    43                           	psect	text31,local,class=CODE,space=0,merge=1,inline,delta=2
    44                           	psect	text32,local,class=CODE,space=0,merge=1,inline,delta=2
    45                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,space=0,delta=2
    54                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,space=0,merge=1,inline,delta=2
    56                           	psect	text44,local,class=CODE,space=0,merge=1,inline,delta=2
    57                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text61,local,class=CODE,space=0,merge=1,inline,delta=2
    74                           	psect	text62,local,class=CODE,space=0,merge=1,inline,delta=2
    75                           	psect	text63,local,class=CODE,space=0,merge=1,inline,delta=2
    76                           	psect	text64,local,class=CODE,space=0,merge=1,inline,delta=2
    77                           	psect	text65,local,class=CODE,space=0,merge=1,inline,delta=2
    78                           	psect	text66,local,class=CODE,space=0,merge=1,inline,delta=2
    79                           	psect	text67,local,class=CODE,space=0,merge=1,inline,delta=2
    80                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text70,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text73,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
    88                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
    89                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
    90                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
    91                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
    92                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text83,local,class=CODE,space=0,merge=1,inline,delta=2
    96                           	psect	text84,local,class=CODE,space=0,merge=1,inline,delta=2
    97                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    99                           	dabs	1,0x7E,2
   100     0000                     
   101                           ; Version 2.35
   102                           ; Generated 01/06/2021 GMT
   103                           ; 
   104                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution. Publication is not required when
   118                           ;        this file is used in an embedded application.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC16F18875 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136     0008                     bsr             equ	8
   137     0005                     fsr0h           equ	5
   138     0004                     fsr0l           equ	4
   139     0007                     fsr1h           equ	7
   140     0006                     fsr1l           equ	6
   141     0000                     indf            equ	0
   142     0000                     indf0           equ	0
   143     0001                     indf1           equ	1
   144     000B                     intcon          equ	11
   145     0002                     pc              equ	2
   146     0002                     pcl             equ	2
   147     000A                     pclath          equ	10
   148     0003                     status          equ	3
   149     0009                     wreg            equ	9
   150     0000                     INDF0           equ	0	;# 
   151     0001                     INDF1           equ	1	;# 
   152     0002                     PCL             equ	2	;# 
   153     0003                     STATUS          equ	3	;# 
   154     0004                     FSR0L           equ	4	;# 
   155     0005                     FSR0H           equ	5	;# 
   156     0006                     FSR1L           equ	6	;# 
   157     0007                     FSR1H           equ	7	;# 
   158     0008                     BSR             equ	8	;# 
   159     0009                     WREG            equ	9	;# 
   160     000A                     PCLATH          equ	10	;# 
   161     000B                     INTCON          equ	11	;# 
   162     000C                     PORTA           equ	12	;# 
   163     000D                     PORTB           equ	13	;# 
   164     000E                     PORTC           equ	14	;# 
   165     000F                     PORTD           equ	15	;# 
   166     0010                     PORTE           equ	16	;# 
   167     0011                     TRISA           equ	17	;# 
   168     0012                     TRISB           equ	18	;# 
   169     0013                     TRISC           equ	19	;# 
   170     0014                     TRISD           equ	20	;# 
   171     0015                     TRISE           equ	21	;# 
   172     0016                     LATA            equ	22	;# 
   173     0017                     LATB            equ	23	;# 
   174     0018                     LATC            equ	24	;# 
   175     0019                     LATD            equ	25	;# 
   176     001A                     LATE            equ	26	;# 
   177     001C                     TMR0L           equ	28	;# 
   178     001C                     TMR0            equ	28	;# 
   179     001D                     TMR0H           equ	29	;# 
   180     001D                     PR0             equ	29	;# 
   181     001E                     T0CON0          equ	30	;# 
   182     001F                     T0CON1          equ	31	;# 
   183     008C                     ADRES           equ	140	;# 
   184     008C                     ADRESL          equ	140	;# 
   185     008D                     ADRESH          equ	141	;# 
   186     008E                     ADPREV          equ	142	;# 
   187     008E                     ADPREVL         equ	142	;# 
   188     008F                     ADPREVH         equ	143	;# 
   189     0090                     ADACC           equ	144	;# 
   190     0090                     ADACCL          equ	144	;# 
   191     0091                     ADACCH          equ	145	;# 
   192     0093                     ADCON0          equ	147	;# 
   193     0094                     ADCON1          equ	148	;# 
   194     0095                     ADCON2          equ	149	;# 
   195     0096                     ADCON3          equ	150	;# 
   196     0097                     ADSTAT          equ	151	;# 
   197     0098                     ADCLK           equ	152	;# 
   198     0099                     ADACT           equ	153	;# 
   199     009A                     ADREF           equ	154	;# 
   200     009B                     ADCAP           equ	155	;# 
   201     009C                     ADPRE           equ	156	;# 
   202     009D                     ADACQ           equ	157	;# 
   203     009E                     ADPCH           equ	158	;# 
   204     010C                     ADCNT           equ	268	;# 
   205     010D                     ADRPT           equ	269	;# 
   206     010E                     ADLTH           equ	270	;# 
   207     010E                     ADLTHL          equ	270	;# 
   208     010F                     ADLTHH          equ	271	;# 
   209     0110                     ADUTH           equ	272	;# 
   210     0110                     ADUTHL          equ	272	;# 
   211     0111                     ADUTHH          equ	273	;# 
   212     0112                     ADSTPT          equ	274	;# 
   213     0112                     ADSTPTL         equ	274	;# 
   214     0113                     ADSTPTH         equ	275	;# 
   215     0114                     ADFLTR          equ	276	;# 
   216     0114                     ADFLTRL         equ	276	;# 
   217     0115                     ADFLTRH         equ	277	;# 
   218     0116                     ADERR           equ	278	;# 
   219     0116                     ADERRL          equ	278	;# 
   220     0117                     ADERRH          equ	279	;# 
   221     0119                     RC1REG          equ	281	;# 
   222     0119                     RCREG           equ	281	;# 
   223     0119                     RCREG1          equ	281	;# 
   224     011A                     TX1REG          equ	282	;# 
   225     011A                     TXREG1          equ	282	;# 
   226     011A                     TXREG           equ	282	;# 
   227     011B                     SP1BRG          equ	283	;# 
   228     011B                     SP1BRGL         equ	283	;# 
   229     011B                     SPBRG           equ	283	;# 
   230     011B                     SPBRG1          equ	283	;# 
   231     011B                     SPBRGL          equ	283	;# 
   232     011C                     SP1BRGH         equ	284	;# 
   233     011C                     SPBRGH          equ	284	;# 
   234     011C                     SPBRGH1         equ	284	;# 
   235     011D                     RC1STA          equ	285	;# 
   236     011D                     RCSTA1          equ	285	;# 
   237     011D                     RCSTA           equ	285	;# 
   238     011E                     TX1STA          equ	286	;# 
   239     011E                     TXSTA1          equ	286	;# 
   240     011E                     TXSTA           equ	286	;# 
   241     011F                     BAUD1CON        equ	287	;# 
   242     011F                     BAUDCON1        equ	287	;# 
   243     011F                     BAUDCTL1        equ	287	;# 
   244     011F                     BAUDCON         equ	287	;# 
   245     011F                     BAUDCTL         equ	287	;# 
   246     018C                     SSP1BUF         equ	396	;# 
   247     018D                     SSP1ADD         equ	397	;# 
   248     018E                     SSP1MSK         equ	398	;# 
   249     018F                     SSP1STAT        equ	399	;# 
   250     0190                     SSP1CON1        equ	400	;# 
   251     0191                     SSP1CON2        equ	401	;# 
   252     0192                     SSP1CON3        equ	402	;# 
   253     0196                     SSP2BUF         equ	406	;# 
   254     0197                     SSP2ADD         equ	407	;# 
   255     0198                     SSP2MSK         equ	408	;# 
   256     0199                     SSP2STAT        equ	409	;# 
   257     019A                     SSP2CON1        equ	410	;# 
   258     019B                     SSP2CON2        equ	411	;# 
   259     019C                     SSP2CON3        equ	412	;# 
   260     020C                     TMR1            equ	524	;# 
   261     020C                     TMR1L           equ	524	;# 
   262     020D                     TMR1H           equ	525	;# 
   263     020E                     T1CON           equ	526	;# 
   264     020F                     T1GCON          equ	527	;# 
   265     020F                     PR1             equ	527	;# 
   266     0210                     T1GATE          equ	528	;# 
   267     0210                     TMR1GATE        equ	528	;# 
   268     0211                     T1CLK           equ	529	;# 
   269     0211                     TMR1CLK         equ	529	;# 
   270     0212                     TMR3            equ	530	;# 
   271     0212                     TMR3L           equ	530	;# 
   272     0213                     TMR3H           equ	531	;# 
   273     0214                     T3CON           equ	532	;# 
   274     0215                     T3GCON          equ	533	;# 
   275     0215                     PR3             equ	533	;# 
   276     0216                     T3GATE          equ	534	;# 
   277     0216                     TMR3GATE        equ	534	;# 
   278     0217                     T3CLK           equ	535	;# 
   279     0217                     TMR3CLK         equ	535	;# 
   280     0218                     TMR5            equ	536	;# 
   281     0218                     TMR5L           equ	536	;# 
   282     0219                     TMR5H           equ	537	;# 
   283     021A                     T5CON           equ	538	;# 
   284     021B                     T5GCON          equ	539	;# 
   285     021B                     PR5             equ	539	;# 
   286     021C                     T5GATE          equ	540	;# 
   287     021C                     TMR5GATE        equ	540	;# 
   288     021D                     T5CLK           equ	541	;# 
   289     021D                     TMR5CLK         equ	541	;# 
   290     021E                     CCPTMRS0        equ	542	;# 
   291     021F                     CCPTMRS1        equ	543	;# 
   292     028C                     T2TMR           equ	652	;# 
   293     028C                     TMR2            equ	652	;# 
   294     028D                     T2PR            equ	653	;# 
   295     028D                     PR2             equ	653	;# 
   296     028E                     T2CON           equ	654	;# 
   297     028F                     T2HLT           equ	655	;# 
   298     0290                     T2CLKCON        equ	656	;# 
   299     0290                     T2CLK           equ	656	;# 
   300     0291                     T2RST           equ	657	;# 
   301     0292                     T4TMR           equ	658	;# 
   302     0292                     TMR4            equ	658	;# 
   303     0293                     T4PR            equ	659	;# 
   304     0293                     PR4             equ	659	;# 
   305     0294                     T4CON           equ	660	;# 
   306     0295                     T4HLT           equ	661	;# 
   307     0296                     T4CLKCON        equ	662	;# 
   308     0296                     T4CLK           equ	662	;# 
   309     0297                     T4RST           equ	663	;# 
   310     0298                     T6TMR           equ	664	;# 
   311     0298                     TMR6            equ	664	;# 
   312     0299                     T6PR            equ	665	;# 
   313     0299                     PR6             equ	665	;# 
   314     029A                     T6CON           equ	666	;# 
   315     029B                     T6HLT           equ	667	;# 
   316     029C                     T6CLKCON        equ	668	;# 
   317     029C                     T6CLK           equ	668	;# 
   318     029D                     T6RST           equ	669	;# 
   319     030C                     CCPR1           equ	780	;# 
   320     030C                     CCPR1L          equ	780	;# 
   321     030D                     CCPR1H          equ	781	;# 
   322     030E                     CCP1CON         equ	782	;# 
   323     030F                     CCP1CAP         equ	783	;# 
   324     0310                     CCPR2           equ	784	;# 
   325     0310                     CCPR2L          equ	784	;# 
   326     0311                     CCPR2H          equ	785	;# 
   327     0312                     CCP2CON         equ	786	;# 
   328     0313                     CCP2CAP         equ	787	;# 
   329     0314                     CCPR3           equ	788	;# 
   330     0314                     CCPR3L          equ	788	;# 
   331     0315                     CCPR3H          equ	789	;# 
   332     0316                     CCP3CON         equ	790	;# 
   333     0317                     CCP3CAP         equ	791	;# 
   334     0318                     CCPR4           equ	792	;# 
   335     0318                     CCPR4L          equ	792	;# 
   336     0319                     CCPR4H          equ	793	;# 
   337     031A                     CCP4CON         equ	794	;# 
   338     031B                     CCP4CAP         equ	795	;# 
   339     031C                     CCPR5           equ	796	;# 
   340     031C                     CCPR5L          equ	796	;# 
   341     031D                     CCPR5H          equ	797	;# 
   342     031E                     CCP5CON         equ	798	;# 
   343     031F                     CCP5CAP         equ	799	;# 
   344     038C                     PWM6DC          equ	908	;# 
   345     038C                     PWM6DCL         equ	908	;# 
   346     038D                     PWM6DCH         equ	909	;# 
   347     038E                     PWM6CON         equ	910	;# 
   348     0390                     PWM7DC          equ	912	;# 
   349     0390                     PWM7DCL         equ	912	;# 
   350     0391                     PWM7DCH         equ	913	;# 
   351     0392                     PWM7CON         equ	914	;# 
   352     040C                     SCANLADRL       equ	1036	;# 
   353     040D                     SCANLADRH       equ	1037	;# 
   354     040E                     SCANHADRL       equ	1038	;# 
   355     040F                     SCANHADRH       equ	1039	;# 
   356     0410                     SCANCON0        equ	1040	;# 
   357     0411                     SCANTRIG        equ	1041	;# 
   358     0416                     CRCDATA         equ	1046	;# 
   359     0416                     CRCDATL         equ	1046	;# 
   360     0417                     CRCDATH         equ	1047	;# 
   361     0418                     CRCACC          equ	1048	;# 
   362     0418                     CRCACCL         equ	1048	;# 
   363     0419                     CRCACCH         equ	1049	;# 
   364     041A                     CRCSHFT         equ	1050	;# 
   365     041A                     CRCSHIFTL       equ	1050	;# 
   366     041B                     CRCSHIFTH       equ	1051	;# 
   367     041C                     CRCXOR          equ	1052	;# 
   368     041C                     CRCXORL         equ	1052	;# 
   369     041D                     CRCXORH         equ	1053	;# 
   370     041E                     CRCCON0         equ	1054	;# 
   371     041F                     CRCCON1         equ	1055	;# 
   372     048C                     SMT1TMR         equ	1164	;# 
   373     048C                     SMT1TMRL        equ	1164	;# 
   374     048D                     SMT1TMRH        equ	1165	;# 
   375     048E                     SMT1TMRU        equ	1166	;# 
   376     048F                     SMT1CPR         equ	1167	;# 
   377     048F                     SMT1CPRL        equ	1167	;# 
   378     0490                     SMT1CPRH        equ	1168	;# 
   379     0491                     SMT1CPRU        equ	1169	;# 
   380     0492                     SMT1CPW         equ	1170	;# 
   381     0492                     SMT1CPWL        equ	1170	;# 
   382     0493                     SMT1CPWH        equ	1171	;# 
   383     0494                     SMT1CPWU        equ	1172	;# 
   384     0495                     SMT1PR          equ	1173	;# 
   385     0495                     SMT1PRL         equ	1173	;# 
   386     0496                     SMT1PRH         equ	1174	;# 
   387     0497                     SMT1PRU         equ	1175	;# 
   388     0498                     SMT1CON0        equ	1176	;# 
   389     0499                     SMT1CON1        equ	1177	;# 
   390     049A                     SMT1STAT        equ	1178	;# 
   391     049B                     SMT1CLK         equ	1179	;# 
   392     049C                     SMT1SIG         equ	1180	;# 
   393     049D                     SMT1WIN         equ	1181	;# 
   394     050C                     SMT2TMR         equ	1292	;# 
   395     050C                     SMT2TMRL        equ	1292	;# 
   396     050D                     SMT2TMRH        equ	1293	;# 
   397     050E                     SMT2TMRU        equ	1294	;# 
   398     050F                     SMT2CPR         equ	1295	;# 
   399     050F                     SMT2CPRL        equ	1295	;# 
   400     0510                     SMT2CPRH        equ	1296	;# 
   401     0511                     SMT2CPRU        equ	1297	;# 
   402     0512                     SMT2CPW         equ	1298	;# 
   403     0512                     SMT2CPWL        equ	1298	;# 
   404     0513                     SMT2CPWH        equ	1299	;# 
   405     0514                     SMT2CPWU        equ	1300	;# 
   406     0515                     SMT2PR          equ	1301	;# 
   407     0515                     SMT2PRL         equ	1301	;# 
   408     0516                     SMT2PRH         equ	1302	;# 
   409     0517                     SMT2PRU         equ	1303	;# 
   410     0518                     SMT2CON0        equ	1304	;# 
   411     0519                     SMT2CON1        equ	1305	;# 
   412     051A                     SMT2STAT        equ	1306	;# 
   413     051B                     SMT2CLK         equ	1307	;# 
   414     051C                     SMT2SIG         equ	1308	;# 
   415     051D                     SMT2WIN         equ	1309	;# 
   416     058C                     NCO1ACC         equ	1420	;# 
   417     058C                     NCO1ACCL        equ	1420	;# 
   418     058D                     NCO1ACCH        equ	1421	;# 
   419     058E                     NCO1ACCU        equ	1422	;# 
   420     058F                     NCO1INC         equ	1423	;# 
   421     058F                     NCO1INCL        equ	1423	;# 
   422     0590                     NCO1INCH        equ	1424	;# 
   423     0591                     NCO1INCU        equ	1425	;# 
   424     0592                     NCO1CON         equ	1426	;# 
   425     0593                     NCO1CLK         equ	1427	;# 
   426     060C                     CWG1CLKCON      equ	1548	;# 
   427     060D                     CWG1ISM         equ	1549	;# 
   428     060E                     CWG1DBR         equ	1550	;# 
   429     060F                     CWG1DBF         equ	1551	;# 
   430     0610                     CWG1CON0        equ	1552	;# 
   431     0611                     CWG1CON1        equ	1553	;# 
   432     0612                     CWG1AS0         equ	1554	;# 
   433     0613                     CWG1AS1         equ	1555	;# 
   434     0614                     CWG1STR         equ	1556	;# 
   435     0616                     CWG2CLKCON      equ	1558	;# 
   436     0617                     CWG2ISM         equ	1559	;# 
   437     0618                     CWG2DBR         equ	1560	;# 
   438     0619                     CWG2DBF         equ	1561	;# 
   439     061A                     CWG2CON0        equ	1562	;# 
   440     061B                     CWG2CON1        equ	1563	;# 
   441     061C                     CWG2AS0         equ	1564	;# 
   442     061D                     CWG2AS1         equ	1565	;# 
   443     061E                     CWG2STR         equ	1566	;# 
   444     068C                     CWG3CLKCON      equ	1676	;# 
   445     068D                     CWG3ISM         equ	1677	;# 
   446     068E                     CWG3DBR         equ	1678	;# 
   447     068F                     CWG3DBF         equ	1679	;# 
   448     0690                     CWG3CON0        equ	1680	;# 
   449     0691                     CWG3CON1        equ	1681	;# 
   450     0692                     CWG3AS0         equ	1682	;# 
   451     0693                     CWG3AS1         equ	1683	;# 
   452     0694                     CWG3STR         equ	1684	;# 
   453     070C                     PIR0            equ	1804	;# 
   454     070D                     PIR1            equ	1805	;# 
   455     070E                     PIR2            equ	1806	;# 
   456     070F                     PIR3            equ	1807	;# 
   457     0710                     PIR4            equ	1808	;# 
   458     0711                     PIR5            equ	1809	;# 
   459     0712                     PIR6            equ	1810	;# 
   460     0713                     PIR7            equ	1811	;# 
   461     0714                     PIR8            equ	1812	;# 
   462     0716                     PIE0            equ	1814	;# 
   463     0717                     PIE1            equ	1815	;# 
   464     0718                     PIE2            equ	1816	;# 
   465     0719                     PIE3            equ	1817	;# 
   466     071A                     PIE4            equ	1818	;# 
   467     071B                     PIE5            equ	1819	;# 
   468     071C                     PIE6            equ	1820	;# 
   469     071D                     PIE7            equ	1821	;# 
   470     071E                     PIE8            equ	1822	;# 
   471     0796                     PMD0            equ	1942	;# 
   472     0797                     PMD1            equ	1943	;# 
   473     0798                     PMD2            equ	1944	;# 
   474     0799                     PMD3            equ	1945	;# 
   475     079A                     PMD4            equ	1946	;# 
   476     079B                     PMD5            equ	1947	;# 
   477     080C                     WDTCON0         equ	2060	;# 
   478     080D                     WDTCON1         equ	2061	;# 
   479     080E                     WDTPSL          equ	2062	;# 
   480     080F                     WDTPSH          equ	2063	;# 
   481     0810                     WDTTMR          equ	2064	;# 
   482     0811                     BORCON          equ	2065	;# 
   483     0812                     VREGCON         equ	2066	;# 
   484     0813                     PCON0           equ	2067	;# 
   485     0814                     CCDCON          equ	2068	;# 
   486     081A                     NVMADRL         equ	2074	;# 
   487     081B                     NVMADRH         equ	2075	;# 
   488     081C                     NVMDATL         equ	2076	;# 
   489     081D                     NVMDATH         equ	2077	;# 
   490     081E                     NVMCON1         equ	2078	;# 
   491     081F                     NVMCON2         equ	2079	;# 
   492     088C                     CPUDOZE         equ	2188	;# 
   493     088D                     OSCCON1         equ	2189	;# 
   494     088E                     OSCCON2         equ	2190	;# 
   495     088F                     OSCCON3         equ	2191	;# 
   496     0890                     OSCSTAT         equ	2192	;# 
   497     0891                     OSCEN           equ	2193	;# 
   498     0892                     OSCTUNE         equ	2194	;# 
   499     0893                     OSCFRQ          equ	2195	;# 
   500     0895                     CLKRCON         equ	2197	;# 
   501     0896                     CLKRCLK         equ	2198	;# 
   502     0897                     MDCON0          equ	2199	;# 
   503     0898                     MDCON1          equ	2200	;# 
   504     0899                     MDSRC           equ	2201	;# 
   505     089A                     MDCARL          equ	2202	;# 
   506     089B                     MDCARH          equ	2203	;# 
   507     090C                     FVRCON          equ	2316	;# 
   508     090E                     DAC1CON0        equ	2318	;# 
   509     090F                     DAC1CON1        equ	2319	;# 
   510     091F                     ZCD1CON         equ	2335	;# 
   511     091F                     ZCDCON          equ	2335	;# 
   512     098F                     CMOUT           equ	2447	;# 
   513     098F                     CMSTAT          equ	2447	;# 
   514     0990                     CM1CON0         equ	2448	;# 
   515     0991                     CM1CON1         equ	2449	;# 
   516     0992                     CM1NSEL         equ	2450	;# 
   517     0993                     CM1PSEL         equ	2451	;# 
   518     0994                     CM2CON0         equ	2452	;# 
   519     0995                     CM2CON1         equ	2453	;# 
   520     0996                     CM2NSEL         equ	2454	;# 
   521     0997                     CM2PSEL         equ	2455	;# 
   522     0E0F                     CLCDATA         equ	3599	;# 
   523     0E10                     CLC1CON         equ	3600	;# 
   524     0E11                     CLC1POL         equ	3601	;# 
   525     0E12                     CLC1SEL0        equ	3602	;# 
   526     0E13                     CLC1SEL1        equ	3603	;# 
   527     0E14                     CLC1SEL2        equ	3604	;# 
   528     0E15                     CLC1SEL3        equ	3605	;# 
   529     0E16                     CLC1GLS0        equ	3606	;# 
   530     0E17                     CLC1GLS1        equ	3607	;# 
   531     0E18                     CLC1GLS2        equ	3608	;# 
   532     0E19                     CLC1GLS3        equ	3609	;# 
   533     0E1A                     CLC2CON         equ	3610	;# 
   534     0E1B                     CLC2POL         equ	3611	;# 
   535     0E1C                     CLC2SEL0        equ	3612	;# 
   536     0E1D                     CLC2SEL1        equ	3613	;# 
   537     0E1E                     CLC2SEL2        equ	3614	;# 
   538     0E1F                     CLC2SEL3        equ	3615	;# 
   539     0E20                     CLC2GLS0        equ	3616	;# 
   540     0E21                     CLC2GLS1        equ	3617	;# 
   541     0E22                     CLC2GLS2        equ	3618	;# 
   542     0E23                     CLC2GLS3        equ	3619	;# 
   543     0E24                     CLC3CON         equ	3620	;# 
   544     0E25                     CLC3POL         equ	3621	;# 
   545     0E26                     CLC3SEL0        equ	3622	;# 
   546     0E27                     CLC3SEL1        equ	3623	;# 
   547     0E28                     CLC3SEL2        equ	3624	;# 
   548     0E29                     CLC3SEL3        equ	3625	;# 
   549     0E2A                     CLC3GLS0        equ	3626	;# 
   550     0E2B                     CLC3GLS1        equ	3627	;# 
   551     0E2C                     CLC3GLS2        equ	3628	;# 
   552     0E2D                     CLC3GLS3        equ	3629	;# 
   553     0E2E                     CLC4CON         equ	3630	;# 
   554     0E2F                     CLC4POL         equ	3631	;# 
   555     0E30                     CLC4SEL0        equ	3632	;# 
   556     0E31                     CLC4SEL1        equ	3633	;# 
   557     0E32                     CLC4SEL2        equ	3634	;# 
   558     0E33                     CLC4SEL3        equ	3635	;# 
   559     0E34                     CLC4GLS0        equ	3636	;# 
   560     0E35                     CLC4GLS1        equ	3637	;# 
   561     0E36                     CLC4GLS2        equ	3638	;# 
   562     0E37                     CLC4GLS3        equ	3639	;# 
   563     0E8F                     PPSLOCK         equ	3727	;# 
   564     0E90                     INTPPS          equ	3728	;# 
   565     0E91                     T0CKIPPS        equ	3729	;# 
   566     0E92                     T1CKIPPS        equ	3730	;# 
   567     0E93                     T1GPPS          equ	3731	;# 
   568     0E94                     T3CKIPPS        equ	3732	;# 
   569     0E95                     T3GPPS          equ	3733	;# 
   570     0E96                     T5CKIPPS        equ	3734	;# 
   571     0E97                     T5GPPS          equ	3735	;# 
   572     0E9C                     T2AINPPS        equ	3740	;# 
   573     0E9D                     T4AINPPS        equ	3741	;# 
   574     0E9E                     T6AINPPS        equ	3742	;# 
   575     0EA1                     CCP1PPS         equ	3745	;# 
   576     0EA2                     CCP2PPS         equ	3746	;# 
   577     0EA3                     CCP3PPS         equ	3747	;# 
   578     0EA4                     CCP4PPS         equ	3748	;# 
   579     0EA5                     CCP5PPS         equ	3749	;# 
   580     0EA9                     SMT1WINPPS      equ	3753	;# 
   581     0EAA                     SMT1SIGPPS      equ	3754	;# 
   582     0EAB                     SMT2WINPPS      equ	3755	;# 
   583     0EAC                     SMT2SIGPPS      equ	3756	;# 
   584     0EB1                     CWG1PPS         equ	3761	;# 
   585     0EB2                     CWG2PPS         equ	3762	;# 
   586     0EB3                     CWG3PPS         equ	3763	;# 
   587     0EB8                     MDCARLPPS       equ	3768	;# 
   588     0EB9                     MDCARHPPS       equ	3769	;# 
   589     0EBA                     MDSRCPPS        equ	3770	;# 
   590     0EBB                     CLCIN0PPS       equ	3771	;# 
   591     0EBC                     CLCIN1PPS       equ	3772	;# 
   592     0EBD                     CLCIN2PPS       equ	3773	;# 
   593     0EBE                     CLCIN3PPS       equ	3774	;# 
   594     0EC3                     ADCACTPPS       equ	3779	;# 
   595     0EC5                     SSP1CLKPPS      equ	3781	;# 
   596     0EC6                     SSP1DATPPS      equ	3782	;# 
   597     0EC7                     SSP1SSPPS       equ	3783	;# 
   598     0EC8                     SSP2CLKPPS      equ	3784	;# 
   599     0EC9                     SSP2DATPPS      equ	3785	;# 
   600     0ECA                     SSP2SSPPS       equ	3786	;# 
   601     0ECB                     RXPPS           equ	3787	;# 
   602     0ECC                     TXPPS           equ	3788	;# 
   603     0F10                     RA0PPS          equ	3856	;# 
   604     0F11                     RA1PPS          equ	3857	;# 
   605     0F12                     RA2PPS          equ	3858	;# 
   606     0F13                     RA3PPS          equ	3859	;# 
   607     0F14                     RA4PPS          equ	3860	;# 
   608     0F15                     RA5PPS          equ	3861	;# 
   609     0F16                     RA6PPS          equ	3862	;# 
   610     0F17                     RA7PPS          equ	3863	;# 
   611     0F18                     RB0PPS          equ	3864	;# 
   612     0F19                     RB1PPS          equ	3865	;# 
   613     0F1A                     RB2PPS          equ	3866	;# 
   614     0F1B                     RB3PPS          equ	3867	;# 
   615     0F1C                     RB4PPS          equ	3868	;# 
   616     0F1D                     RB5PPS          equ	3869	;# 
   617     0F1E                     RB6PPS          equ	3870	;# 
   618     0F1F                     RB7PPS          equ	3871	;# 
   619     0F20                     RC0PPS          equ	3872	;# 
   620     0F21                     RC1PPS          equ	3873	;# 
   621     0F22                     RC2PPS          equ	3874	;# 
   622     0F23                     RC3PPS          equ	3875	;# 
   623     0F24                     RC4PPS          equ	3876	;# 
   624     0F25                     RC5PPS          equ	3877	;# 
   625     0F26                     RC6PPS          equ	3878	;# 
   626     0F27                     RC7PPS          equ	3879	;# 
   627     0F28                     RD0PPS          equ	3880	;# 
   628     0F29                     RD1PPS          equ	3881	;# 
   629     0F2A                     RD2PPS          equ	3882	;# 
   630     0F2B                     RD3PPS          equ	3883	;# 
   631     0F2C                     RD4PPS          equ	3884	;# 
   632     0F2D                     RD5PPS          equ	3885	;# 
   633     0F2E                     RD6PPS          equ	3886	;# 
   634     0F2F                     RD7PPS          equ	3887	;# 
   635     0F30                     RE0PPS          equ	3888	;# 
   636     0F31                     RE1PPS          equ	3889	;# 
   637     0F32                     RE2PPS          equ	3890	;# 
   638     0F38                     ANSELA          equ	3896	;# 
   639     0F39                     WPUA            equ	3897	;# 
   640     0F3A                     ODCONA          equ	3898	;# 
   641     0F3B                     SLRCONA         equ	3899	;# 
   642     0F3C                     INLVLA          equ	3900	;# 
   643     0F3D                     IOCAP           equ	3901	;# 
   644     0F3E                     IOCAN           equ	3902	;# 
   645     0F3F                     IOCAF           equ	3903	;# 
   646     0F40                     CCDNA           equ	3904	;# 
   647     0F41                     CCDPA           equ	3905	;# 
   648     0F43                     ANSELB          equ	3907	;# 
   649     0F44                     WPUB            equ	3908	;# 
   650     0F45                     ODCONB          equ	3909	;# 
   651     0F46                     SLRCONB         equ	3910	;# 
   652     0F47                     INLVLB          equ	3911	;# 
   653     0F48                     IOCBP           equ	3912	;# 
   654     0F49                     IOCBN           equ	3913	;# 
   655     0F4A                     IOCBF           equ	3914	;# 
   656     0F4B                     CCDNB           equ	3915	;# 
   657     0F4C                     CCDPB           equ	3916	;# 
   658     0F4E                     ANSELC          equ	3918	;# 
   659     0F4F                     WPUC            equ	3919	;# 
   660     0F50                     ODCONC          equ	3920	;# 
   661     0F51                     SLRCONC         equ	3921	;# 
   662     0F52                     INLVLC          equ	3922	;# 
   663     0F53                     IOCCP           equ	3923	;# 
   664     0F54                     IOCCN           equ	3924	;# 
   665     0F55                     IOCCF           equ	3925	;# 
   666     0F56                     CCDNC           equ	3926	;# 
   667     0F57                     CCDPC           equ	3927	;# 
   668     0F59                     ANSELD          equ	3929	;# 
   669     0F5A                     WPUD            equ	3930	;# 
   670     0F5B                     ODCOND          equ	3931	;# 
   671     0F5C                     SLRCOND         equ	3932	;# 
   672     0F5D                     INLVLD          equ	3933	;# 
   673     0F61                     CCDND           equ	3937	;# 
   674     0F62                     CCDPD           equ	3938	;# 
   675     0F64                     ANSELE          equ	3940	;# 
   676     0F65                     WPUE            equ	3941	;# 
   677     0F66                     ODCONE          equ	3942	;# 
   678     0F67                     SLRCONE         equ	3943	;# 
   679     0F68                     INLVLE          equ	3944	;# 
   680     0F69                     IOCEP           equ	3945	;# 
   681     0F6A                     IOCEN           equ	3946	;# 
   682     0F6B                     IOCEF           equ	3947	;# 
   683     0F6C                     CCDNE           equ	3948	;# 
   684     0F6D                     CCDPE           equ	3949	;# 
   685     0FE4                     STATUS_SHAD     equ	4068	;# 
   686     0FE5                     WREG_SHAD       equ	4069	;# 
   687     0FE6                     BSR_SHAD        equ	4070	;# 
   688     0FE7                     PCLATH_SHAD     equ	4071	;# 
   689     0FE8                     FSR0L_SHAD      equ	4072	;# 
   690     0FE9                     FSR0H_SHAD      equ	4073	;# 
   691     0FEA                     FSR1L_SHAD      equ	4074	;# 
   692     0FEB                     FSR1H_SHAD      equ	4075	;# 
   693     0FED                     STKPTR          equ	4077	;# 
   694     0FEE                     TOSL            equ	4078	;# 
   695     0FEF                     TOSH            equ	4079	;# 
   696     0000                     INDF0           equ	0	;# 
   697     0001                     INDF1           equ	1	;# 
   698     0002                     PCL             equ	2	;# 
   699     0003                     STATUS          equ	3	;# 
   700     0004                     FSR0L           equ	4	;# 
   701     0005                     FSR0H           equ	5	;# 
   702     0006                     FSR1L           equ	6	;# 
   703     0007                     FSR1H           equ	7	;# 
   704     0008                     BSR             equ	8	;# 
   705     0009                     WREG            equ	9	;# 
   706     000A                     PCLATH          equ	10	;# 
   707     000B                     INTCON          equ	11	;# 
   708     000C                     PORTA           equ	12	;# 
   709     000D                     PORTB           equ	13	;# 
   710     000E                     PORTC           equ	14	;# 
   711     000F                     PORTD           equ	15	;# 
   712     0010                     PORTE           equ	16	;# 
   713     0011                     TRISA           equ	17	;# 
   714     0012                     TRISB           equ	18	;# 
   715     0013                     TRISC           equ	19	;# 
   716     0014                     TRISD           equ	20	;# 
   717     0015                     TRISE           equ	21	;# 
   718     0016                     LATA            equ	22	;# 
   719     0017                     LATB            equ	23	;# 
   720     0018                     LATC            equ	24	;# 
   721     0019                     LATD            equ	25	;# 
   722     001A                     LATE            equ	26	;# 
   723     001C                     TMR0L           equ	28	;# 
   724     001C                     TMR0            equ	28	;# 
   725     001D                     TMR0H           equ	29	;# 
   726     001D                     PR0             equ	29	;# 
   727     001E                     T0CON0          equ	30	;# 
   728     001F                     T0CON1          equ	31	;# 
   729     008C                     ADRES           equ	140	;# 
   730     008C                     ADRESL          equ	140	;# 
   731     008D                     ADRESH          equ	141	;# 
   732     008E                     ADPREV          equ	142	;# 
   733     008E                     ADPREVL         equ	142	;# 
   734     008F                     ADPREVH         equ	143	;# 
   735     0090                     ADACC           equ	144	;# 
   736     0090                     ADACCL          equ	144	;# 
   737     0091                     ADACCH          equ	145	;# 
   738     0093                     ADCON0          equ	147	;# 
   739     0094                     ADCON1          equ	148	;# 
   740     0095                     ADCON2          equ	149	;# 
   741     0096                     ADCON3          equ	150	;# 
   742     0097                     ADSTAT          equ	151	;# 
   743     0098                     ADCLK           equ	152	;# 
   744     0099                     ADACT           equ	153	;# 
   745     009A                     ADREF           equ	154	;# 
   746     009B                     ADCAP           equ	155	;# 
   747     009C                     ADPRE           equ	156	;# 
   748     009D                     ADACQ           equ	157	;# 
   749     009E                     ADPCH           equ	158	;# 
   750     010C                     ADCNT           equ	268	;# 
   751     010D                     ADRPT           equ	269	;# 
   752     010E                     ADLTH           equ	270	;# 
   753     010E                     ADLTHL          equ	270	;# 
   754     010F                     ADLTHH          equ	271	;# 
   755     0110                     ADUTH           equ	272	;# 
   756     0110                     ADUTHL          equ	272	;# 
   757     0111                     ADUTHH          equ	273	;# 
   758     0112                     ADSTPT          equ	274	;# 
   759     0112                     ADSTPTL         equ	274	;# 
   760     0113                     ADSTPTH         equ	275	;# 
   761     0114                     ADFLTR          equ	276	;# 
   762     0114                     ADFLTRL         equ	276	;# 
   763     0115                     ADFLTRH         equ	277	;# 
   764     0116                     ADERR           equ	278	;# 
   765     0116                     ADERRL          equ	278	;# 
   766     0117                     ADERRH          equ	279	;# 
   767     0119                     RC1REG          equ	281	;# 
   768     0119                     RCREG           equ	281	;# 
   769     0119                     RCREG1          equ	281	;# 
   770     011A                     TX1REG          equ	282	;# 
   771     011A                     TXREG1          equ	282	;# 
   772     011A                     TXREG           equ	282	;# 
   773     011B                     SP1BRG          equ	283	;# 
   774     011B                     SP1BRGL         equ	283	;# 
   775     011B                     SPBRG           equ	283	;# 
   776     011B                     SPBRG1          equ	283	;# 
   777     011B                     SPBRGL          equ	283	;# 
   778     011C                     SP1BRGH         equ	284	;# 
   779     011C                     SPBRGH          equ	284	;# 
   780     011C                     SPBRGH1         equ	284	;# 
   781     011D                     RC1STA          equ	285	;# 
   782     011D                     RCSTA1          equ	285	;# 
   783     011D                     RCSTA           equ	285	;# 
   784     011E                     TX1STA          equ	286	;# 
   785     011E                     TXSTA1          equ	286	;# 
   786     011E                     TXSTA           equ	286	;# 
   787     011F                     BAUD1CON        equ	287	;# 
   788     011F                     BAUDCON1        equ	287	;# 
   789     011F                     BAUDCTL1        equ	287	;# 
   790     011F                     BAUDCON         equ	287	;# 
   791     011F                     BAUDCTL         equ	287	;# 
   792     018C                     SSP1BUF         equ	396	;# 
   793     018D                     SSP1ADD         equ	397	;# 
   794     018E                     SSP1MSK         equ	398	;# 
   795     018F                     SSP1STAT        equ	399	;# 
   796     0190                     SSP1CON1        equ	400	;# 
   797     0191                     SSP1CON2        equ	401	;# 
   798     0192                     SSP1CON3        equ	402	;# 
   799     0196                     SSP2BUF         equ	406	;# 
   800     0197                     SSP2ADD         equ	407	;# 
   801     0198                     SSP2MSK         equ	408	;# 
   802     0199                     SSP2STAT        equ	409	;# 
   803     019A                     SSP2CON1        equ	410	;# 
   804     019B                     SSP2CON2        equ	411	;# 
   805     019C                     SSP2CON3        equ	412	;# 
   806     020C                     TMR1            equ	524	;# 
   807     020C                     TMR1L           equ	524	;# 
   808     020D                     TMR1H           equ	525	;# 
   809     020E                     T1CON           equ	526	;# 
   810     020F                     T1GCON          equ	527	;# 
   811     020F                     PR1             equ	527	;# 
   812     0210                     T1GATE          equ	528	;# 
   813     0210                     TMR1GATE        equ	528	;# 
   814     0211                     T1CLK           equ	529	;# 
   815     0211                     TMR1CLK         equ	529	;# 
   816     0212                     TMR3            equ	530	;# 
   817     0212                     TMR3L           equ	530	;# 
   818     0213                     TMR3H           equ	531	;# 
   819     0214                     T3CON           equ	532	;# 
   820     0215                     T3GCON          equ	533	;# 
   821     0215                     PR3             equ	533	;# 
   822     0216                     T3GATE          equ	534	;# 
   823     0216                     TMR3GATE        equ	534	;# 
   824     0217                     T3CLK           equ	535	;# 
   825     0217                     TMR3CLK         equ	535	;# 
   826     0218                     TMR5            equ	536	;# 
   827     0218                     TMR5L           equ	536	;# 
   828     0219                     TMR5H           equ	537	;# 
   829     021A                     T5CON           equ	538	;# 
   830     021B                     T5GCON          equ	539	;# 
   831     021B                     PR5             equ	539	;# 
   832     021C                     T5GATE          equ	540	;# 
   833     021C                     TMR5GATE        equ	540	;# 
   834     021D                     T5CLK           equ	541	;# 
   835     021D                     TMR5CLK         equ	541	;# 
   836     021E                     CCPTMRS0        equ	542	;# 
   837     021F                     CCPTMRS1        equ	543	;# 
   838     028C                     T2TMR           equ	652	;# 
   839     028C                     TMR2            equ	652	;# 
   840     028D                     T2PR            equ	653	;# 
   841     028D                     PR2             equ	653	;# 
   842     028E                     T2CON           equ	654	;# 
   843     028F                     T2HLT           equ	655	;# 
   844     0290                     T2CLKCON        equ	656	;# 
   845     0290                     T2CLK           equ	656	;# 
   846     0291                     T2RST           equ	657	;# 
   847     0292                     T4TMR           equ	658	;# 
   848     0292                     TMR4            equ	658	;# 
   849     0293                     T4PR            equ	659	;# 
   850     0293                     PR4             equ	659	;# 
   851     0294                     T4CON           equ	660	;# 
   852     0295                     T4HLT           equ	661	;# 
   853     0296                     T4CLKCON        equ	662	;# 
   854     0296                     T4CLK           equ	662	;# 
   855     0297                     T4RST           equ	663	;# 
   856     0298                     T6TMR           equ	664	;# 
   857     0298                     TMR6            equ	664	;# 
   858     0299                     T6PR            equ	665	;# 
   859     0299                     PR6             equ	665	;# 
   860     029A                     T6CON           equ	666	;# 
   861     029B                     T6HLT           equ	667	;# 
   862     029C                     T6CLKCON        equ	668	;# 
   863     029C                     T6CLK           equ	668	;# 
   864     029D                     T6RST           equ	669	;# 
   865     030C                     CCPR1           equ	780	;# 
   866     030C                     CCPR1L          equ	780	;# 
   867     030D                     CCPR1H          equ	781	;# 
   868     030E                     CCP1CON         equ	782	;# 
   869     030F                     CCP1CAP         equ	783	;# 
   870     0310                     CCPR2           equ	784	;# 
   871     0310                     CCPR2L          equ	784	;# 
   872     0311                     CCPR2H          equ	785	;# 
   873     0312                     CCP2CON         equ	786	;# 
   874     0313                     CCP2CAP         equ	787	;# 
   875     0314                     CCPR3           equ	788	;# 
   876     0314                     CCPR3L          equ	788	;# 
   877     0315                     CCPR3H          equ	789	;# 
   878     0316                     CCP3CON         equ	790	;# 
   879     0317                     CCP3CAP         equ	791	;# 
   880     0318                     CCPR4           equ	792	;# 
   881     0318                     CCPR4L          equ	792	;# 
   882     0319                     CCPR4H          equ	793	;# 
   883     031A                     CCP4CON         equ	794	;# 
   884     031B                     CCP4CAP         equ	795	;# 
   885     031C                     CCPR5           equ	796	;# 
   886     031C                     CCPR5L          equ	796	;# 
   887     031D                     CCPR5H          equ	797	;# 
   888     031E                     CCP5CON         equ	798	;# 
   889     031F                     CCP5CAP         equ	799	;# 
   890     038C                     PWM6DC          equ	908	;# 
   891     038C                     PWM6DCL         equ	908	;# 
   892     038D                     PWM6DCH         equ	909	;# 
   893     038E                     PWM6CON         equ	910	;# 
   894     0390                     PWM7DC          equ	912	;# 
   895     0390                     PWM7DCL         equ	912	;# 
   896     0391                     PWM7DCH         equ	913	;# 
   897     0392                     PWM7CON         equ	914	;# 
   898     040C                     SCANLADRL       equ	1036	;# 
   899     040D                     SCANLADRH       equ	1037	;# 
   900     040E                     SCANHADRL       equ	1038	;# 
   901     040F                     SCANHADRH       equ	1039	;# 
   902     0410                     SCANCON0        equ	1040	;# 
   903     0411                     SCANTRIG        equ	1041	;# 
   904     0416                     CRCDATA         equ	1046	;# 
   905     0416                     CRCDATL         equ	1046	;# 
   906     0417                     CRCDATH         equ	1047	;# 
   907     0418                     CRCACC          equ	1048	;# 
   908     0418                     CRCACCL         equ	1048	;# 
   909     0419                     CRCACCH         equ	1049	;# 
   910     041A                     CRCSHFT         equ	1050	;# 
   911     041A                     CRCSHIFTL       equ	1050	;# 
   912     041B                     CRCSHIFTH       equ	1051	;# 
   913     041C                     CRCXOR          equ	1052	;# 
   914     041C                     CRCXORL         equ	1052	;# 
   915     041D                     CRCXORH         equ	1053	;# 
   916     041E                     CRCCON0         equ	1054	;# 
   917     041F                     CRCCON1         equ	1055	;# 
   918     048C                     SMT1TMR         equ	1164	;# 
   919     048C                     SMT1TMRL        equ	1164	;# 
   920     048D                     SMT1TMRH        equ	1165	;# 
   921     048E                     SMT1TMRU        equ	1166	;# 
   922     048F                     SMT1CPR         equ	1167	;# 
   923     048F                     SMT1CPRL        equ	1167	;# 
   924     0490                     SMT1CPRH        equ	1168	;# 
   925     0491                     SMT1CPRU        equ	1169	;# 
   926     0492                     SMT1CPW         equ	1170	;# 
   927     0492                     SMT1CPWL        equ	1170	;# 
   928     0493                     SMT1CPWH        equ	1171	;# 
   929     0494                     SMT1CPWU        equ	1172	;# 
   930     0495                     SMT1PR          equ	1173	;# 
   931     0495                     SMT1PRL         equ	1173	;# 
   932     0496                     SMT1PRH         equ	1174	;# 
   933     0497                     SMT1PRU         equ	1175	;# 
   934     0498                     SMT1CON0        equ	1176	;# 
   935     0499                     SMT1CON1        equ	1177	;# 
   936     049A                     SMT1STAT        equ	1178	;# 
   937     049B                     SMT1CLK         equ	1179	;# 
   938     049C                     SMT1SIG         equ	1180	;# 
   939     049D                     SMT1WIN         equ	1181	;# 
   940     050C                     SMT2TMR         equ	1292	;# 
   941     050C                     SMT2TMRL        equ	1292	;# 
   942     050D                     SMT2TMRH        equ	1293	;# 
   943     050E                     SMT2TMRU        equ	1294	;# 
   944     050F                     SMT2CPR         equ	1295	;# 
   945     050F                     SMT2CPRL        equ	1295	;# 
   946     0510                     SMT2CPRH        equ	1296	;# 
   947     0511                     SMT2CPRU        equ	1297	;# 
   948     0512                     SMT2CPW         equ	1298	;# 
   949     0512                     SMT2CPWL        equ	1298	;# 
   950     0513                     SMT2CPWH        equ	1299	;# 
   951     0514                     SMT2CPWU        equ	1300	;# 
   952     0515                     SMT2PR          equ	1301	;# 
   953     0515                     SMT2PRL         equ	1301	;# 
   954     0516                     SMT2PRH         equ	1302	;# 
   955     0517                     SMT2PRU         equ	1303	;# 
   956     0518                     SMT2CON0        equ	1304	;# 
   957     0519                     SMT2CON1        equ	1305	;# 
   958     051A                     SMT2STAT        equ	1306	;# 
   959     051B                     SMT2CLK         equ	1307	;# 
   960     051C                     SMT2SIG         equ	1308	;# 
   961     051D                     SMT2WIN         equ	1309	;# 
   962     058C                     NCO1ACC         equ	1420	;# 
   963     058C                     NCO1ACCL        equ	1420	;# 
   964     058D                     NCO1ACCH        equ	1421	;# 
   965     058E                     NCO1ACCU        equ	1422	;# 
   966     058F                     NCO1INC         equ	1423	;# 
   967     058F                     NCO1INCL        equ	1423	;# 
   968     0590                     NCO1INCH        equ	1424	;# 
   969     0591                     NCO1INCU        equ	1425	;# 
   970     0592                     NCO1CON         equ	1426	;# 
   971     0593                     NCO1CLK         equ	1427	;# 
   972     060C                     CWG1CLKCON      equ	1548	;# 
   973     060D                     CWG1ISM         equ	1549	;# 
   974     060E                     CWG1DBR         equ	1550	;# 
   975     060F                     CWG1DBF         equ	1551	;# 
   976     0610                     CWG1CON0        equ	1552	;# 
   977     0611                     CWG1CON1        equ	1553	;# 
   978     0612                     CWG1AS0         equ	1554	;# 
   979     0613                     CWG1AS1         equ	1555	;# 
   980     0614                     CWG1STR         equ	1556	;# 
   981     0616                     CWG2CLKCON      equ	1558	;# 
   982     0617                     CWG2ISM         equ	1559	;# 
   983     0618                     CWG2DBR         equ	1560	;# 
   984     0619                     CWG2DBF         equ	1561	;# 
   985     061A                     CWG2CON0        equ	1562	;# 
   986     061B                     CWG2CON1        equ	1563	;# 
   987     061C                     CWG2AS0         equ	1564	;# 
   988     061D                     CWG2AS1         equ	1565	;# 
   989     061E                     CWG2STR         equ	1566	;# 
   990     068C                     CWG3CLKCON      equ	1676	;# 
   991     068D                     CWG3ISM         equ	1677	;# 
   992     068E                     CWG3DBR         equ	1678	;# 
   993     068F                     CWG3DBF         equ	1679	;# 
   994     0690                     CWG3CON0        equ	1680	;# 
   995     0691                     CWG3CON1        equ	1681	;# 
   996     0692                     CWG3AS0         equ	1682	;# 
   997     0693                     CWG3AS1         equ	1683	;# 
   998     0694                     CWG3STR         equ	1684	;# 
   999     070C                     PIR0            equ	1804	;# 
  1000     070D                     PIR1            equ	1805	;# 
  1001     070E                     PIR2            equ	1806	;# 
  1002     070F                     PIR3            equ	1807	;# 
  1003     0710                     PIR4            equ	1808	;# 
  1004     0711                     PIR5            equ	1809	;# 
  1005     0712                     PIR6            equ	1810	;# 
  1006     0713                     PIR7            equ	1811	;# 
  1007     0714                     PIR8            equ	1812	;# 
  1008     0716                     PIE0            equ	1814	;# 
  1009     0717                     PIE1            equ	1815	;# 
  1010     0718                     PIE2            equ	1816	;# 
  1011     0719                     PIE3            equ	1817	;# 
  1012     071A                     PIE4            equ	1818	;# 
  1013     071B                     PIE5            equ	1819	;# 
  1014     071C                     PIE6            equ	1820	;# 
  1015     071D                     PIE7            equ	1821	;# 
  1016     071E                     PIE8            equ	1822	;# 
  1017     0796                     PMD0            equ	1942	;# 
  1018     0797                     PMD1            equ	1943	;# 
  1019     0798                     PMD2            equ	1944	;# 
  1020     0799                     PMD3            equ	1945	;# 
  1021     079A                     PMD4            equ	1946	;# 
  1022     079B                     PMD5            equ	1947	;# 
  1023     080C                     WDTCON0         equ	2060	;# 
  1024     080D                     WDTCON1         equ	2061	;# 
  1025     080E                     WDTPSL          equ	2062	;# 
  1026     080F                     WDTPSH          equ	2063	;# 
  1027     0810                     WDTTMR          equ	2064	;# 
  1028     0811                     BORCON          equ	2065	;# 
  1029     0812                     VREGCON         equ	2066	;# 
  1030     0813                     PCON0           equ	2067	;# 
  1031     0814                     CCDCON          equ	2068	;# 
  1032     081A                     NVMADRL         equ	2074	;# 
  1033     081B                     NVMADRH         equ	2075	;# 
  1034     081C                     NVMDATL         equ	2076	;# 
  1035     081D                     NVMDATH         equ	2077	;# 
  1036     081E                     NVMCON1         equ	2078	;# 
  1037     081F                     NVMCON2         equ	2079	;# 
  1038     088C                     CPUDOZE         equ	2188	;# 
  1039     088D                     OSCCON1         equ	2189	;# 
  1040     088E                     OSCCON2         equ	2190	;# 
  1041     088F                     OSCCON3         equ	2191	;# 
  1042     0890                     OSCSTAT         equ	2192	;# 
  1043     0891                     OSCEN           equ	2193	;# 
  1044     0892                     OSCTUNE         equ	2194	;# 
  1045     0893                     OSCFRQ          equ	2195	;# 
  1046     0895                     CLKRCON         equ	2197	;# 
  1047     0896                     CLKRCLK         equ	2198	;# 
  1048     0897                     MDCON0          equ	2199	;# 
  1049     0898                     MDCON1          equ	2200	;# 
  1050     0899                     MDSRC           equ	2201	;# 
  1051     089A                     MDCARL          equ	2202	;# 
  1052     089B                     MDCARH          equ	2203	;# 
  1053     090C                     FVRCON          equ	2316	;# 
  1054     090E                     DAC1CON0        equ	2318	;# 
  1055     090F                     DAC1CON1        equ	2319	;# 
  1056     091F                     ZCD1CON         equ	2335	;# 
  1057     091F                     ZCDCON          equ	2335	;# 
  1058     098F                     CMOUT           equ	2447	;# 
  1059     098F                     CMSTAT          equ	2447	;# 
  1060     0990                     CM1CON0         equ	2448	;# 
  1061     0991                     CM1CON1         equ	2449	;# 
  1062     0992                     CM1NSEL         equ	2450	;# 
  1063     0993                     CM1PSEL         equ	2451	;# 
  1064     0994                     CM2CON0         equ	2452	;# 
  1065     0995                     CM2CON1         equ	2453	;# 
  1066     0996                     CM2NSEL         equ	2454	;# 
  1067     0997                     CM2PSEL         equ	2455	;# 
  1068     0E0F                     CLCDATA         equ	3599	;# 
  1069     0E10                     CLC1CON         equ	3600	;# 
  1070     0E11                     CLC1POL         equ	3601	;# 
  1071     0E12                     CLC1SEL0        equ	3602	;# 
  1072     0E13                     CLC1SEL1        equ	3603	;# 
  1073     0E14                     CLC1SEL2        equ	3604	;# 
  1074     0E15                     CLC1SEL3        equ	3605	;# 
  1075     0E16                     CLC1GLS0        equ	3606	;# 
  1076     0E17                     CLC1GLS1        equ	3607	;# 
  1077     0E18                     CLC1GLS2        equ	3608	;# 
  1078     0E19                     CLC1GLS3        equ	3609	;# 
  1079     0E1A                     CLC2CON         equ	3610	;# 
  1080     0E1B                     CLC2POL         equ	3611	;# 
  1081     0E1C                     CLC2SEL0        equ	3612	;# 
  1082     0E1D                     CLC2SEL1        equ	3613	;# 
  1083     0E1E                     CLC2SEL2        equ	3614	;# 
  1084     0E1F                     CLC2SEL3        equ	3615	;# 
  1085     0E20                     CLC2GLS0        equ	3616	;# 
  1086     0E21                     CLC2GLS1        equ	3617	;# 
  1087     0E22                     CLC2GLS2        equ	3618	;# 
  1088     0E23                     CLC2GLS3        equ	3619	;# 
  1089     0E24                     CLC3CON         equ	3620	;# 
  1090     0E25                     CLC3POL         equ	3621	;# 
  1091     0E26                     CLC3SEL0        equ	3622	;# 
  1092     0E27                     CLC3SEL1        equ	3623	;# 
  1093     0E28                     CLC3SEL2        equ	3624	;# 
  1094     0E29                     CLC3SEL3        equ	3625	;# 
  1095     0E2A                     CLC3GLS0        equ	3626	;# 
  1096     0E2B                     CLC3GLS1        equ	3627	;# 
  1097     0E2C                     CLC3GLS2        equ	3628	;# 
  1098     0E2D                     CLC3GLS3        equ	3629	;# 
  1099     0E2E                     CLC4CON         equ	3630	;# 
  1100     0E2F                     CLC4POL         equ	3631	;# 
  1101     0E30                     CLC4SEL0        equ	3632	;# 
  1102     0E31                     CLC4SEL1        equ	3633	;# 
  1103     0E32                     CLC4SEL2        equ	3634	;# 
  1104     0E33                     CLC4SEL3        equ	3635	;# 
  1105     0E34                     CLC4GLS0        equ	3636	;# 
  1106     0E35                     CLC4GLS1        equ	3637	;# 
  1107     0E36                     CLC4GLS2        equ	3638	;# 
  1108     0E37                     CLC4GLS3        equ	3639	;# 
  1109     0E8F                     PPSLOCK         equ	3727	;# 
  1110     0E90                     INTPPS          equ	3728	;# 
  1111     0E91                     T0CKIPPS        equ	3729	;# 
  1112     0E92                     T1CKIPPS        equ	3730	;# 
  1113     0E93                     T1GPPS          equ	3731	;# 
  1114     0E94                     T3CKIPPS        equ	3732	;# 
  1115     0E95                     T3GPPS          equ	3733	;# 
  1116     0E96                     T5CKIPPS        equ	3734	;# 
  1117     0E97                     T5GPPS          equ	3735	;# 
  1118     0E9C                     T2AINPPS        equ	3740	;# 
  1119     0E9D                     T4AINPPS        equ	3741	;# 
  1120     0E9E                     T6AINPPS        equ	3742	;# 
  1121     0EA1                     CCP1PPS         equ	3745	;# 
  1122     0EA2                     CCP2PPS         equ	3746	;# 
  1123     0EA3                     CCP3PPS         equ	3747	;# 
  1124     0EA4                     CCP4PPS         equ	3748	;# 
  1125     0EA5                     CCP5PPS         equ	3749	;# 
  1126     0EA9                     SMT1WINPPS      equ	3753	;# 
  1127     0EAA                     SMT1SIGPPS      equ	3754	;# 
  1128     0EAB                     SMT2WINPPS      equ	3755	;# 
  1129     0EAC                     SMT2SIGPPS      equ	3756	;# 
  1130     0EB1                     CWG1PPS         equ	3761	;# 
  1131     0EB2                     CWG2PPS         equ	3762	;# 
  1132     0EB3                     CWG3PPS         equ	3763	;# 
  1133     0EB8                     MDCARLPPS       equ	3768	;# 
  1134     0EB9                     MDCARHPPS       equ	3769	;# 
  1135     0EBA                     MDSRCPPS        equ	3770	;# 
  1136     0EBB                     CLCIN0PPS       equ	3771	;# 
  1137     0EBC                     CLCIN1PPS       equ	3772	;# 
  1138     0EBD                     CLCIN2PPS       equ	3773	;# 
  1139     0EBE                     CLCIN3PPS       equ	3774	;# 
  1140     0EC3                     ADCACTPPS       equ	3779	;# 
  1141     0EC5                     SSP1CLKPPS      equ	3781	;# 
  1142     0EC6                     SSP1DATPPS      equ	3782	;# 
  1143     0EC7                     SSP1SSPPS       equ	3783	;# 
  1144     0EC8                     SSP2CLKPPS      equ	3784	;# 
  1145     0EC9                     SSP2DATPPS      equ	3785	;# 
  1146     0ECA                     SSP2SSPPS       equ	3786	;# 
  1147     0ECB                     RXPPS           equ	3787	;# 
  1148     0ECC                     TXPPS           equ	3788	;# 
  1149     0F10                     RA0PPS          equ	3856	;# 
  1150     0F11                     RA1PPS          equ	3857	;# 
  1151     0F12                     RA2PPS          equ	3858	;# 
  1152     0F13                     RA3PPS          equ	3859	;# 
  1153     0F14                     RA4PPS          equ	3860	;# 
  1154     0F15                     RA5PPS          equ	3861	;# 
  1155     0F16                     RA6PPS          equ	3862	;# 
  1156     0F17                     RA7PPS          equ	3863	;# 
  1157     0F18                     RB0PPS          equ	3864	;# 
  1158     0F19                     RB1PPS          equ	3865	;# 
  1159     0F1A                     RB2PPS          equ	3866	;# 
  1160     0F1B                     RB3PPS          equ	3867	;# 
  1161     0F1C                     RB4PPS          equ	3868	;# 
  1162     0F1D                     RB5PPS          equ	3869	;# 
  1163     0F1E                     RB6PPS          equ	3870	;# 
  1164     0F1F                     RB7PPS          equ	3871	;# 
  1165     0F20                     RC0PPS          equ	3872	;# 
  1166     0F21                     RC1PPS          equ	3873	;# 
  1167     0F22                     RC2PPS          equ	3874	;# 
  1168     0F23                     RC3PPS          equ	3875	;# 
  1169     0F24                     RC4PPS          equ	3876	;# 
  1170     0F25                     RC5PPS          equ	3877	;# 
  1171     0F26                     RC6PPS          equ	3878	;# 
  1172     0F27                     RC7PPS          equ	3879	;# 
  1173     0F28                     RD0PPS          equ	3880	;# 
  1174     0F29                     RD1PPS          equ	3881	;# 
  1175     0F2A                     RD2PPS          equ	3882	;# 
  1176     0F2B                     RD3PPS          equ	3883	;# 
  1177     0F2C                     RD4PPS          equ	3884	;# 
  1178     0F2D                     RD5PPS          equ	3885	;# 
  1179     0F2E                     RD6PPS          equ	3886	;# 
  1180     0F2F                     RD7PPS          equ	3887	;# 
  1181     0F30                     RE0PPS          equ	3888	;# 
  1182     0F31                     RE1PPS          equ	3889	;# 
  1183     0F32                     RE2PPS          equ	3890	;# 
  1184     0F38                     ANSELA          equ	3896	;# 
  1185     0F39                     WPUA            equ	3897	;# 
  1186     0F3A                     ODCONA          equ	3898	;# 
  1187     0F3B                     SLRCONA         equ	3899	;# 
  1188     0F3C                     INLVLA          equ	3900	;# 
  1189     0F3D                     IOCAP           equ	3901	;# 
  1190     0F3E                     IOCAN           equ	3902	;# 
  1191     0F3F                     IOCAF           equ	3903	;# 
  1192     0F40                     CCDNA           equ	3904	;# 
  1193     0F41                     CCDPA           equ	3905	;# 
  1194     0F43                     ANSELB          equ	3907	;# 
  1195     0F44                     WPUB            equ	3908	;# 
  1196     0F45                     ODCONB          equ	3909	;# 
  1197     0F46                     SLRCONB         equ	3910	;# 
  1198     0F47                     INLVLB          equ	3911	;# 
  1199     0F48                     IOCBP           equ	3912	;# 
  1200     0F49                     IOCBN           equ	3913	;# 
  1201     0F4A                     IOCBF           equ	3914	;# 
  1202     0F4B                     CCDNB           equ	3915	;# 
  1203     0F4C                     CCDPB           equ	3916	;# 
  1204     0F4E                     ANSELC          equ	3918	;# 
  1205     0F4F                     WPUC            equ	3919	;# 
  1206     0F50                     ODCONC          equ	3920	;# 
  1207     0F51                     SLRCONC         equ	3921	;# 
  1208     0F52                     INLVLC          equ	3922	;# 
  1209     0F53                     IOCCP           equ	3923	;# 
  1210     0F54                     IOCCN           equ	3924	;# 
  1211     0F55                     IOCCF           equ	3925	;# 
  1212     0F56                     CCDNC           equ	3926	;# 
  1213     0F57                     CCDPC           equ	3927	;# 
  1214     0F59                     ANSELD          equ	3929	;# 
  1215     0F5A                     WPUD            equ	3930	;# 
  1216     0F5B                     ODCOND          equ	3931	;# 
  1217     0F5C                     SLRCOND         equ	3932	;# 
  1218     0F5D                     INLVLD          equ	3933	;# 
  1219     0F61                     CCDND           equ	3937	;# 
  1220     0F62                     CCDPD           equ	3938	;# 
  1221     0F64                     ANSELE          equ	3940	;# 
  1222     0F65                     WPUE            equ	3941	;# 
  1223     0F66                     ODCONE          equ	3942	;# 
  1224     0F67                     SLRCONE         equ	3943	;# 
  1225     0F68                     INLVLE          equ	3944	;# 
  1226     0F69                     IOCEP           equ	3945	;# 
  1227     0F6A                     IOCEN           equ	3946	;# 
  1228     0F6B                     IOCEF           equ	3947	;# 
  1229     0F6C                     CCDNE           equ	3948	;# 
  1230     0F6D                     CCDPE           equ	3949	;# 
  1231     0FE4                     STATUS_SHAD     equ	4068	;# 
  1232     0FE5                     WREG_SHAD       equ	4069	;# 
  1233     0FE6                     BSR_SHAD        equ	4070	;# 
  1234     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1235     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1236     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1237     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1238     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1239     0FED                     STKPTR          equ	4077	;# 
  1240     0FEE                     TOSL            equ	4078	;# 
  1241     0FEF                     TOSH            equ	4079	;# 
  1242     0000                     INDF0           equ	0	;# 
  1243     0001                     INDF1           equ	1	;# 
  1244     0002                     PCL             equ	2	;# 
  1245     0003                     STATUS          equ	3	;# 
  1246     0004                     FSR0L           equ	4	;# 
  1247     0005                     FSR0H           equ	5	;# 
  1248     0006                     FSR1L           equ	6	;# 
  1249     0007                     FSR1H           equ	7	;# 
  1250     0008                     BSR             equ	8	;# 
  1251     0009                     WREG            equ	9	;# 
  1252     000A                     PCLATH          equ	10	;# 
  1253     000B                     INTCON          equ	11	;# 
  1254     000C                     PORTA           equ	12	;# 
  1255     000D                     PORTB           equ	13	;# 
  1256     000E                     PORTC           equ	14	;# 
  1257     000F                     PORTD           equ	15	;# 
  1258     0010                     PORTE           equ	16	;# 
  1259     0011                     TRISA           equ	17	;# 
  1260     0012                     TRISB           equ	18	;# 
  1261     0013                     TRISC           equ	19	;# 
  1262     0014                     TRISD           equ	20	;# 
  1263     0015                     TRISE           equ	21	;# 
  1264     0016                     LATA            equ	22	;# 
  1265     0017                     LATB            equ	23	;# 
  1266     0018                     LATC            equ	24	;# 
  1267     0019                     LATD            equ	25	;# 
  1268     001A                     LATE            equ	26	;# 
  1269     001C                     TMR0L           equ	28	;# 
  1270     001C                     TMR0            equ	28	;# 
  1271     001D                     TMR0H           equ	29	;# 
  1272     001D                     PR0             equ	29	;# 
  1273     001E                     T0CON0          equ	30	;# 
  1274     001F                     T0CON1          equ	31	;# 
  1275     008C                     ADRES           equ	140	;# 
  1276     008C                     ADRESL          equ	140	;# 
  1277     008D                     ADRESH          equ	141	;# 
  1278     008E                     ADPREV          equ	142	;# 
  1279     008E                     ADPREVL         equ	142	;# 
  1280     008F                     ADPREVH         equ	143	;# 
  1281     0090                     ADACC           equ	144	;# 
  1282     0090                     ADACCL          equ	144	;# 
  1283     0091                     ADACCH          equ	145	;# 
  1284     0093                     ADCON0          equ	147	;# 
  1285     0094                     ADCON1          equ	148	;# 
  1286     0095                     ADCON2          equ	149	;# 
  1287     0096                     ADCON3          equ	150	;# 
  1288     0097                     ADSTAT          equ	151	;# 
  1289     0098                     ADCLK           equ	152	;# 
  1290     0099                     ADACT           equ	153	;# 
  1291     009A                     ADREF           equ	154	;# 
  1292     009B                     ADCAP           equ	155	;# 
  1293     009C                     ADPRE           equ	156	;# 
  1294     009D                     ADACQ           equ	157	;# 
  1295     009E                     ADPCH           equ	158	;# 
  1296     010C                     ADCNT           equ	268	;# 
  1297     010D                     ADRPT           equ	269	;# 
  1298     010E                     ADLTH           equ	270	;# 
  1299     010E                     ADLTHL          equ	270	;# 
  1300     010F                     ADLTHH          equ	271	;# 
  1301     0110                     ADUTH           equ	272	;# 
  1302     0110                     ADUTHL          equ	272	;# 
  1303     0111                     ADUTHH          equ	273	;# 
  1304     0112                     ADSTPT          equ	274	;# 
  1305     0112                     ADSTPTL         equ	274	;# 
  1306     0113                     ADSTPTH         equ	275	;# 
  1307     0114                     ADFLTR          equ	276	;# 
  1308     0114                     ADFLTRL         equ	276	;# 
  1309     0115                     ADFLTRH         equ	277	;# 
  1310     0116                     ADERR           equ	278	;# 
  1311     0116                     ADERRL          equ	278	;# 
  1312     0117                     ADERRH          equ	279	;# 
  1313     0119                     RC1REG          equ	281	;# 
  1314     0119                     RCREG           equ	281	;# 
  1315     0119                     RCREG1          equ	281	;# 
  1316     011A                     TX1REG          equ	282	;# 
  1317     011A                     TXREG1          equ	282	;# 
  1318     011A                     TXREG           equ	282	;# 
  1319     011B                     SP1BRG          equ	283	;# 
  1320     011B                     SP1BRGL         equ	283	;# 
  1321     011B                     SPBRG           equ	283	;# 
  1322     011B                     SPBRG1          equ	283	;# 
  1323     011B                     SPBRGL          equ	283	;# 
  1324     011C                     SP1BRGH         equ	284	;# 
  1325     011C                     SPBRGH          equ	284	;# 
  1326     011C                     SPBRGH1         equ	284	;# 
  1327     011D                     RC1STA          equ	285	;# 
  1328     011D                     RCSTA1          equ	285	;# 
  1329     011D                     RCSTA           equ	285	;# 
  1330     011E                     TX1STA          equ	286	;# 
  1331     011E                     TXSTA1          equ	286	;# 
  1332     011E                     TXSTA           equ	286	;# 
  1333     011F                     BAUD1CON        equ	287	;# 
  1334     011F                     BAUDCON1        equ	287	;# 
  1335     011F                     BAUDCTL1        equ	287	;# 
  1336     011F                     BAUDCON         equ	287	;# 
  1337     011F                     BAUDCTL         equ	287	;# 
  1338     018C                     SSP1BUF         equ	396	;# 
  1339     018D                     SSP1ADD         equ	397	;# 
  1340     018E                     SSP1MSK         equ	398	;# 
  1341     018F                     SSP1STAT        equ	399	;# 
  1342     0190                     SSP1CON1        equ	400	;# 
  1343     0191                     SSP1CON2        equ	401	;# 
  1344     0192                     SSP1CON3        equ	402	;# 
  1345     0196                     SSP2BUF         equ	406	;# 
  1346     0197                     SSP2ADD         equ	407	;# 
  1347     0198                     SSP2MSK         equ	408	;# 
  1348     0199                     SSP2STAT        equ	409	;# 
  1349     019A                     SSP2CON1        equ	410	;# 
  1350     019B                     SSP2CON2        equ	411	;# 
  1351     019C                     SSP2CON3        equ	412	;# 
  1352     020C                     TMR1            equ	524	;# 
  1353     020C                     TMR1L           equ	524	;# 
  1354     020D                     TMR1H           equ	525	;# 
  1355     020E                     T1CON           equ	526	;# 
  1356     020F                     T1GCON          equ	527	;# 
  1357     020F                     PR1             equ	527	;# 
  1358     0210                     T1GATE          equ	528	;# 
  1359     0210                     TMR1GATE        equ	528	;# 
  1360     0211                     T1CLK           equ	529	;# 
  1361     0211                     TMR1CLK         equ	529	;# 
  1362     0212                     TMR3            equ	530	;# 
  1363     0212                     TMR3L           equ	530	;# 
  1364     0213                     TMR3H           equ	531	;# 
  1365     0214                     T3CON           equ	532	;# 
  1366     0215                     T3GCON          equ	533	;# 
  1367     0215                     PR3             equ	533	;# 
  1368     0216                     T3GATE          equ	534	;# 
  1369     0216                     TMR3GATE        equ	534	;# 
  1370     0217                     T3CLK           equ	535	;# 
  1371     0217                     TMR3CLK         equ	535	;# 
  1372     0218                     TMR5            equ	536	;# 
  1373     0218                     TMR5L           equ	536	;# 
  1374     0219                     TMR5H           equ	537	;# 
  1375     021A                     T5CON           equ	538	;# 
  1376     021B                     T5GCON          equ	539	;# 
  1377     021B                     PR5             equ	539	;# 
  1378     021C                     T5GATE          equ	540	;# 
  1379     021C                     TMR5GATE        equ	540	;# 
  1380     021D                     T5CLK           equ	541	;# 
  1381     021D                     TMR5CLK         equ	541	;# 
  1382     021E                     CCPTMRS0        equ	542	;# 
  1383     021F                     CCPTMRS1        equ	543	;# 
  1384     028C                     T2TMR           equ	652	;# 
  1385     028C                     TMR2            equ	652	;# 
  1386     028D                     T2PR            equ	653	;# 
  1387     028D                     PR2             equ	653	;# 
  1388     028E                     T2CON           equ	654	;# 
  1389     028F                     T2HLT           equ	655	;# 
  1390     0290                     T2CLKCON        equ	656	;# 
  1391     0290                     T2CLK           equ	656	;# 
  1392     0291                     T2RST           equ	657	;# 
  1393     0292                     T4TMR           equ	658	;# 
  1394     0292                     TMR4            equ	658	;# 
  1395     0293                     T4PR            equ	659	;# 
  1396     0293                     PR4             equ	659	;# 
  1397     0294                     T4CON           equ	660	;# 
  1398     0295                     T4HLT           equ	661	;# 
  1399     0296                     T4CLKCON        equ	662	;# 
  1400     0296                     T4CLK           equ	662	;# 
  1401     0297                     T4RST           equ	663	;# 
  1402     0298                     T6TMR           equ	664	;# 
  1403     0298                     TMR6            equ	664	;# 
  1404     0299                     T6PR            equ	665	;# 
  1405     0299                     PR6             equ	665	;# 
  1406     029A                     T6CON           equ	666	;# 
  1407     029B                     T6HLT           equ	667	;# 
  1408     029C                     T6CLKCON        equ	668	;# 
  1409     029C                     T6CLK           equ	668	;# 
  1410     029D                     T6RST           equ	669	;# 
  1411     030C                     CCPR1           equ	780	;# 
  1412     030C                     CCPR1L          equ	780	;# 
  1413     030D                     CCPR1H          equ	781	;# 
  1414     030E                     CCP1CON         equ	782	;# 
  1415     030F                     CCP1CAP         equ	783	;# 
  1416     0310                     CCPR2           equ	784	;# 
  1417     0310                     CCPR2L          equ	784	;# 
  1418     0311                     CCPR2H          equ	785	;# 
  1419     0312                     CCP2CON         equ	786	;# 
  1420     0313                     CCP2CAP         equ	787	;# 
  1421     0314                     CCPR3           equ	788	;# 
  1422     0314                     CCPR3L          equ	788	;# 
  1423     0315                     CCPR3H          equ	789	;# 
  1424     0316                     CCP3CON         equ	790	;# 
  1425     0317                     CCP3CAP         equ	791	;# 
  1426     0318                     CCPR4           equ	792	;# 
  1427     0318                     CCPR4L          equ	792	;# 
  1428     0319                     CCPR4H          equ	793	;# 
  1429     031A                     CCP4CON         equ	794	;# 
  1430     031B                     CCP4CAP         equ	795	;# 
  1431     031C                     CCPR5           equ	796	;# 
  1432     031C                     CCPR5L          equ	796	;# 
  1433     031D                     CCPR5H          equ	797	;# 
  1434     031E                     CCP5CON         equ	798	;# 
  1435     031F                     CCP5CAP         equ	799	;# 
  1436     038C                     PWM6DC          equ	908	;# 
  1437     038C                     PWM6DCL         equ	908	;# 
  1438     038D                     PWM6DCH         equ	909	;# 
  1439     038E                     PWM6CON         equ	910	;# 
  1440     0390                     PWM7DC          equ	912	;# 
  1441     0390                     PWM7DCL         equ	912	;# 
  1442     0391                     PWM7DCH         equ	913	;# 
  1443     0392                     PWM7CON         equ	914	;# 
  1444     040C                     SCANLADRL       equ	1036	;# 
  1445     040D                     SCANLADRH       equ	1037	;# 
  1446     040E                     SCANHADRL       equ	1038	;# 
  1447     040F                     SCANHADRH       equ	1039	;# 
  1448     0410                     SCANCON0        equ	1040	;# 
  1449     0411                     SCANTRIG        equ	1041	;# 
  1450     0416                     CRCDATA         equ	1046	;# 
  1451     0416                     CRCDATL         equ	1046	;# 
  1452     0417                     CRCDATH         equ	1047	;# 
  1453     0418                     CRCACC          equ	1048	;# 
  1454     0418                     CRCACCL         equ	1048	;# 
  1455     0419                     CRCACCH         equ	1049	;# 
  1456     041A                     CRCSHFT         equ	1050	;# 
  1457     041A                     CRCSHIFTL       equ	1050	;# 
  1458     041B                     CRCSHIFTH       equ	1051	;# 
  1459     041C                     CRCXOR          equ	1052	;# 
  1460     041C                     CRCXORL         equ	1052	;# 
  1461     041D                     CRCXORH         equ	1053	;# 
  1462     041E                     CRCCON0         equ	1054	;# 
  1463     041F                     CRCCON1         equ	1055	;# 
  1464     048C                     SMT1TMR         equ	1164	;# 
  1465     048C                     SMT1TMRL        equ	1164	;# 
  1466     048D                     SMT1TMRH        equ	1165	;# 
  1467     048E                     SMT1TMRU        equ	1166	;# 
  1468     048F                     SMT1CPR         equ	1167	;# 
  1469     048F                     SMT1CPRL        equ	1167	;# 
  1470     0490                     SMT1CPRH        equ	1168	;# 
  1471     0491                     SMT1CPRU        equ	1169	;# 
  1472     0492                     SMT1CPW         equ	1170	;# 
  1473     0492                     SMT1CPWL        equ	1170	;# 
  1474     0493                     SMT1CPWH        equ	1171	;# 
  1475     0494                     SMT1CPWU        equ	1172	;# 
  1476     0495                     SMT1PR          equ	1173	;# 
  1477     0495                     SMT1PRL         equ	1173	;# 
  1478     0496                     SMT1PRH         equ	1174	;# 
  1479     0497                     SMT1PRU         equ	1175	;# 
  1480     0498                     SMT1CON0        equ	1176	;# 
  1481     0499                     SMT1CON1        equ	1177	;# 
  1482     049A                     SMT1STAT        equ	1178	;# 
  1483     049B                     SMT1CLK         equ	1179	;# 
  1484     049C                     SMT1SIG         equ	1180	;# 
  1485     049D                     SMT1WIN         equ	1181	;# 
  1486     050C                     SMT2TMR         equ	1292	;# 
  1487     050C                     SMT2TMRL        equ	1292	;# 
  1488     050D                     SMT2TMRH        equ	1293	;# 
  1489     050E                     SMT2TMRU        equ	1294	;# 
  1490     050F                     SMT2CPR         equ	1295	;# 
  1491     050F                     SMT2CPRL        equ	1295	;# 
  1492     0510                     SMT2CPRH        equ	1296	;# 
  1493     0511                     SMT2CPRU        equ	1297	;# 
  1494     0512                     SMT2CPW         equ	1298	;# 
  1495     0512                     SMT2CPWL        equ	1298	;# 
  1496     0513                     SMT2CPWH        equ	1299	;# 
  1497     0514                     SMT2CPWU        equ	1300	;# 
  1498     0515                     SMT2PR          equ	1301	;# 
  1499     0515                     SMT2PRL         equ	1301	;# 
  1500     0516                     SMT2PRH         equ	1302	;# 
  1501     0517                     SMT2PRU         equ	1303	;# 
  1502     0518                     SMT2CON0        equ	1304	;# 
  1503     0519                     SMT2CON1        equ	1305	;# 
  1504     051A                     SMT2STAT        equ	1306	;# 
  1505     051B                     SMT2CLK         equ	1307	;# 
  1506     051C                     SMT2SIG         equ	1308	;# 
  1507     051D                     SMT2WIN         equ	1309	;# 
  1508     058C                     NCO1ACC         equ	1420	;# 
  1509     058C                     NCO1ACCL        equ	1420	;# 
  1510     058D                     NCO1ACCH        equ	1421	;# 
  1511     058E                     NCO1ACCU        equ	1422	;# 
  1512     058F                     NCO1INC         equ	1423	;# 
  1513     058F                     NCO1INCL        equ	1423	;# 
  1514     0590                     NCO1INCH        equ	1424	;# 
  1515     0591                     NCO1INCU        equ	1425	;# 
  1516     0592                     NCO1CON         equ	1426	;# 
  1517     0593                     NCO1CLK         equ	1427	;# 
  1518     060C                     CWG1CLKCON      equ	1548	;# 
  1519     060D                     CWG1ISM         equ	1549	;# 
  1520     060E                     CWG1DBR         equ	1550	;# 
  1521     060F                     CWG1DBF         equ	1551	;# 
  1522     0610                     CWG1CON0        equ	1552	;# 
  1523     0611                     CWG1CON1        equ	1553	;# 
  1524     0612                     CWG1AS0         equ	1554	;# 
  1525     0613                     CWG1AS1         equ	1555	;# 
  1526     0614                     CWG1STR         equ	1556	;# 
  1527     0616                     CWG2CLKCON      equ	1558	;# 
  1528     0617                     CWG2ISM         equ	1559	;# 
  1529     0618                     CWG2DBR         equ	1560	;# 
  1530     0619                     CWG2DBF         equ	1561	;# 
  1531     061A                     CWG2CON0        equ	1562	;# 
  1532     061B                     CWG2CON1        equ	1563	;# 
  1533     061C                     CWG2AS0         equ	1564	;# 
  1534     061D                     CWG2AS1         equ	1565	;# 
  1535     061E                     CWG2STR         equ	1566	;# 
  1536     068C                     CWG3CLKCON      equ	1676	;# 
  1537     068D                     CWG3ISM         equ	1677	;# 
  1538     068E                     CWG3DBR         equ	1678	;# 
  1539     068F                     CWG3DBF         equ	1679	;# 
  1540     0690                     CWG3CON0        equ	1680	;# 
  1541     0691                     CWG3CON1        equ	1681	;# 
  1542     0692                     CWG3AS0         equ	1682	;# 
  1543     0693                     CWG3AS1         equ	1683	;# 
  1544     0694                     CWG3STR         equ	1684	;# 
  1545     070C                     PIR0            equ	1804	;# 
  1546     070D                     PIR1            equ	1805	;# 
  1547     070E                     PIR2            equ	1806	;# 
  1548     070F                     PIR3            equ	1807	;# 
  1549     0710                     PIR4            equ	1808	;# 
  1550     0711                     PIR5            equ	1809	;# 
  1551     0712                     PIR6            equ	1810	;# 
  1552     0713                     PIR7            equ	1811	;# 
  1553     0714                     PIR8            equ	1812	;# 
  1554     0716                     PIE0            equ	1814	;# 
  1555     0717                     PIE1            equ	1815	;# 
  1556     0718                     PIE2            equ	1816	;# 
  1557     0719                     PIE3            equ	1817	;# 
  1558     071A                     PIE4            equ	1818	;# 
  1559     071B                     PIE5            equ	1819	;# 
  1560     071C                     PIE6            equ	1820	;# 
  1561     071D                     PIE7            equ	1821	;# 
  1562     071E                     PIE8            equ	1822	;# 
  1563     0796                     PMD0            equ	1942	;# 
  1564     0797                     PMD1            equ	1943	;# 
  1565     0798                     PMD2            equ	1944	;# 
  1566     0799                     PMD3            equ	1945	;# 
  1567     079A                     PMD4            equ	1946	;# 
  1568     079B                     PMD5            equ	1947	;# 
  1569     080C                     WDTCON0         equ	2060	;# 
  1570     080D                     WDTCON1         equ	2061	;# 
  1571     080E                     WDTPSL          equ	2062	;# 
  1572     080F                     WDTPSH          equ	2063	;# 
  1573     0810                     WDTTMR          equ	2064	;# 
  1574     0811                     BORCON          equ	2065	;# 
  1575     0812                     VREGCON         equ	2066	;# 
  1576     0813                     PCON0           equ	2067	;# 
  1577     0814                     CCDCON          equ	2068	;# 
  1578     081A                     NVMADRL         equ	2074	;# 
  1579     081B                     NVMADRH         equ	2075	;# 
  1580     081C                     NVMDATL         equ	2076	;# 
  1581     081D                     NVMDATH         equ	2077	;# 
  1582     081E                     NVMCON1         equ	2078	;# 
  1583     081F                     NVMCON2         equ	2079	;# 
  1584     088C                     CPUDOZE         equ	2188	;# 
  1585     088D                     OSCCON1         equ	2189	;# 
  1586     088E                     OSCCON2         equ	2190	;# 
  1587     088F                     OSCCON3         equ	2191	;# 
  1588     0890                     OSCSTAT         equ	2192	;# 
  1589     0891                     OSCEN           equ	2193	;# 
  1590     0892                     OSCTUNE         equ	2194	;# 
  1591     0893                     OSCFRQ          equ	2195	;# 
  1592     0895                     CLKRCON         equ	2197	;# 
  1593     0896                     CLKRCLK         equ	2198	;# 
  1594     0897                     MDCON0          equ	2199	;# 
  1595     0898                     MDCON1          equ	2200	;# 
  1596     0899                     MDSRC           equ	2201	;# 
  1597     089A                     MDCARL          equ	2202	;# 
  1598     089B                     MDCARH          equ	2203	;# 
  1599     090C                     FVRCON          equ	2316	;# 
  1600     090E                     DAC1CON0        equ	2318	;# 
  1601     090F                     DAC1CON1        equ	2319	;# 
  1602     091F                     ZCD1CON         equ	2335	;# 
  1603     091F                     ZCDCON          equ	2335	;# 
  1604     098F                     CMOUT           equ	2447	;# 
  1605     098F                     CMSTAT          equ	2447	;# 
  1606     0990                     CM1CON0         equ	2448	;# 
  1607     0991                     CM1CON1         equ	2449	;# 
  1608     0992                     CM1NSEL         equ	2450	;# 
  1609     0993                     CM1PSEL         equ	2451	;# 
  1610     0994                     CM2CON0         equ	2452	;# 
  1611     0995                     CM2CON1         equ	2453	;# 
  1612     0996                     CM2NSEL         equ	2454	;# 
  1613     0997                     CM2PSEL         equ	2455	;# 
  1614     0E0F                     CLCDATA         equ	3599	;# 
  1615     0E10                     CLC1CON         equ	3600	;# 
  1616     0E11                     CLC1POL         equ	3601	;# 
  1617     0E12                     CLC1SEL0        equ	3602	;# 
  1618     0E13                     CLC1SEL1        equ	3603	;# 
  1619     0E14                     CLC1SEL2        equ	3604	;# 
  1620     0E15                     CLC1SEL3        equ	3605	;# 
  1621     0E16                     CLC1GLS0        equ	3606	;# 
  1622     0E17                     CLC1GLS1        equ	3607	;# 
  1623     0E18                     CLC1GLS2        equ	3608	;# 
  1624     0E19                     CLC1GLS3        equ	3609	;# 
  1625     0E1A                     CLC2CON         equ	3610	;# 
  1626     0E1B                     CLC2POL         equ	3611	;# 
  1627     0E1C                     CLC2SEL0        equ	3612	;# 
  1628     0E1D                     CLC2SEL1        equ	3613	;# 
  1629     0E1E                     CLC2SEL2        equ	3614	;# 
  1630     0E1F                     CLC2SEL3        equ	3615	;# 
  1631     0E20                     CLC2GLS0        equ	3616	;# 
  1632     0E21                     CLC2GLS1        equ	3617	;# 
  1633     0E22                     CLC2GLS2        equ	3618	;# 
  1634     0E23                     CLC2GLS3        equ	3619	;# 
  1635     0E24                     CLC3CON         equ	3620	;# 
  1636     0E25                     CLC3POL         equ	3621	;# 
  1637     0E26                     CLC3SEL0        equ	3622	;# 
  1638     0E27                     CLC3SEL1        equ	3623	;# 
  1639     0E28                     CLC3SEL2        equ	3624	;# 
  1640     0E29                     CLC3SEL3        equ	3625	;# 
  1641     0E2A                     CLC3GLS0        equ	3626	;# 
  1642     0E2B                     CLC3GLS1        equ	3627	;# 
  1643     0E2C                     CLC3GLS2        equ	3628	;# 
  1644     0E2D                     CLC3GLS3        equ	3629	;# 
  1645     0E2E                     CLC4CON         equ	3630	;# 
  1646     0E2F                     CLC4POL         equ	3631	;# 
  1647     0E30                     CLC4SEL0        equ	3632	;# 
  1648     0E31                     CLC4SEL1        equ	3633	;# 
  1649     0E32                     CLC4SEL2        equ	3634	;# 
  1650     0E33                     CLC4SEL3        equ	3635	;# 
  1651     0E34                     CLC4GLS0        equ	3636	;# 
  1652     0E35                     CLC4GLS1        equ	3637	;# 
  1653     0E36                     CLC4GLS2        equ	3638	;# 
  1654     0E37                     CLC4GLS3        equ	3639	;# 
  1655     0E8F                     PPSLOCK         equ	3727	;# 
  1656     0E90                     INTPPS          equ	3728	;# 
  1657     0E91                     T0CKIPPS        equ	3729	;# 
  1658     0E92                     T1CKIPPS        equ	3730	;# 
  1659     0E93                     T1GPPS          equ	3731	;# 
  1660     0E94                     T3CKIPPS        equ	3732	;# 
  1661     0E95                     T3GPPS          equ	3733	;# 
  1662     0E96                     T5CKIPPS        equ	3734	;# 
  1663     0E97                     T5GPPS          equ	3735	;# 
  1664     0E9C                     T2AINPPS        equ	3740	;# 
  1665     0E9D                     T4AINPPS        equ	3741	;# 
  1666     0E9E                     T6AINPPS        equ	3742	;# 
  1667     0EA1                     CCP1PPS         equ	3745	;# 
  1668     0EA2                     CCP2PPS         equ	3746	;# 
  1669     0EA3                     CCP3PPS         equ	3747	;# 
  1670     0EA4                     CCP4PPS         equ	3748	;# 
  1671     0EA5                     CCP5PPS         equ	3749	;# 
  1672     0EA9                     SMT1WINPPS      equ	3753	;# 
  1673     0EAA                     SMT1SIGPPS      equ	3754	;# 
  1674     0EAB                     SMT2WINPPS      equ	3755	;# 
  1675     0EAC                     SMT2SIGPPS      equ	3756	;# 
  1676     0EB1                     CWG1PPS         equ	3761	;# 
  1677     0EB2                     CWG2PPS         equ	3762	;# 
  1678     0EB3                     CWG3PPS         equ	3763	;# 
  1679     0EB8                     MDCARLPPS       equ	3768	;# 
  1680     0EB9                     MDCARHPPS       equ	3769	;# 
  1681     0EBA                     MDSRCPPS        equ	3770	;# 
  1682     0EBB                     CLCIN0PPS       equ	3771	;# 
  1683     0EBC                     CLCIN1PPS       equ	3772	;# 
  1684     0EBD                     CLCIN2PPS       equ	3773	;# 
  1685     0EBE                     CLCIN3PPS       equ	3774	;# 
  1686     0EC3                     ADCACTPPS       equ	3779	;# 
  1687     0EC5                     SSP1CLKPPS      equ	3781	;# 
  1688     0EC6                     SSP1DATPPS      equ	3782	;# 
  1689     0EC7                     SSP1SSPPS       equ	3783	;# 
  1690     0EC8                     SSP2CLKPPS      equ	3784	;# 
  1691     0EC9                     SSP2DATPPS      equ	3785	;# 
  1692     0ECA                     SSP2SSPPS       equ	3786	;# 
  1693     0ECB                     RXPPS           equ	3787	;# 
  1694     0ECC                     TXPPS           equ	3788	;# 
  1695     0F10                     RA0PPS          equ	3856	;# 
  1696     0F11                     RA1PPS          equ	3857	;# 
  1697     0F12                     RA2PPS          equ	3858	;# 
  1698     0F13                     RA3PPS          equ	3859	;# 
  1699     0F14                     RA4PPS          equ	3860	;# 
  1700     0F15                     RA5PPS          equ	3861	;# 
  1701     0F16                     RA6PPS          equ	3862	;# 
  1702     0F17                     RA7PPS          equ	3863	;# 
  1703     0F18                     RB0PPS          equ	3864	;# 
  1704     0F19                     RB1PPS          equ	3865	;# 
  1705     0F1A                     RB2PPS          equ	3866	;# 
  1706     0F1B                     RB3PPS          equ	3867	;# 
  1707     0F1C                     RB4PPS          equ	3868	;# 
  1708     0F1D                     RB5PPS          equ	3869	;# 
  1709     0F1E                     RB6PPS          equ	3870	;# 
  1710     0F1F                     RB7PPS          equ	3871	;# 
  1711     0F20                     RC0PPS          equ	3872	;# 
  1712     0F21                     RC1PPS          equ	3873	;# 
  1713     0F22                     RC2PPS          equ	3874	;# 
  1714     0F23                     RC3PPS          equ	3875	;# 
  1715     0F24                     RC4PPS          equ	3876	;# 
  1716     0F25                     RC5PPS          equ	3877	;# 
  1717     0F26                     RC6PPS          equ	3878	;# 
  1718     0F27                     RC7PPS          equ	3879	;# 
  1719     0F28                     RD0PPS          equ	3880	;# 
  1720     0F29                     RD1PPS          equ	3881	;# 
  1721     0F2A                     RD2PPS          equ	3882	;# 
  1722     0F2B                     RD3PPS          equ	3883	;# 
  1723     0F2C                     RD4PPS          equ	3884	;# 
  1724     0F2D                     RD5PPS          equ	3885	;# 
  1725     0F2E                     RD6PPS          equ	3886	;# 
  1726     0F2F                     RD7PPS          equ	3887	;# 
  1727     0F30                     RE0PPS          equ	3888	;# 
  1728     0F31                     RE1PPS          equ	3889	;# 
  1729     0F32                     RE2PPS          equ	3890	;# 
  1730     0F38                     ANSELA          equ	3896	;# 
  1731     0F39                     WPUA            equ	3897	;# 
  1732     0F3A                     ODCONA          equ	3898	;# 
  1733     0F3B                     SLRCONA         equ	3899	;# 
  1734     0F3C                     INLVLA          equ	3900	;# 
  1735     0F3D                     IOCAP           equ	3901	;# 
  1736     0F3E                     IOCAN           equ	3902	;# 
  1737     0F3F                     IOCAF           equ	3903	;# 
  1738     0F40                     CCDNA           equ	3904	;# 
  1739     0F41                     CCDPA           equ	3905	;# 
  1740     0F43                     ANSELB          equ	3907	;# 
  1741     0F44                     WPUB            equ	3908	;# 
  1742     0F45                     ODCONB          equ	3909	;# 
  1743     0F46                     SLRCONB         equ	3910	;# 
  1744     0F47                     INLVLB          equ	3911	;# 
  1745     0F48                     IOCBP           equ	3912	;# 
  1746     0F49                     IOCBN           equ	3913	;# 
  1747     0F4A                     IOCBF           equ	3914	;# 
  1748     0F4B                     CCDNB           equ	3915	;# 
  1749     0F4C                     CCDPB           equ	3916	;# 
  1750     0F4E                     ANSELC          equ	3918	;# 
  1751     0F4F                     WPUC            equ	3919	;# 
  1752     0F50                     ODCONC          equ	3920	;# 
  1753     0F51                     SLRCONC         equ	3921	;# 
  1754     0F52                     INLVLC          equ	3922	;# 
  1755     0F53                     IOCCP           equ	3923	;# 
  1756     0F54                     IOCCN           equ	3924	;# 
  1757     0F55                     IOCCF           equ	3925	;# 
  1758     0F56                     CCDNC           equ	3926	;# 
  1759     0F57                     CCDPC           equ	3927	;# 
  1760     0F59                     ANSELD          equ	3929	;# 
  1761     0F5A                     WPUD            equ	3930	;# 
  1762     0F5B                     ODCOND          equ	3931	;# 
  1763     0F5C                     SLRCOND         equ	3932	;# 
  1764     0F5D                     INLVLD          equ	3933	;# 
  1765     0F61                     CCDND           equ	3937	;# 
  1766     0F62                     CCDPD           equ	3938	;# 
  1767     0F64                     ANSELE          equ	3940	;# 
  1768     0F65                     WPUE            equ	3941	;# 
  1769     0F66                     ODCONE          equ	3942	;# 
  1770     0F67                     SLRCONE         equ	3943	;# 
  1771     0F68                     INLVLE          equ	3944	;# 
  1772     0F69                     IOCEP           equ	3945	;# 
  1773     0F6A                     IOCEN           equ	3946	;# 
  1774     0F6B                     IOCEF           equ	3947	;# 
  1775     0F6C                     CCDNE           equ	3948	;# 
  1776     0F6D                     CCDPE           equ	3949	;# 
  1777     0FE4                     STATUS_SHAD     equ	4068	;# 
  1778     0FE5                     WREG_SHAD       equ	4069	;# 
  1779     0FE6                     BSR_SHAD        equ	4070	;# 
  1780     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1781     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1782     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1783     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1784     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1785     0FED                     STKPTR          equ	4077	;# 
  1786     0FEE                     TOSL            equ	4078	;# 
  1787     0FEF                     TOSH            equ	4079	;# 
  1788     0000                     INDF0           equ	0	;# 
  1789     0001                     INDF1           equ	1	;# 
  1790     0002                     PCL             equ	2	;# 
  1791     0003                     STATUS          equ	3	;# 
  1792     0004                     FSR0L           equ	4	;# 
  1793     0005                     FSR0H           equ	5	;# 
  1794     0006                     FSR1L           equ	6	;# 
  1795     0007                     FSR1H           equ	7	;# 
  1796     0008                     BSR             equ	8	;# 
  1797     0009                     WREG            equ	9	;# 
  1798     000A                     PCLATH          equ	10	;# 
  1799     000B                     INTCON          equ	11	;# 
  1800     000C                     PORTA           equ	12	;# 
  1801     000D                     PORTB           equ	13	;# 
  1802     000E                     PORTC           equ	14	;# 
  1803     000F                     PORTD           equ	15	;# 
  1804     0010                     PORTE           equ	16	;# 
  1805     0011                     TRISA           equ	17	;# 
  1806     0012                     TRISB           equ	18	;# 
  1807     0013                     TRISC           equ	19	;# 
  1808     0014                     TRISD           equ	20	;# 
  1809     0015                     TRISE           equ	21	;# 
  1810     0016                     LATA            equ	22	;# 
  1811     0017                     LATB            equ	23	;# 
  1812     0018                     LATC            equ	24	;# 
  1813     0019                     LATD            equ	25	;# 
  1814     001A                     LATE            equ	26	;# 
  1815     001C                     TMR0L           equ	28	;# 
  1816     001C                     TMR0            equ	28	;# 
  1817     001D                     TMR0H           equ	29	;# 
  1818     001D                     PR0             equ	29	;# 
  1819     001E                     T0CON0          equ	30	;# 
  1820     001F                     T0CON1          equ	31	;# 
  1821     008C                     ADRES           equ	140	;# 
  1822     008C                     ADRESL          equ	140	;# 
  1823     008D                     ADRESH          equ	141	;# 
  1824     008E                     ADPREV          equ	142	;# 
  1825     008E                     ADPREVL         equ	142	;# 
  1826     008F                     ADPREVH         equ	143	;# 
  1827     0090                     ADACC           equ	144	;# 
  1828     0090                     ADACCL          equ	144	;# 
  1829     0091                     ADACCH          equ	145	;# 
  1830     0093                     ADCON0          equ	147	;# 
  1831     0094                     ADCON1          equ	148	;# 
  1832     0095                     ADCON2          equ	149	;# 
  1833     0096                     ADCON3          equ	150	;# 
  1834     0097                     ADSTAT          equ	151	;# 
  1835     0098                     ADCLK           equ	152	;# 
  1836     0099                     ADACT           equ	153	;# 
  1837     009A                     ADREF           equ	154	;# 
  1838     009B                     ADCAP           equ	155	;# 
  1839     009C                     ADPRE           equ	156	;# 
  1840     009D                     ADACQ           equ	157	;# 
  1841     009E                     ADPCH           equ	158	;# 
  1842     010C                     ADCNT           equ	268	;# 
  1843     010D                     ADRPT           equ	269	;# 
  1844     010E                     ADLTH           equ	270	;# 
  1845     010E                     ADLTHL          equ	270	;# 
  1846     010F                     ADLTHH          equ	271	;# 
  1847     0110                     ADUTH           equ	272	;# 
  1848     0110                     ADUTHL          equ	272	;# 
  1849     0111                     ADUTHH          equ	273	;# 
  1850     0112                     ADSTPT          equ	274	;# 
  1851     0112                     ADSTPTL         equ	274	;# 
  1852     0113                     ADSTPTH         equ	275	;# 
  1853     0114                     ADFLTR          equ	276	;# 
  1854     0114                     ADFLTRL         equ	276	;# 
  1855     0115                     ADFLTRH         equ	277	;# 
  1856     0116                     ADERR           equ	278	;# 
  1857     0116                     ADERRL          equ	278	;# 
  1858     0117                     ADERRH          equ	279	;# 
  1859     0119                     RC1REG          equ	281	;# 
  1860     0119                     RCREG           equ	281	;# 
  1861     0119                     RCREG1          equ	281	;# 
  1862     011A                     TX1REG          equ	282	;# 
  1863     011A                     TXREG1          equ	282	;# 
  1864     011A                     TXREG           equ	282	;# 
  1865     011B                     SP1BRG          equ	283	;# 
  1866     011B                     SP1BRGL         equ	283	;# 
  1867     011B                     SPBRG           equ	283	;# 
  1868     011B                     SPBRG1          equ	283	;# 
  1869     011B                     SPBRGL          equ	283	;# 
  1870     011C                     SP1BRGH         equ	284	;# 
  1871     011C                     SPBRGH          equ	284	;# 
  1872     011C                     SPBRGH1         equ	284	;# 
  1873     011D                     RC1STA          equ	285	;# 
  1874     011D                     RCSTA1          equ	285	;# 
  1875     011D                     RCSTA           equ	285	;# 
  1876     011E                     TX1STA          equ	286	;# 
  1877     011E                     TXSTA1          equ	286	;# 
  1878     011E                     TXSTA           equ	286	;# 
  1879     011F                     BAUD1CON        equ	287	;# 
  1880     011F                     BAUDCON1        equ	287	;# 
  1881     011F                     BAUDCTL1        equ	287	;# 
  1882     011F                     BAUDCON         equ	287	;# 
  1883     011F                     BAUDCTL         equ	287	;# 
  1884     018C                     SSP1BUF         equ	396	;# 
  1885     018D                     SSP1ADD         equ	397	;# 
  1886     018E                     SSP1MSK         equ	398	;# 
  1887     018F                     SSP1STAT        equ	399	;# 
  1888     0190                     SSP1CON1        equ	400	;# 
  1889     0191                     SSP1CON2        equ	401	;# 
  1890     0192                     SSP1CON3        equ	402	;# 
  1891     0196                     SSP2BUF         equ	406	;# 
  1892     0197                     SSP2ADD         equ	407	;# 
  1893     0198                     SSP2MSK         equ	408	;# 
  1894     0199                     SSP2STAT        equ	409	;# 
  1895     019A                     SSP2CON1        equ	410	;# 
  1896     019B                     SSP2CON2        equ	411	;# 
  1897     019C                     SSP2CON3        equ	412	;# 
  1898     020C                     TMR1            equ	524	;# 
  1899     020C                     TMR1L           equ	524	;# 
  1900     020D                     TMR1H           equ	525	;# 
  1901     020E                     T1CON           equ	526	;# 
  1902     020F                     T1GCON          equ	527	;# 
  1903     020F                     PR1             equ	527	;# 
  1904     0210                     T1GATE          equ	528	;# 
  1905     0210                     TMR1GATE        equ	528	;# 
  1906     0211                     T1CLK           equ	529	;# 
  1907     0211                     TMR1CLK         equ	529	;# 
  1908     0212                     TMR3            equ	530	;# 
  1909     0212                     TMR3L           equ	530	;# 
  1910     0213                     TMR3H           equ	531	;# 
  1911     0214                     T3CON           equ	532	;# 
  1912     0215                     T3GCON          equ	533	;# 
  1913     0215                     PR3             equ	533	;# 
  1914     0216                     T3GATE          equ	534	;# 
  1915     0216                     TMR3GATE        equ	534	;# 
  1916     0217                     T3CLK           equ	535	;# 
  1917     0217                     TMR3CLK         equ	535	;# 
  1918     0218                     TMR5            equ	536	;# 
  1919     0218                     TMR5L           equ	536	;# 
  1920     0219                     TMR5H           equ	537	;# 
  1921     021A                     T5CON           equ	538	;# 
  1922     021B                     T5GCON          equ	539	;# 
  1923     021B                     PR5             equ	539	;# 
  1924     021C                     T5GATE          equ	540	;# 
  1925     021C                     TMR5GATE        equ	540	;# 
  1926     021D                     T5CLK           equ	541	;# 
  1927     021D                     TMR5CLK         equ	541	;# 
  1928     021E                     CCPTMRS0        equ	542	;# 
  1929     021F                     CCPTMRS1        equ	543	;# 
  1930     028C                     T2TMR           equ	652	;# 
  1931     028C                     TMR2            equ	652	;# 
  1932     028D                     T2PR            equ	653	;# 
  1933     028D                     PR2             equ	653	;# 
  1934     028E                     T2CON           equ	654	;# 
  1935     028F                     T2HLT           equ	655	;# 
  1936     0290                     T2CLKCON        equ	656	;# 
  1937     0290                     T2CLK           equ	656	;# 
  1938     0291                     T2RST           equ	657	;# 
  1939     0292                     T4TMR           equ	658	;# 
  1940     0292                     TMR4            equ	658	;# 
  1941     0293                     T4PR            equ	659	;# 
  1942     0293                     PR4             equ	659	;# 
  1943     0294                     T4CON           equ	660	;# 
  1944     0295                     T4HLT           equ	661	;# 
  1945     0296                     T4CLKCON        equ	662	;# 
  1946     0296                     T4CLK           equ	662	;# 
  1947     0297                     T4RST           equ	663	;# 
  1948     0298                     T6TMR           equ	664	;# 
  1949     0298                     TMR6            equ	664	;# 
  1950     0299                     T6PR            equ	665	;# 
  1951     0299                     PR6             equ	665	;# 
  1952     029A                     T6CON           equ	666	;# 
  1953     029B                     T6HLT           equ	667	;# 
  1954     029C                     T6CLKCON        equ	668	;# 
  1955     029C                     T6CLK           equ	668	;# 
  1956     029D                     T6RST           equ	669	;# 
  1957     030C                     CCPR1           equ	780	;# 
  1958     030C                     CCPR1L          equ	780	;# 
  1959     030D                     CCPR1H          equ	781	;# 
  1960     030E                     CCP1CON         equ	782	;# 
  1961     030F                     CCP1CAP         equ	783	;# 
  1962     0310                     CCPR2           equ	784	;# 
  1963     0310                     CCPR2L          equ	784	;# 
  1964     0311                     CCPR2H          equ	785	;# 
  1965     0312                     CCP2CON         equ	786	;# 
  1966     0313                     CCP2CAP         equ	787	;# 
  1967     0314                     CCPR3           equ	788	;# 
  1968     0314                     CCPR3L          equ	788	;# 
  1969     0315                     CCPR3H          equ	789	;# 
  1970     0316                     CCP3CON         equ	790	;# 
  1971     0317                     CCP3CAP         equ	791	;# 
  1972     0318                     CCPR4           equ	792	;# 
  1973     0318                     CCPR4L          equ	792	;# 
  1974     0319                     CCPR4H          equ	793	;# 
  1975     031A                     CCP4CON         equ	794	;# 
  1976     031B                     CCP4CAP         equ	795	;# 
  1977     031C                     CCPR5           equ	796	;# 
  1978     031C                     CCPR5L          equ	796	;# 
  1979     031D                     CCPR5H          equ	797	;# 
  1980     031E                     CCP5CON         equ	798	;# 
  1981     031F                     CCP5CAP         equ	799	;# 
  1982     038C                     PWM6DC          equ	908	;# 
  1983     038C                     PWM6DCL         equ	908	;# 
  1984     038D                     PWM6DCH         equ	909	;# 
  1985     038E                     PWM6CON         equ	910	;# 
  1986     0390                     PWM7DC          equ	912	;# 
  1987     0390                     PWM7DCL         equ	912	;# 
  1988     0391                     PWM7DCH         equ	913	;# 
  1989     0392                     PWM7CON         equ	914	;# 
  1990     040C                     SCANLADRL       equ	1036	;# 
  1991     040D                     SCANLADRH       equ	1037	;# 
  1992     040E                     SCANHADRL       equ	1038	;# 
  1993     040F                     SCANHADRH       equ	1039	;# 
  1994     0410                     SCANCON0        equ	1040	;# 
  1995     0411                     SCANTRIG        equ	1041	;# 
  1996     0416                     CRCDATA         equ	1046	;# 
  1997     0416                     CRCDATL         equ	1046	;# 
  1998     0417                     CRCDATH         equ	1047	;# 
  1999     0418                     CRCACC          equ	1048	;# 
  2000     0418                     CRCACCL         equ	1048	;# 
  2001     0419                     CRCACCH         equ	1049	;# 
  2002     041A                     CRCSHFT         equ	1050	;# 
  2003     041A                     CRCSHIFTL       equ	1050	;# 
  2004     041B                     CRCSHIFTH       equ	1051	;# 
  2005     041C                     CRCXOR          equ	1052	;# 
  2006     041C                     CRCXORL         equ	1052	;# 
  2007     041D                     CRCXORH         equ	1053	;# 
  2008     041E                     CRCCON0         equ	1054	;# 
  2009     041F                     CRCCON1         equ	1055	;# 
  2010     048C                     SMT1TMR         equ	1164	;# 
  2011     048C                     SMT1TMRL        equ	1164	;# 
  2012     048D                     SMT1TMRH        equ	1165	;# 
  2013     048E                     SMT1TMRU        equ	1166	;# 
  2014     048F                     SMT1CPR         equ	1167	;# 
  2015     048F                     SMT1CPRL        equ	1167	;# 
  2016     0490                     SMT1CPRH        equ	1168	;# 
  2017     0491                     SMT1CPRU        equ	1169	;# 
  2018     0492                     SMT1CPW         equ	1170	;# 
  2019     0492                     SMT1CPWL        equ	1170	;# 
  2020     0493                     SMT1CPWH        equ	1171	;# 
  2021     0494                     SMT1CPWU        equ	1172	;# 
  2022     0495                     SMT1PR          equ	1173	;# 
  2023     0495                     SMT1PRL         equ	1173	;# 
  2024     0496                     SMT1PRH         equ	1174	;# 
  2025     0497                     SMT1PRU         equ	1175	;# 
  2026     0498                     SMT1CON0        equ	1176	;# 
  2027     0499                     SMT1CON1        equ	1177	;# 
  2028     049A                     SMT1STAT        equ	1178	;# 
  2029     049B                     SMT1CLK         equ	1179	;# 
  2030     049C                     SMT1SIG         equ	1180	;# 
  2031     049D                     SMT1WIN         equ	1181	;# 
  2032     050C                     SMT2TMR         equ	1292	;# 
  2033     050C                     SMT2TMRL        equ	1292	;# 
  2034     050D                     SMT2TMRH        equ	1293	;# 
  2035     050E                     SMT2TMRU        equ	1294	;# 
  2036     050F                     SMT2CPR         equ	1295	;# 
  2037     050F                     SMT2CPRL        equ	1295	;# 
  2038     0510                     SMT2CPRH        equ	1296	;# 
  2039     0511                     SMT2CPRU        equ	1297	;# 
  2040     0512                     SMT2CPW         equ	1298	;# 
  2041     0512                     SMT2CPWL        equ	1298	;# 
  2042     0513                     SMT2CPWH        equ	1299	;# 
  2043     0514                     SMT2CPWU        equ	1300	;# 
  2044     0515                     SMT2PR          equ	1301	;# 
  2045     0515                     SMT2PRL         equ	1301	;# 
  2046     0516                     SMT2PRH         equ	1302	;# 
  2047     0517                     SMT2PRU         equ	1303	;# 
  2048     0518                     SMT2CON0        equ	1304	;# 
  2049     0519                     SMT2CON1        equ	1305	;# 
  2050     051A                     SMT2STAT        equ	1306	;# 
  2051     051B                     SMT2CLK         equ	1307	;# 
  2052     051C                     SMT2SIG         equ	1308	;# 
  2053     051D                     SMT2WIN         equ	1309	;# 
  2054     058C                     NCO1ACC         equ	1420	;# 
  2055     058C                     NCO1ACCL        equ	1420	;# 
  2056     058D                     NCO1ACCH        equ	1421	;# 
  2057     058E                     NCO1ACCU        equ	1422	;# 
  2058     058F                     NCO1INC         equ	1423	;# 
  2059     058F                     NCO1INCL        equ	1423	;# 
  2060     0590                     NCO1INCH        equ	1424	;# 
  2061     0591                     NCO1INCU        equ	1425	;# 
  2062     0592                     NCO1CON         equ	1426	;# 
  2063     0593                     NCO1CLK         equ	1427	;# 
  2064     060C                     CWG1CLKCON      equ	1548	;# 
  2065     060D                     CWG1ISM         equ	1549	;# 
  2066     060E                     CWG1DBR         equ	1550	;# 
  2067     060F                     CWG1DBF         equ	1551	;# 
  2068     0610                     CWG1CON0        equ	1552	;# 
  2069     0611                     CWG1CON1        equ	1553	;# 
  2070     0612                     CWG1AS0         equ	1554	;# 
  2071     0613                     CWG1AS1         equ	1555	;# 
  2072     0614                     CWG1STR         equ	1556	;# 
  2073     0616                     CWG2CLKCON      equ	1558	;# 
  2074     0617                     CWG2ISM         equ	1559	;# 
  2075     0618                     CWG2DBR         equ	1560	;# 
  2076     0619                     CWG2DBF         equ	1561	;# 
  2077     061A                     CWG2CON0        equ	1562	;# 
  2078     061B                     CWG2CON1        equ	1563	;# 
  2079     061C                     CWG2AS0         equ	1564	;# 
  2080     061D                     CWG2AS1         equ	1565	;# 
  2081     061E                     CWG2STR         equ	1566	;# 
  2082     068C                     CWG3CLKCON      equ	1676	;# 
  2083     068D                     CWG3ISM         equ	1677	;# 
  2084     068E                     CWG3DBR         equ	1678	;# 
  2085     068F                     CWG3DBF         equ	1679	;# 
  2086     0690                     CWG3CON0        equ	1680	;# 
  2087     0691                     CWG3CON1        equ	1681	;# 
  2088     0692                     CWG3AS0         equ	1682	;# 
  2089     0693                     CWG3AS1         equ	1683	;# 
  2090     0694                     CWG3STR         equ	1684	;# 
  2091     070C                     PIR0            equ	1804	;# 
  2092     070D                     PIR1            equ	1805	;# 
  2093     070E                     PIR2            equ	1806	;# 
  2094     070F                     PIR3            equ	1807	;# 
  2095     0710                     PIR4            equ	1808	;# 
  2096     0711                     PIR5            equ	1809	;# 
  2097     0712                     PIR6            equ	1810	;# 
  2098     0713                     PIR7            equ	1811	;# 
  2099     0714                     PIR8            equ	1812	;# 
  2100     0716                     PIE0            equ	1814	;# 
  2101     0717                     PIE1            equ	1815	;# 
  2102     0718                     PIE2            equ	1816	;# 
  2103     0719                     PIE3            equ	1817	;# 
  2104     071A                     PIE4            equ	1818	;# 
  2105     071B                     PIE5            equ	1819	;# 
  2106     071C                     PIE6            equ	1820	;# 
  2107     071D                     PIE7            equ	1821	;# 
  2108     071E                     PIE8            equ	1822	;# 
  2109     0796                     PMD0            equ	1942	;# 
  2110     0797                     PMD1            equ	1943	;# 
  2111     0798                     PMD2            equ	1944	;# 
  2112     0799                     PMD3            equ	1945	;# 
  2113     079A                     PMD4            equ	1946	;# 
  2114     079B                     PMD5            equ	1947	;# 
  2115     080C                     WDTCON0         equ	2060	;# 
  2116     080D                     WDTCON1         equ	2061	;# 
  2117     080E                     WDTPSL          equ	2062	;# 
  2118     080F                     WDTPSH          equ	2063	;# 
  2119     0810                     WDTTMR          equ	2064	;# 
  2120     0811                     BORCON          equ	2065	;# 
  2121     0812                     VREGCON         equ	2066	;# 
  2122     0813                     PCON0           equ	2067	;# 
  2123     0814                     CCDCON          equ	2068	;# 
  2124     081A                     NVMADRL         equ	2074	;# 
  2125     081B                     NVMADRH         equ	2075	;# 
  2126     081C                     NVMDATL         equ	2076	;# 
  2127     081D                     NVMDATH         equ	2077	;# 
  2128     081E                     NVMCON1         equ	2078	;# 
  2129     081F                     NVMCON2         equ	2079	;# 
  2130     088C                     CPUDOZE         equ	2188	;# 
  2131     088D                     OSCCON1         equ	2189	;# 
  2132     088E                     OSCCON2         equ	2190	;# 
  2133     088F                     OSCCON3         equ	2191	;# 
  2134     0890                     OSCSTAT         equ	2192	;# 
  2135     0891                     OSCEN           equ	2193	;# 
  2136     0892                     OSCTUNE         equ	2194	;# 
  2137     0893                     OSCFRQ          equ	2195	;# 
  2138     0895                     CLKRCON         equ	2197	;# 
  2139     0896                     CLKRCLK         equ	2198	;# 
  2140     0897                     MDCON0          equ	2199	;# 
  2141     0898                     MDCON1          equ	2200	;# 
  2142     0899                     MDSRC           equ	2201	;# 
  2143     089A                     MDCARL          equ	2202	;# 
  2144     089B                     MDCARH          equ	2203	;# 
  2145     090C                     FVRCON          equ	2316	;# 
  2146     090E                     DAC1CON0        equ	2318	;# 
  2147     090F                     DAC1CON1        equ	2319	;# 
  2148     091F                     ZCD1CON         equ	2335	;# 
  2149     091F                     ZCDCON          equ	2335	;# 
  2150     098F                     CMOUT           equ	2447	;# 
  2151     098F                     CMSTAT          equ	2447	;# 
  2152     0990                     CM1CON0         equ	2448	;# 
  2153     0991                     CM1CON1         equ	2449	;# 
  2154     0992                     CM1NSEL         equ	2450	;# 
  2155     0993                     CM1PSEL         equ	2451	;# 
  2156     0994                     CM2CON0         equ	2452	;# 
  2157     0995                     CM2CON1         equ	2453	;# 
  2158     0996                     CM2NSEL         equ	2454	;# 
  2159     0997                     CM2PSEL         equ	2455	;# 
  2160     0E0F                     CLCDATA         equ	3599	;# 
  2161     0E10                     CLC1CON         equ	3600	;# 
  2162     0E11                     CLC1POL         equ	3601	;# 
  2163     0E12                     CLC1SEL0        equ	3602	;# 
  2164     0E13                     CLC1SEL1        equ	3603	;# 
  2165     0E14                     CLC1SEL2        equ	3604	;# 
  2166     0E15                     CLC1SEL3        equ	3605	;# 
  2167     0E16                     CLC1GLS0        equ	3606	;# 
  2168     0E17                     CLC1GLS1        equ	3607	;# 
  2169     0E18                     CLC1GLS2        equ	3608	;# 
  2170     0E19                     CLC1GLS3        equ	3609	;# 
  2171     0E1A                     CLC2CON         equ	3610	;# 
  2172     0E1B                     CLC2POL         equ	3611	;# 
  2173     0E1C                     CLC2SEL0        equ	3612	;# 
  2174     0E1D                     CLC2SEL1        equ	3613	;# 
  2175     0E1E                     CLC2SEL2        equ	3614	;# 
  2176     0E1F                     CLC2SEL3        equ	3615	;# 
  2177     0E20                     CLC2GLS0        equ	3616	;# 
  2178     0E21                     CLC2GLS1        equ	3617	;# 
  2179     0E22                     CLC2GLS2        equ	3618	;# 
  2180     0E23                     CLC2GLS3        equ	3619	;# 
  2181     0E24                     CLC3CON         equ	3620	;# 
  2182     0E25                     CLC3POL         equ	3621	;# 
  2183     0E26                     CLC3SEL0        equ	3622	;# 
  2184     0E27                     CLC3SEL1        equ	3623	;# 
  2185     0E28                     CLC3SEL2        equ	3624	;# 
  2186     0E29                     CLC3SEL3        equ	3625	;# 
  2187     0E2A                     CLC3GLS0        equ	3626	;# 
  2188     0E2B                     CLC3GLS1        equ	3627	;# 
  2189     0E2C                     CLC3GLS2        equ	3628	;# 
  2190     0E2D                     CLC3GLS3        equ	3629	;# 
  2191     0E2E                     CLC4CON         equ	3630	;# 
  2192     0E2F                     CLC4POL         equ	3631	;# 
  2193     0E30                     CLC4SEL0        equ	3632	;# 
  2194     0E31                     CLC4SEL1        equ	3633	;# 
  2195     0E32                     CLC4SEL2        equ	3634	;# 
  2196     0E33                     CLC4SEL3        equ	3635	;# 
  2197     0E34                     CLC4GLS0        equ	3636	;# 
  2198     0E35                     CLC4GLS1        equ	3637	;# 
  2199     0E36                     CLC4GLS2        equ	3638	;# 
  2200     0E37                     CLC4GLS3        equ	3639	;# 
  2201     0E8F                     PPSLOCK         equ	3727	;# 
  2202     0E90                     INTPPS          equ	3728	;# 
  2203     0E91                     T0CKIPPS        equ	3729	;# 
  2204     0E92                     T1CKIPPS        equ	3730	;# 
  2205     0E93                     T1GPPS          equ	3731	;# 
  2206     0E94                     T3CKIPPS        equ	3732	;# 
  2207     0E95                     T3GPPS          equ	3733	;# 
  2208     0E96                     T5CKIPPS        equ	3734	;# 
  2209     0E97                     T5GPPS          equ	3735	;# 
  2210     0E9C                     T2AINPPS        equ	3740	;# 
  2211     0E9D                     T4AINPPS        equ	3741	;# 
  2212     0E9E                     T6AINPPS        equ	3742	;# 
  2213     0EA1                     CCP1PPS         equ	3745	;# 
  2214     0EA2                     CCP2PPS         equ	3746	;# 
  2215     0EA3                     CCP3PPS         equ	3747	;# 
  2216     0EA4                     CCP4PPS         equ	3748	;# 
  2217     0EA5                     CCP5PPS         equ	3749	;# 
  2218     0EA9                     SMT1WINPPS      equ	3753	;# 
  2219     0EAA                     SMT1SIGPPS      equ	3754	;# 
  2220     0EAB                     SMT2WINPPS      equ	3755	;# 
  2221     0EAC                     SMT2SIGPPS      equ	3756	;# 
  2222     0EB1                     CWG1PPS         equ	3761	;# 
  2223     0EB2                     CWG2PPS         equ	3762	;# 
  2224     0EB3                     CWG3PPS         equ	3763	;# 
  2225     0EB8                     MDCARLPPS       equ	3768	;# 
  2226     0EB9                     MDCARHPPS       equ	3769	;# 
  2227     0EBA                     MDSRCPPS        equ	3770	;# 
  2228     0EBB                     CLCIN0PPS       equ	3771	;# 
  2229     0EBC                     CLCIN1PPS       equ	3772	;# 
  2230     0EBD                     CLCIN2PPS       equ	3773	;# 
  2231     0EBE                     CLCIN3PPS       equ	3774	;# 
  2232     0EC3                     ADCACTPPS       equ	3779	;# 
  2233     0EC5                     SSP1CLKPPS      equ	3781	;# 
  2234     0EC6                     SSP1DATPPS      equ	3782	;# 
  2235     0EC7                     SSP1SSPPS       equ	3783	;# 
  2236     0EC8                     SSP2CLKPPS      equ	3784	;# 
  2237     0EC9                     SSP2DATPPS      equ	3785	;# 
  2238     0ECA                     SSP2SSPPS       equ	3786	;# 
  2239     0ECB                     RXPPS           equ	3787	;# 
  2240     0ECC                     TXPPS           equ	3788	;# 
  2241     0F10                     RA0PPS          equ	3856	;# 
  2242     0F11                     RA1PPS          equ	3857	;# 
  2243     0F12                     RA2PPS          equ	3858	;# 
  2244     0F13                     RA3PPS          equ	3859	;# 
  2245     0F14                     RA4PPS          equ	3860	;# 
  2246     0F15                     RA5PPS          equ	3861	;# 
  2247     0F16                     RA6PPS          equ	3862	;# 
  2248     0F17                     RA7PPS          equ	3863	;# 
  2249     0F18                     RB0PPS          equ	3864	;# 
  2250     0F19                     RB1PPS          equ	3865	;# 
  2251     0F1A                     RB2PPS          equ	3866	;# 
  2252     0F1B                     RB3PPS          equ	3867	;# 
  2253     0F1C                     RB4PPS          equ	3868	;# 
  2254     0F1D                     RB5PPS          equ	3869	;# 
  2255     0F1E                     RB6PPS          equ	3870	;# 
  2256     0F1F                     RB7PPS          equ	3871	;# 
  2257     0F20                     RC0PPS          equ	3872	;# 
  2258     0F21                     RC1PPS          equ	3873	;# 
  2259     0F22                     RC2PPS          equ	3874	;# 
  2260     0F23                     RC3PPS          equ	3875	;# 
  2261     0F24                     RC4PPS          equ	3876	;# 
  2262     0F25                     RC5PPS          equ	3877	;# 
  2263     0F26                     RC6PPS          equ	3878	;# 
  2264     0F27                     RC7PPS          equ	3879	;# 
  2265     0F28                     RD0PPS          equ	3880	;# 
  2266     0F29                     RD1PPS          equ	3881	;# 
  2267     0F2A                     RD2PPS          equ	3882	;# 
  2268     0F2B                     RD3PPS          equ	3883	;# 
  2269     0F2C                     RD4PPS          equ	3884	;# 
  2270     0F2D                     RD5PPS          equ	3885	;# 
  2271     0F2E                     RD6PPS          equ	3886	;# 
  2272     0F2F                     RD7PPS          equ	3887	;# 
  2273     0F30                     RE0PPS          equ	3888	;# 
  2274     0F31                     RE1PPS          equ	3889	;# 
  2275     0F32                     RE2PPS          equ	3890	;# 
  2276     0F38                     ANSELA          equ	3896	;# 
  2277     0F39                     WPUA            equ	3897	;# 
  2278     0F3A                     ODCONA          equ	3898	;# 
  2279     0F3B                     SLRCONA         equ	3899	;# 
  2280     0F3C                     INLVLA          equ	3900	;# 
  2281     0F3D                     IOCAP           equ	3901	;# 
  2282     0F3E                     IOCAN           equ	3902	;# 
  2283     0F3F                     IOCAF           equ	3903	;# 
  2284     0F40                     CCDNA           equ	3904	;# 
  2285     0F41                     CCDPA           equ	3905	;# 
  2286     0F43                     ANSELB          equ	3907	;# 
  2287     0F44                     WPUB            equ	3908	;# 
  2288     0F45                     ODCONB          equ	3909	;# 
  2289     0F46                     SLRCONB         equ	3910	;# 
  2290     0F47                     INLVLB          equ	3911	;# 
  2291     0F48                     IOCBP           equ	3912	;# 
  2292     0F49                     IOCBN           equ	3913	;# 
  2293     0F4A                     IOCBF           equ	3914	;# 
  2294     0F4B                     CCDNB           equ	3915	;# 
  2295     0F4C                     CCDPB           equ	3916	;# 
  2296     0F4E                     ANSELC          equ	3918	;# 
  2297     0F4F                     WPUC            equ	3919	;# 
  2298     0F50                     ODCONC          equ	3920	;# 
  2299     0F51                     SLRCONC         equ	3921	;# 
  2300     0F52                     INLVLC          equ	3922	;# 
  2301     0F53                     IOCCP           equ	3923	;# 
  2302     0F54                     IOCCN           equ	3924	;# 
  2303     0F55                     IOCCF           equ	3925	;# 
  2304     0F56                     CCDNC           equ	3926	;# 
  2305     0F57                     CCDPC           equ	3927	;# 
  2306     0F59                     ANSELD          equ	3929	;# 
  2307     0F5A                     WPUD            equ	3930	;# 
  2308     0F5B                     ODCOND          equ	3931	;# 
  2309     0F5C                     SLRCOND         equ	3932	;# 
  2310     0F5D                     INLVLD          equ	3933	;# 
  2311     0F61                     CCDND           equ	3937	;# 
  2312     0F62                     CCDPD           equ	3938	;# 
  2313     0F64                     ANSELE          equ	3940	;# 
  2314     0F65                     WPUE            equ	3941	;# 
  2315     0F66                     ODCONE          equ	3942	;# 
  2316     0F67                     SLRCONE         equ	3943	;# 
  2317     0F68                     INLVLE          equ	3944	;# 
  2318     0F69                     IOCEP           equ	3945	;# 
  2319     0F6A                     IOCEN           equ	3946	;# 
  2320     0F6B                     IOCEF           equ	3947	;# 
  2321     0F6C                     CCDNE           equ	3948	;# 
  2322     0F6D                     CCDPE           equ	3949	;# 
  2323     0FE4                     STATUS_SHAD     equ	4068	;# 
  2324     0FE5                     WREG_SHAD       equ	4069	;# 
  2325     0FE6                     BSR_SHAD        equ	4070	;# 
  2326     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2327     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2328     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2329     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2330     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2331     0FED                     STKPTR          equ	4077	;# 
  2332     0FEE                     TOSL            equ	4078	;# 
  2333     0FEF                     TOSH            equ	4079	;# 
  2334     0000                     INDF0           equ	0	;# 
  2335     0001                     INDF1           equ	1	;# 
  2336     0002                     PCL             equ	2	;# 
  2337     0003                     STATUS          equ	3	;# 
  2338     0004                     FSR0L           equ	4	;# 
  2339     0005                     FSR0H           equ	5	;# 
  2340     0006                     FSR1L           equ	6	;# 
  2341     0007                     FSR1H           equ	7	;# 
  2342     0008                     BSR             equ	8	;# 
  2343     0009                     WREG            equ	9	;# 
  2344     000A                     PCLATH          equ	10	;# 
  2345     000B                     INTCON          equ	11	;# 
  2346     000C                     PORTA           equ	12	;# 
  2347     000D                     PORTB           equ	13	;# 
  2348     000E                     PORTC           equ	14	;# 
  2349     000F                     PORTD           equ	15	;# 
  2350     0010                     PORTE           equ	16	;# 
  2351     0011                     TRISA           equ	17	;# 
  2352     0012                     TRISB           equ	18	;# 
  2353     0013                     TRISC           equ	19	;# 
  2354     0014                     TRISD           equ	20	;# 
  2355     0015                     TRISE           equ	21	;# 
  2356     0016                     LATA            equ	22	;# 
  2357     0017                     LATB            equ	23	;# 
  2358     0018                     LATC            equ	24	;# 
  2359     0019                     LATD            equ	25	;# 
  2360     001A                     LATE            equ	26	;# 
  2361     001C                     TMR0L           equ	28	;# 
  2362     001C                     TMR0            equ	28	;# 
  2363     001D                     TMR0H           equ	29	;# 
  2364     001D                     PR0             equ	29	;# 
  2365     001E                     T0CON0          equ	30	;# 
  2366     001F                     T0CON1          equ	31	;# 
  2367     008C                     ADRES           equ	140	;# 
  2368     008C                     ADRESL          equ	140	;# 
  2369     008D                     ADRESH          equ	141	;# 
  2370     008E                     ADPREV          equ	142	;# 
  2371     008E                     ADPREVL         equ	142	;# 
  2372     008F                     ADPREVH         equ	143	;# 
  2373     0090                     ADACC           equ	144	;# 
  2374     0090                     ADACCL          equ	144	;# 
  2375     0091                     ADACCH          equ	145	;# 
  2376     0093                     ADCON0          equ	147	;# 
  2377     0094                     ADCON1          equ	148	;# 
  2378     0095                     ADCON2          equ	149	;# 
  2379     0096                     ADCON3          equ	150	;# 
  2380     0097                     ADSTAT          equ	151	;# 
  2381     0098                     ADCLK           equ	152	;# 
  2382     0099                     ADACT           equ	153	;# 
  2383     009A                     ADREF           equ	154	;# 
  2384     009B                     ADCAP           equ	155	;# 
  2385     009C                     ADPRE           equ	156	;# 
  2386     009D                     ADACQ           equ	157	;# 
  2387     009E                     ADPCH           equ	158	;# 
  2388     010C                     ADCNT           equ	268	;# 
  2389     010D                     ADRPT           equ	269	;# 
  2390     010E                     ADLTH           equ	270	;# 
  2391     010E                     ADLTHL          equ	270	;# 
  2392     010F                     ADLTHH          equ	271	;# 
  2393     0110                     ADUTH           equ	272	;# 
  2394     0110                     ADUTHL          equ	272	;# 
  2395     0111                     ADUTHH          equ	273	;# 
  2396     0112                     ADSTPT          equ	274	;# 
  2397     0112                     ADSTPTL         equ	274	;# 
  2398     0113                     ADSTPTH         equ	275	;# 
  2399     0114                     ADFLTR          equ	276	;# 
  2400     0114                     ADFLTRL         equ	276	;# 
  2401     0115                     ADFLTRH         equ	277	;# 
  2402     0116                     ADERR           equ	278	;# 
  2403     0116                     ADERRL          equ	278	;# 
  2404     0117                     ADERRH          equ	279	;# 
  2405     0119                     RC1REG          equ	281	;# 
  2406     0119                     RCREG           equ	281	;# 
  2407     0119                     RCREG1          equ	281	;# 
  2408     011A                     TX1REG          equ	282	;# 
  2409     011A                     TXREG1          equ	282	;# 
  2410     011A                     TXREG           equ	282	;# 
  2411     011B                     SP1BRG          equ	283	;# 
  2412     011B                     SP1BRGL         equ	283	;# 
  2413     011B                     SPBRG           equ	283	;# 
  2414     011B                     SPBRG1          equ	283	;# 
  2415     011B                     SPBRGL          equ	283	;# 
  2416     011C                     SP1BRGH         equ	284	;# 
  2417     011C                     SPBRGH          equ	284	;# 
  2418     011C                     SPBRGH1         equ	284	;# 
  2419     011D                     RC1STA          equ	285	;# 
  2420     011D                     RCSTA1          equ	285	;# 
  2421     011D                     RCSTA           equ	285	;# 
  2422     011E                     TX1STA          equ	286	;# 
  2423     011E                     TXSTA1          equ	286	;# 
  2424     011E                     TXSTA           equ	286	;# 
  2425     011F                     BAUD1CON        equ	287	;# 
  2426     011F                     BAUDCON1        equ	287	;# 
  2427     011F                     BAUDCTL1        equ	287	;# 
  2428     011F                     BAUDCON         equ	287	;# 
  2429     011F                     BAUDCTL         equ	287	;# 
  2430     018C                     SSP1BUF         equ	396	;# 
  2431     018D                     SSP1ADD         equ	397	;# 
  2432     018E                     SSP1MSK         equ	398	;# 
  2433     018F                     SSP1STAT        equ	399	;# 
  2434     0190                     SSP1CON1        equ	400	;# 
  2435     0191                     SSP1CON2        equ	401	;# 
  2436     0192                     SSP1CON3        equ	402	;# 
  2437     0196                     SSP2BUF         equ	406	;# 
  2438     0197                     SSP2ADD         equ	407	;# 
  2439     0198                     SSP2MSK         equ	408	;# 
  2440     0199                     SSP2STAT        equ	409	;# 
  2441     019A                     SSP2CON1        equ	410	;# 
  2442     019B                     SSP2CON2        equ	411	;# 
  2443     019C                     SSP2CON3        equ	412	;# 
  2444     020C                     TMR1            equ	524	;# 
  2445     020C                     TMR1L           equ	524	;# 
  2446     020D                     TMR1H           equ	525	;# 
  2447     020E                     T1CON           equ	526	;# 
  2448     020F                     T1GCON          equ	527	;# 
  2449     020F                     PR1             equ	527	;# 
  2450     0210                     T1GATE          equ	528	;# 
  2451     0210                     TMR1GATE        equ	528	;# 
  2452     0211                     T1CLK           equ	529	;# 
  2453     0211                     TMR1CLK         equ	529	;# 
  2454     0212                     TMR3            equ	530	;# 
  2455     0212                     TMR3L           equ	530	;# 
  2456     0213                     TMR3H           equ	531	;# 
  2457     0214                     T3CON           equ	532	;# 
  2458     0215                     T3GCON          equ	533	;# 
  2459     0215                     PR3             equ	533	;# 
  2460     0216                     T3GATE          equ	534	;# 
  2461     0216                     TMR3GATE        equ	534	;# 
  2462     0217                     T3CLK           equ	535	;# 
  2463     0217                     TMR3CLK         equ	535	;# 
  2464     0218                     TMR5            equ	536	;# 
  2465     0218                     TMR5L           equ	536	;# 
  2466     0219                     TMR5H           equ	537	;# 
  2467     021A                     T5CON           equ	538	;# 
  2468     021B                     T5GCON          equ	539	;# 
  2469     021B                     PR5             equ	539	;# 
  2470     021C                     T5GATE          equ	540	;# 
  2471     021C                     TMR5GATE        equ	540	;# 
  2472     021D                     T5CLK           equ	541	;# 
  2473     021D                     TMR5CLK         equ	541	;# 
  2474     021E                     CCPTMRS0        equ	542	;# 
  2475     021F                     CCPTMRS1        equ	543	;# 
  2476     028C                     T2TMR           equ	652	;# 
  2477     028C                     TMR2            equ	652	;# 
  2478     028D                     T2PR            equ	653	;# 
  2479     028D                     PR2             equ	653	;# 
  2480     028E                     T2CON           equ	654	;# 
  2481     028F                     T2HLT           equ	655	;# 
  2482     0290                     T2CLKCON        equ	656	;# 
  2483     0290                     T2CLK           equ	656	;# 
  2484     0291                     T2RST           equ	657	;# 
  2485     0292                     T4TMR           equ	658	;# 
  2486     0292                     TMR4            equ	658	;# 
  2487     0293                     T4PR            equ	659	;# 
  2488     0293                     PR4             equ	659	;# 
  2489     0294                     T4CON           equ	660	;# 
  2490     0295                     T4HLT           equ	661	;# 
  2491     0296                     T4CLKCON        equ	662	;# 
  2492     0296                     T4CLK           equ	662	;# 
  2493     0297                     T4RST           equ	663	;# 
  2494     0298                     T6TMR           equ	664	;# 
  2495     0298                     TMR6            equ	664	;# 
  2496     0299                     T6PR            equ	665	;# 
  2497     0299                     PR6             equ	665	;# 
  2498     029A                     T6CON           equ	666	;# 
  2499     029B                     T6HLT           equ	667	;# 
  2500     029C                     T6CLKCON        equ	668	;# 
  2501     029C                     T6CLK           equ	668	;# 
  2502     029D                     T6RST           equ	669	;# 
  2503     030C                     CCPR1           equ	780	;# 
  2504     030C                     CCPR1L          equ	780	;# 
  2505     030D                     CCPR1H          equ	781	;# 
  2506     030E                     CCP1CON         equ	782	;# 
  2507     030F                     CCP1CAP         equ	783	;# 
  2508     0310                     CCPR2           equ	784	;# 
  2509     0310                     CCPR2L          equ	784	;# 
  2510     0311                     CCPR2H          equ	785	;# 
  2511     0312                     CCP2CON         equ	786	;# 
  2512     0313                     CCP2CAP         equ	787	;# 
  2513     0314                     CCPR3           equ	788	;# 
  2514     0314                     CCPR3L          equ	788	;# 
  2515     0315                     CCPR3H          equ	789	;# 
  2516     0316                     CCP3CON         equ	790	;# 
  2517     0317                     CCP3CAP         equ	791	;# 
  2518     0318                     CCPR4           equ	792	;# 
  2519     0318                     CCPR4L          equ	792	;# 
  2520     0319                     CCPR4H          equ	793	;# 
  2521     031A                     CCP4CON         equ	794	;# 
  2522     031B                     CCP4CAP         equ	795	;# 
  2523     031C                     CCPR5           equ	796	;# 
  2524     031C                     CCPR5L          equ	796	;# 
  2525     031D                     CCPR5H          equ	797	;# 
  2526     031E                     CCP5CON         equ	798	;# 
  2527     031F                     CCP5CAP         equ	799	;# 
  2528     038C                     PWM6DC          equ	908	;# 
  2529     038C                     PWM6DCL         equ	908	;# 
  2530     038D                     PWM6DCH         equ	909	;# 
  2531     038E                     PWM6CON         equ	910	;# 
  2532     0390                     PWM7DC          equ	912	;# 
  2533     0390                     PWM7DCL         equ	912	;# 
  2534     0391                     PWM7DCH         equ	913	;# 
  2535     0392                     PWM7CON         equ	914	;# 
  2536     040C                     SCANLADRL       equ	1036	;# 
  2537     040D                     SCANLADRH       equ	1037	;# 
  2538     040E                     SCANHADRL       equ	1038	;# 
  2539     040F                     SCANHADRH       equ	1039	;# 
  2540     0410                     SCANCON0        equ	1040	;# 
  2541     0411                     SCANTRIG        equ	1041	;# 
  2542     0416                     CRCDATA         equ	1046	;# 
  2543     0416                     CRCDATL         equ	1046	;# 
  2544     0417                     CRCDATH         equ	1047	;# 
  2545     0418                     CRCACC          equ	1048	;# 
  2546     0418                     CRCACCL         equ	1048	;# 
  2547     0419                     CRCACCH         equ	1049	;# 
  2548     041A                     CRCSHFT         equ	1050	;# 
  2549     041A                     CRCSHIFTL       equ	1050	;# 
  2550     041B                     CRCSHIFTH       equ	1051	;# 
  2551     041C                     CRCXOR          equ	1052	;# 
  2552     041C                     CRCXORL         equ	1052	;# 
  2553     041D                     CRCXORH         equ	1053	;# 
  2554     041E                     CRCCON0         equ	1054	;# 
  2555     041F                     CRCCON1         equ	1055	;# 
  2556     048C                     SMT1TMR         equ	1164	;# 
  2557     048C                     SMT1TMRL        equ	1164	;# 
  2558     048D                     SMT1TMRH        equ	1165	;# 
  2559     048E                     SMT1TMRU        equ	1166	;# 
  2560     048F                     SMT1CPR         equ	1167	;# 
  2561     048F                     SMT1CPRL        equ	1167	;# 
  2562     0490                     SMT1CPRH        equ	1168	;# 
  2563     0491                     SMT1CPRU        equ	1169	;# 
  2564     0492                     SMT1CPW         equ	1170	;# 
  2565     0492                     SMT1CPWL        equ	1170	;# 
  2566     0493                     SMT1CPWH        equ	1171	;# 
  2567     0494                     SMT1CPWU        equ	1172	;# 
  2568     0495                     SMT1PR          equ	1173	;# 
  2569     0495                     SMT1PRL         equ	1173	;# 
  2570     0496                     SMT1PRH         equ	1174	;# 
  2571     0497                     SMT1PRU         equ	1175	;# 
  2572     0498                     SMT1CON0        equ	1176	;# 
  2573     0499                     SMT1CON1        equ	1177	;# 
  2574     049A                     SMT1STAT        equ	1178	;# 
  2575     049B                     SMT1CLK         equ	1179	;# 
  2576     049C                     SMT1SIG         equ	1180	;# 
  2577     049D                     SMT1WIN         equ	1181	;# 
  2578     050C                     SMT2TMR         equ	1292	;# 
  2579     050C                     SMT2TMRL        equ	1292	;# 
  2580     050D                     SMT2TMRH        equ	1293	;# 
  2581     050E                     SMT2TMRU        equ	1294	;# 
  2582     050F                     SMT2CPR         equ	1295	;# 
  2583     050F                     SMT2CPRL        equ	1295	;# 
  2584     0510                     SMT2CPRH        equ	1296	;# 
  2585     0511                     SMT2CPRU        equ	1297	;# 
  2586     0512                     SMT2CPW         equ	1298	;# 
  2587     0512                     SMT2CPWL        equ	1298	;# 
  2588     0513                     SMT2CPWH        equ	1299	;# 
  2589     0514                     SMT2CPWU        equ	1300	;# 
  2590     0515                     SMT2PR          equ	1301	;# 
  2591     0515                     SMT2PRL         equ	1301	;# 
  2592     0516                     SMT2PRH         equ	1302	;# 
  2593     0517                     SMT2PRU         equ	1303	;# 
  2594     0518                     SMT2CON0        equ	1304	;# 
  2595     0519                     SMT2CON1        equ	1305	;# 
  2596     051A                     SMT2STAT        equ	1306	;# 
  2597     051B                     SMT2CLK         equ	1307	;# 
  2598     051C                     SMT2SIG         equ	1308	;# 
  2599     051D                     SMT2WIN         equ	1309	;# 
  2600     058C                     NCO1ACC         equ	1420	;# 
  2601     058C                     NCO1ACCL        equ	1420	;# 
  2602     058D                     NCO1ACCH        equ	1421	;# 
  2603     058E                     NCO1ACCU        equ	1422	;# 
  2604     058F                     NCO1INC         equ	1423	;# 
  2605     058F                     NCO1INCL        equ	1423	;# 
  2606     0590                     NCO1INCH        equ	1424	;# 
  2607     0591                     NCO1INCU        equ	1425	;# 
  2608     0592                     NCO1CON         equ	1426	;# 
  2609     0593                     NCO1CLK         equ	1427	;# 
  2610     060C                     CWG1CLKCON      equ	1548	;# 
  2611     060D                     CWG1ISM         equ	1549	;# 
  2612     060E                     CWG1DBR         equ	1550	;# 
  2613     060F                     CWG1DBF         equ	1551	;# 
  2614     0610                     CWG1CON0        equ	1552	;# 
  2615     0611                     CWG1CON1        equ	1553	;# 
  2616     0612                     CWG1AS0         equ	1554	;# 
  2617     0613                     CWG1AS1         equ	1555	;# 
  2618     0614                     CWG1STR         equ	1556	;# 
  2619     0616                     CWG2CLKCON      equ	1558	;# 
  2620     0617                     CWG2ISM         equ	1559	;# 
  2621     0618                     CWG2DBR         equ	1560	;# 
  2622     0619                     CWG2DBF         equ	1561	;# 
  2623     061A                     CWG2CON0        equ	1562	;# 
  2624     061B                     CWG2CON1        equ	1563	;# 
  2625     061C                     CWG2AS0         equ	1564	;# 
  2626     061D                     CWG2AS1         equ	1565	;# 
  2627     061E                     CWG2STR         equ	1566	;# 
  2628     068C                     CWG3CLKCON      equ	1676	;# 
  2629     068D                     CWG3ISM         equ	1677	;# 
  2630     068E                     CWG3DBR         equ	1678	;# 
  2631     068F                     CWG3DBF         equ	1679	;# 
  2632     0690                     CWG3CON0        equ	1680	;# 
  2633     0691                     CWG3CON1        equ	1681	;# 
  2634     0692                     CWG3AS0         equ	1682	;# 
  2635     0693                     CWG3AS1         equ	1683	;# 
  2636     0694                     CWG3STR         equ	1684	;# 
  2637     070C                     PIR0            equ	1804	;# 
  2638     070D                     PIR1            equ	1805	;# 
  2639     070E                     PIR2            equ	1806	;# 
  2640     070F                     PIR3            equ	1807	;# 
  2641     0710                     PIR4            equ	1808	;# 
  2642     0711                     PIR5            equ	1809	;# 
  2643     0712                     PIR6            equ	1810	;# 
  2644     0713                     PIR7            equ	1811	;# 
  2645     0714                     PIR8            equ	1812	;# 
  2646     0716                     PIE0            equ	1814	;# 
  2647     0717                     PIE1            equ	1815	;# 
  2648     0718                     PIE2            equ	1816	;# 
  2649     0719                     PIE3            equ	1817	;# 
  2650     071A                     PIE4            equ	1818	;# 
  2651     071B                     PIE5            equ	1819	;# 
  2652     071C                     PIE6            equ	1820	;# 
  2653     071D                     PIE7            equ	1821	;# 
  2654     071E                     PIE8            equ	1822	;# 
  2655     0796                     PMD0            equ	1942	;# 
  2656     0797                     PMD1            equ	1943	;# 
  2657     0798                     PMD2            equ	1944	;# 
  2658     0799                     PMD3            equ	1945	;# 
  2659     079A                     PMD4            equ	1946	;# 
  2660     079B                     PMD5            equ	1947	;# 
  2661     080C                     WDTCON0         equ	2060	;# 
  2662     080D                     WDTCON1         equ	2061	;# 
  2663     080E                     WDTPSL          equ	2062	;# 
  2664     080F                     WDTPSH          equ	2063	;# 
  2665     0810                     WDTTMR          equ	2064	;# 
  2666     0811                     BORCON          equ	2065	;# 
  2667     0812                     VREGCON         equ	2066	;# 
  2668     0813                     PCON0           equ	2067	;# 
  2669     0814                     CCDCON          equ	2068	;# 
  2670     081A                     NVMADRL         equ	2074	;# 
  2671     081B                     NVMADRH         equ	2075	;# 
  2672     081C                     NVMDATL         equ	2076	;# 
  2673     081D                     NVMDATH         equ	2077	;# 
  2674     081E                     NVMCON1         equ	2078	;# 
  2675     081F                     NVMCON2         equ	2079	;# 
  2676     088C                     CPUDOZE         equ	2188	;# 
  2677     088D                     OSCCON1         equ	2189	;# 
  2678     088E                     OSCCON2         equ	2190	;# 
  2679     088F                     OSCCON3         equ	2191	;# 
  2680     0890                     OSCSTAT         equ	2192	;# 
  2681     0891                     OSCEN           equ	2193	;# 
  2682     0892                     OSCTUNE         equ	2194	;# 
  2683     0893                     OSCFRQ          equ	2195	;# 
  2684     0895                     CLKRCON         equ	2197	;# 
  2685     0896                     CLKRCLK         equ	2198	;# 
  2686     0897                     MDCON0          equ	2199	;# 
  2687     0898                     MDCON1          equ	2200	;# 
  2688     0899                     MDSRC           equ	2201	;# 
  2689     089A                     MDCARL          equ	2202	;# 
  2690     089B                     MDCARH          equ	2203	;# 
  2691     090C                     FVRCON          equ	2316	;# 
  2692     090E                     DAC1CON0        equ	2318	;# 
  2693     090F                     DAC1CON1        equ	2319	;# 
  2694     091F                     ZCD1CON         equ	2335	;# 
  2695     091F                     ZCDCON          equ	2335	;# 
  2696     098F                     CMOUT           equ	2447	;# 
  2697     098F                     CMSTAT          equ	2447	;# 
  2698     0990                     CM1CON0         equ	2448	;# 
  2699     0991                     CM1CON1         equ	2449	;# 
  2700     0992                     CM1NSEL         equ	2450	;# 
  2701     0993                     CM1PSEL         equ	2451	;# 
  2702     0994                     CM2CON0         equ	2452	;# 
  2703     0995                     CM2CON1         equ	2453	;# 
  2704     0996                     CM2NSEL         equ	2454	;# 
  2705     0997                     CM2PSEL         equ	2455	;# 
  2706     0E0F                     CLCDATA         equ	3599	;# 
  2707     0E10                     CLC1CON         equ	3600	;# 
  2708     0E11                     CLC1POL         equ	3601	;# 
  2709     0E12                     CLC1SEL0        equ	3602	;# 
  2710     0E13                     CLC1SEL1        equ	3603	;# 
  2711     0E14                     CLC1SEL2        equ	3604	;# 
  2712     0E15                     CLC1SEL3        equ	3605	;# 
  2713     0E16                     CLC1GLS0        equ	3606	;# 
  2714     0E17                     CLC1GLS1        equ	3607	;# 
  2715     0E18                     CLC1GLS2        equ	3608	;# 
  2716     0E19                     CLC1GLS3        equ	3609	;# 
  2717     0E1A                     CLC2CON         equ	3610	;# 
  2718     0E1B                     CLC2POL         equ	3611	;# 
  2719     0E1C                     CLC2SEL0        equ	3612	;# 
  2720     0E1D                     CLC2SEL1        equ	3613	;# 
  2721     0E1E                     CLC2SEL2        equ	3614	;# 
  2722     0E1F                     CLC2SEL3        equ	3615	;# 
  2723     0E20                     CLC2GLS0        equ	3616	;# 
  2724     0E21                     CLC2GLS1        equ	3617	;# 
  2725     0E22                     CLC2GLS2        equ	3618	;# 
  2726     0E23                     CLC2GLS3        equ	3619	;# 
  2727     0E24                     CLC3CON         equ	3620	;# 
  2728     0E25                     CLC3POL         equ	3621	;# 
  2729     0E26                     CLC3SEL0        equ	3622	;# 
  2730     0E27                     CLC3SEL1        equ	3623	;# 
  2731     0E28                     CLC3SEL2        equ	3624	;# 
  2732     0E29                     CLC3SEL3        equ	3625	;# 
  2733     0E2A                     CLC3GLS0        equ	3626	;# 
  2734     0E2B                     CLC3GLS1        equ	3627	;# 
  2735     0E2C                     CLC3GLS2        equ	3628	;# 
  2736     0E2D                     CLC3GLS3        equ	3629	;# 
  2737     0E2E                     CLC4CON         equ	3630	;# 
  2738     0E2F                     CLC4POL         equ	3631	;# 
  2739     0E30                     CLC4SEL0        equ	3632	;# 
  2740     0E31                     CLC4SEL1        equ	3633	;# 
  2741     0E32                     CLC4SEL2        equ	3634	;# 
  2742     0E33                     CLC4SEL3        equ	3635	;# 
  2743     0E34                     CLC4GLS0        equ	3636	;# 
  2744     0E35                     CLC4GLS1        equ	3637	;# 
  2745     0E36                     CLC4GLS2        equ	3638	;# 
  2746     0E37                     CLC4GLS3        equ	3639	;# 
  2747     0E8F                     PPSLOCK         equ	3727	;# 
  2748     0E90                     INTPPS          equ	3728	;# 
  2749     0E91                     T0CKIPPS        equ	3729	;# 
  2750     0E92                     T1CKIPPS        equ	3730	;# 
  2751     0E93                     T1GPPS          equ	3731	;# 
  2752     0E94                     T3CKIPPS        equ	3732	;# 
  2753     0E95                     T3GPPS          equ	3733	;# 
  2754     0E96                     T5CKIPPS        equ	3734	;# 
  2755     0E97                     T5GPPS          equ	3735	;# 
  2756     0E9C                     T2AINPPS        equ	3740	;# 
  2757     0E9D                     T4AINPPS        equ	3741	;# 
  2758     0E9E                     T6AINPPS        equ	3742	;# 
  2759     0EA1                     CCP1PPS         equ	3745	;# 
  2760     0EA2                     CCP2PPS         equ	3746	;# 
  2761     0EA3                     CCP3PPS         equ	3747	;# 
  2762     0EA4                     CCP4PPS         equ	3748	;# 
  2763     0EA5                     CCP5PPS         equ	3749	;# 
  2764     0EA9                     SMT1WINPPS      equ	3753	;# 
  2765     0EAA                     SMT1SIGPPS      equ	3754	;# 
  2766     0EAB                     SMT2WINPPS      equ	3755	;# 
  2767     0EAC                     SMT2SIGPPS      equ	3756	;# 
  2768     0EB1                     CWG1PPS         equ	3761	;# 
  2769     0EB2                     CWG2PPS         equ	3762	;# 
  2770     0EB3                     CWG3PPS         equ	3763	;# 
  2771     0EB8                     MDCARLPPS       equ	3768	;# 
  2772     0EB9                     MDCARHPPS       equ	3769	;# 
  2773     0EBA                     MDSRCPPS        equ	3770	;# 
  2774     0EBB                     CLCIN0PPS       equ	3771	;# 
  2775     0EBC                     CLCIN1PPS       equ	3772	;# 
  2776     0EBD                     CLCIN2PPS       equ	3773	;# 
  2777     0EBE                     CLCIN3PPS       equ	3774	;# 
  2778     0EC3                     ADCACTPPS       equ	3779	;# 
  2779     0EC5                     SSP1CLKPPS      equ	3781	;# 
  2780     0EC6                     SSP1DATPPS      equ	3782	;# 
  2781     0EC7                     SSP1SSPPS       equ	3783	;# 
  2782     0EC8                     SSP2CLKPPS      equ	3784	;# 
  2783     0EC9                     SSP2DATPPS      equ	3785	;# 
  2784     0ECA                     SSP2SSPPS       equ	3786	;# 
  2785     0ECB                     RXPPS           equ	3787	;# 
  2786     0ECC                     TXPPS           equ	3788	;# 
  2787     0F10                     RA0PPS          equ	3856	;# 
  2788     0F11                     RA1PPS          equ	3857	;# 
  2789     0F12                     RA2PPS          equ	3858	;# 
  2790     0F13                     RA3PPS          equ	3859	;# 
  2791     0F14                     RA4PPS          equ	3860	;# 
  2792     0F15                     RA5PPS          equ	3861	;# 
  2793     0F16                     RA6PPS          equ	3862	;# 
  2794     0F17                     RA7PPS          equ	3863	;# 
  2795     0F18                     RB0PPS          equ	3864	;# 
  2796     0F19                     RB1PPS          equ	3865	;# 
  2797     0F1A                     RB2PPS          equ	3866	;# 
  2798     0F1B                     RB3PPS          equ	3867	;# 
  2799     0F1C                     RB4PPS          equ	3868	;# 
  2800     0F1D                     RB5PPS          equ	3869	;# 
  2801     0F1E                     RB6PPS          equ	3870	;# 
  2802     0F1F                     RB7PPS          equ	3871	;# 
  2803     0F20                     RC0PPS          equ	3872	;# 
  2804     0F21                     RC1PPS          equ	3873	;# 
  2805     0F22                     RC2PPS          equ	3874	;# 
  2806     0F23                     RC3PPS          equ	3875	;# 
  2807     0F24                     RC4PPS          equ	3876	;# 
  2808     0F25                     RC5PPS          equ	3877	;# 
  2809     0F26                     RC6PPS          equ	3878	;# 
  2810     0F27                     RC7PPS          equ	3879	;# 
  2811     0F28                     RD0PPS          equ	3880	;# 
  2812     0F29                     RD1PPS          equ	3881	;# 
  2813     0F2A                     RD2PPS          equ	3882	;# 
  2814     0F2B                     RD3PPS          equ	3883	;# 
  2815     0F2C                     RD4PPS          equ	3884	;# 
  2816     0F2D                     RD5PPS          equ	3885	;# 
  2817     0F2E                     RD6PPS          equ	3886	;# 
  2818     0F2F                     RD7PPS          equ	3887	;# 
  2819     0F30                     RE0PPS          equ	3888	;# 
  2820     0F31                     RE1PPS          equ	3889	;# 
  2821     0F32                     RE2PPS          equ	3890	;# 
  2822     0F38                     ANSELA          equ	3896	;# 
  2823     0F39                     WPUA            equ	3897	;# 
  2824     0F3A                     ODCONA          equ	3898	;# 
  2825     0F3B                     SLRCONA         equ	3899	;# 
  2826     0F3C                     INLVLA          equ	3900	;# 
  2827     0F3D                     IOCAP           equ	3901	;# 
  2828     0F3E                     IOCAN           equ	3902	;# 
  2829     0F3F                     IOCAF           equ	3903	;# 
  2830     0F40                     CCDNA           equ	3904	;# 
  2831     0F41                     CCDPA           equ	3905	;# 
  2832     0F43                     ANSELB          equ	3907	;# 
  2833     0F44                     WPUB            equ	3908	;# 
  2834     0F45                     ODCONB          equ	3909	;# 
  2835     0F46                     SLRCONB         equ	3910	;# 
  2836     0F47                     INLVLB          equ	3911	;# 
  2837     0F48                     IOCBP           equ	3912	;# 
  2838     0F49                     IOCBN           equ	3913	;# 
  2839     0F4A                     IOCBF           equ	3914	;# 
  2840     0F4B                     CCDNB           equ	3915	;# 
  2841     0F4C                     CCDPB           equ	3916	;# 
  2842     0F4E                     ANSELC          equ	3918	;# 
  2843     0F4F                     WPUC            equ	3919	;# 
  2844     0F50                     ODCONC          equ	3920	;# 
  2845     0F51                     SLRCONC         equ	3921	;# 
  2846     0F52                     INLVLC          equ	3922	;# 
  2847     0F53                     IOCCP           equ	3923	;# 
  2848     0F54                     IOCCN           equ	3924	;# 
  2849     0F55                     IOCCF           equ	3925	;# 
  2850     0F56                     CCDNC           equ	3926	;# 
  2851     0F57                     CCDPC           equ	3927	;# 
  2852     0F59                     ANSELD          equ	3929	;# 
  2853     0F5A                     WPUD            equ	3930	;# 
  2854     0F5B                     ODCOND          equ	3931	;# 
  2855     0F5C                     SLRCOND         equ	3932	;# 
  2856     0F5D                     INLVLD          equ	3933	;# 
  2857     0F61                     CCDND           equ	3937	;# 
  2858     0F62                     CCDPD           equ	3938	;# 
  2859     0F64                     ANSELE          equ	3940	;# 
  2860     0F65                     WPUE            equ	3941	;# 
  2861     0F66                     ODCONE          equ	3942	;# 
  2862     0F67                     SLRCONE         equ	3943	;# 
  2863     0F68                     INLVLE          equ	3944	;# 
  2864     0F69                     IOCEP           equ	3945	;# 
  2865     0F6A                     IOCEN           equ	3946	;# 
  2866     0F6B                     IOCEF           equ	3947	;# 
  2867     0F6C                     CCDNE           equ	3948	;# 
  2868     0F6D                     CCDPE           equ	3949	;# 
  2869     0FE4                     STATUS_SHAD     equ	4068	;# 
  2870     0FE5                     WREG_SHAD       equ	4069	;# 
  2871     0FE6                     BSR_SHAD        equ	4070	;# 
  2872     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2873     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2874     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2875     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2876     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2877     0FED                     STKPTR          equ	4077	;# 
  2878     0FEE                     TOSL            equ	4078	;# 
  2879     0FEF                     TOSH            equ	4079	;# 
  2880     0000                     INDF0           equ	0	;# 
  2881     0001                     INDF1           equ	1	;# 
  2882     0002                     PCL             equ	2	;# 
  2883     0003                     STATUS          equ	3	;# 
  2884     0004                     FSR0L           equ	4	;# 
  2885     0005                     FSR0H           equ	5	;# 
  2886     0006                     FSR1L           equ	6	;# 
  2887     0007                     FSR1H           equ	7	;# 
  2888     0008                     BSR             equ	8	;# 
  2889     0009                     WREG            equ	9	;# 
  2890     000A                     PCLATH          equ	10	;# 
  2891     000B                     INTCON          equ	11	;# 
  2892     000C                     PORTA           equ	12	;# 
  2893     000D                     PORTB           equ	13	;# 
  2894     000E                     PORTC           equ	14	;# 
  2895     000F                     PORTD           equ	15	;# 
  2896     0010                     PORTE           equ	16	;# 
  2897     0011                     TRISA           equ	17	;# 
  2898     0012                     TRISB           equ	18	;# 
  2899     0013                     TRISC           equ	19	;# 
  2900     0014                     TRISD           equ	20	;# 
  2901     0015                     TRISE           equ	21	;# 
  2902     0016                     LATA            equ	22	;# 
  2903     0017                     LATB            equ	23	;# 
  2904     0018                     LATC            equ	24	;# 
  2905     0019                     LATD            equ	25	;# 
  2906     001A                     LATE            equ	26	;# 
  2907     001C                     TMR0L           equ	28	;# 
  2908     001C                     TMR0            equ	28	;# 
  2909     001D                     TMR0H           equ	29	;# 
  2910     001D                     PR0             equ	29	;# 
  2911     001E                     T0CON0          equ	30	;# 
  2912     001F                     T0CON1          equ	31	;# 
  2913     008C                     ADRES           equ	140	;# 
  2914     008C                     ADRESL          equ	140	;# 
  2915     008D                     ADRESH          equ	141	;# 
  2916     008E                     ADPREV          equ	142	;# 
  2917     008E                     ADPREVL         equ	142	;# 
  2918     008F                     ADPREVH         equ	143	;# 
  2919     0090                     ADACC           equ	144	;# 
  2920     0090                     ADACCL          equ	144	;# 
  2921     0091                     ADACCH          equ	145	;# 
  2922     0093                     ADCON0          equ	147	;# 
  2923     0094                     ADCON1          equ	148	;# 
  2924     0095                     ADCON2          equ	149	;# 
  2925     0096                     ADCON3          equ	150	;# 
  2926     0097                     ADSTAT          equ	151	;# 
  2927     0098                     ADCLK           equ	152	;# 
  2928     0099                     ADACT           equ	153	;# 
  2929     009A                     ADREF           equ	154	;# 
  2930     009B                     ADCAP           equ	155	;# 
  2931     009C                     ADPRE           equ	156	;# 
  2932     009D                     ADACQ           equ	157	;# 
  2933     009E                     ADPCH           equ	158	;# 
  2934     010C                     ADCNT           equ	268	;# 
  2935     010D                     ADRPT           equ	269	;# 
  2936     010E                     ADLTH           equ	270	;# 
  2937     010E                     ADLTHL          equ	270	;# 
  2938     010F                     ADLTHH          equ	271	;# 
  2939     0110                     ADUTH           equ	272	;# 
  2940     0110                     ADUTHL          equ	272	;# 
  2941     0111                     ADUTHH          equ	273	;# 
  2942     0112                     ADSTPT          equ	274	;# 
  2943     0112                     ADSTPTL         equ	274	;# 
  2944     0113                     ADSTPTH         equ	275	;# 
  2945     0114                     ADFLTR          equ	276	;# 
  2946     0114                     ADFLTRL         equ	276	;# 
  2947     0115                     ADFLTRH         equ	277	;# 
  2948     0116                     ADERR           equ	278	;# 
  2949     0116                     ADERRL          equ	278	;# 
  2950     0117                     ADERRH          equ	279	;# 
  2951     0119                     RC1REG          equ	281	;# 
  2952     0119                     RCREG           equ	281	;# 
  2953     0119                     RCREG1          equ	281	;# 
  2954     011A                     TX1REG          equ	282	;# 
  2955     011A                     TXREG1          equ	282	;# 
  2956     011A                     TXREG           equ	282	;# 
  2957     011B                     SP1BRG          equ	283	;# 
  2958     011B                     SP1BRGL         equ	283	;# 
  2959     011B                     SPBRG           equ	283	;# 
  2960     011B                     SPBRG1          equ	283	;# 
  2961     011B                     SPBRGL          equ	283	;# 
  2962     011C                     SP1BRGH         equ	284	;# 
  2963     011C                     SPBRGH          equ	284	;# 
  2964     011C                     SPBRGH1         equ	284	;# 
  2965     011D                     RC1STA          equ	285	;# 
  2966     011D                     RCSTA1          equ	285	;# 
  2967     011D                     RCSTA           equ	285	;# 
  2968     011E                     TX1STA          equ	286	;# 
  2969     011E                     TXSTA1          equ	286	;# 
  2970     011E                     TXSTA           equ	286	;# 
  2971     011F                     BAUD1CON        equ	287	;# 
  2972     011F                     BAUDCON1        equ	287	;# 
  2973     011F                     BAUDCTL1        equ	287	;# 
  2974     011F                     BAUDCON         equ	287	;# 
  2975     011F                     BAUDCTL         equ	287	;# 
  2976     018C                     SSP1BUF         equ	396	;# 
  2977     018D                     SSP1ADD         equ	397	;# 
  2978     018E                     SSP1MSK         equ	398	;# 
  2979     018F                     SSP1STAT        equ	399	;# 
  2980     0190                     SSP1CON1        equ	400	;# 
  2981     0191                     SSP1CON2        equ	401	;# 
  2982     0192                     SSP1CON3        equ	402	;# 
  2983     0196                     SSP2BUF         equ	406	;# 
  2984     0197                     SSP2ADD         equ	407	;# 
  2985     0198                     SSP2MSK         equ	408	;# 
  2986     0199                     SSP2STAT        equ	409	;# 
  2987     019A                     SSP2CON1        equ	410	;# 
  2988     019B                     SSP2CON2        equ	411	;# 
  2989     019C                     SSP2CON3        equ	412	;# 
  2990     020C                     TMR1            equ	524	;# 
  2991     020C                     TMR1L           equ	524	;# 
  2992     020D                     TMR1H           equ	525	;# 
  2993     020E                     T1CON           equ	526	;# 
  2994     020F                     T1GCON          equ	527	;# 
  2995     020F                     PR1             equ	527	;# 
  2996     0210                     T1GATE          equ	528	;# 
  2997     0210                     TMR1GATE        equ	528	;# 
  2998     0211                     T1CLK           equ	529	;# 
  2999     0211                     TMR1CLK         equ	529	;# 
  3000     0212                     TMR3            equ	530	;# 
  3001     0212                     TMR3L           equ	530	;# 
  3002     0213                     TMR3H           equ	531	;# 
  3003     0214                     T3CON           equ	532	;# 
  3004     0215                     T3GCON          equ	533	;# 
  3005     0215                     PR3             equ	533	;# 
  3006     0216                     T3GATE          equ	534	;# 
  3007     0216                     TMR3GATE        equ	534	;# 
  3008     0217                     T3CLK           equ	535	;# 
  3009     0217                     TMR3CLK         equ	535	;# 
  3010     0218                     TMR5            equ	536	;# 
  3011     0218                     TMR5L           equ	536	;# 
  3012     0219                     TMR5H           equ	537	;# 
  3013     021A                     T5CON           equ	538	;# 
  3014     021B                     T5GCON          equ	539	;# 
  3015     021B                     PR5             equ	539	;# 
  3016     021C                     T5GATE          equ	540	;# 
  3017     021C                     TMR5GATE        equ	540	;# 
  3018     021D                     T5CLK           equ	541	;# 
  3019     021D                     TMR5CLK         equ	541	;# 
  3020     021E                     CCPTMRS0        equ	542	;# 
  3021     021F                     CCPTMRS1        equ	543	;# 
  3022     028C                     T2TMR           equ	652	;# 
  3023     028C                     TMR2            equ	652	;# 
  3024     028D                     T2PR            equ	653	;# 
  3025     028D                     PR2             equ	653	;# 
  3026     028E                     T2CON           equ	654	;# 
  3027     028F                     T2HLT           equ	655	;# 
  3028     0290                     T2CLKCON        equ	656	;# 
  3029     0290                     T2CLK           equ	656	;# 
  3030     0291                     T2RST           equ	657	;# 
  3031     0292                     T4TMR           equ	658	;# 
  3032     0292                     TMR4            equ	658	;# 
  3033     0293                     T4PR            equ	659	;# 
  3034     0293                     PR4             equ	659	;# 
  3035     0294                     T4CON           equ	660	;# 
  3036     0295                     T4HLT           equ	661	;# 
  3037     0296                     T4CLKCON        equ	662	;# 
  3038     0296                     T4CLK           equ	662	;# 
  3039     0297                     T4RST           equ	663	;# 
  3040     0298                     T6TMR           equ	664	;# 
  3041     0298                     TMR6            equ	664	;# 
  3042     0299                     T6PR            equ	665	;# 
  3043     0299                     PR6             equ	665	;# 
  3044     029A                     T6CON           equ	666	;# 
  3045     029B                     T6HLT           equ	667	;# 
  3046     029C                     T6CLKCON        equ	668	;# 
  3047     029C                     T6CLK           equ	668	;# 
  3048     029D                     T6RST           equ	669	;# 
  3049     030C                     CCPR1           equ	780	;# 
  3050     030C                     CCPR1L          equ	780	;# 
  3051     030D                     CCPR1H          equ	781	;# 
  3052     030E                     CCP1CON         equ	782	;# 
  3053     030F                     CCP1CAP         equ	783	;# 
  3054     0310                     CCPR2           equ	784	;# 
  3055     0310                     CCPR2L          equ	784	;# 
  3056     0311                     CCPR2H          equ	785	;# 
  3057     0312                     CCP2CON         equ	786	;# 
  3058     0313                     CCP2CAP         equ	787	;# 
  3059     0314                     CCPR3           equ	788	;# 
  3060     0314                     CCPR3L          equ	788	;# 
  3061     0315                     CCPR3H          equ	789	;# 
  3062     0316                     CCP3CON         equ	790	;# 
  3063     0317                     CCP3CAP         equ	791	;# 
  3064     0318                     CCPR4           equ	792	;# 
  3065     0318                     CCPR4L          equ	792	;# 
  3066     0319                     CCPR4H          equ	793	;# 
  3067     031A                     CCP4CON         equ	794	;# 
  3068     031B                     CCP4CAP         equ	795	;# 
  3069     031C                     CCPR5           equ	796	;# 
  3070     031C                     CCPR5L          equ	796	;# 
  3071     031D                     CCPR5H          equ	797	;# 
  3072     031E                     CCP5CON         equ	798	;# 
  3073     031F                     CCP5CAP         equ	799	;# 
  3074     038C                     PWM6DC          equ	908	;# 
  3075     038C                     PWM6DCL         equ	908	;# 
  3076     038D                     PWM6DCH         equ	909	;# 
  3077     038E                     PWM6CON         equ	910	;# 
  3078     0390                     PWM7DC          equ	912	;# 
  3079     0390                     PWM7DCL         equ	912	;# 
  3080     0391                     PWM7DCH         equ	913	;# 
  3081     0392                     PWM7CON         equ	914	;# 
  3082     040C                     SCANLADRL       equ	1036	;# 
  3083     040D                     SCANLADRH       equ	1037	;# 
  3084     040E                     SCANHADRL       equ	1038	;# 
  3085     040F                     SCANHADRH       equ	1039	;# 
  3086     0410                     SCANCON0        equ	1040	;# 
  3087     0411                     SCANTRIG        equ	1041	;# 
  3088     0416                     CRCDATA         equ	1046	;# 
  3089     0416                     CRCDATL         equ	1046	;# 
  3090     0417                     CRCDATH         equ	1047	;# 
  3091     0418                     CRCACC          equ	1048	;# 
  3092     0418                     CRCACCL         equ	1048	;# 
  3093     0419                     CRCACCH         equ	1049	;# 
  3094     041A                     CRCSHFT         equ	1050	;# 
  3095     041A                     CRCSHIFTL       equ	1050	;# 
  3096     041B                     CRCSHIFTH       equ	1051	;# 
  3097     041C                     CRCXOR          equ	1052	;# 
  3098     041C                     CRCXORL         equ	1052	;# 
  3099     041D                     CRCXORH         equ	1053	;# 
  3100     041E                     CRCCON0         equ	1054	;# 
  3101     041F                     CRCCON1         equ	1055	;# 
  3102     048C                     SMT1TMR         equ	1164	;# 
  3103     048C                     SMT1TMRL        equ	1164	;# 
  3104     048D                     SMT1TMRH        equ	1165	;# 
  3105     048E                     SMT1TMRU        equ	1166	;# 
  3106     048F                     SMT1CPR         equ	1167	;# 
  3107     048F                     SMT1CPRL        equ	1167	;# 
  3108     0490                     SMT1CPRH        equ	1168	;# 
  3109     0491                     SMT1CPRU        equ	1169	;# 
  3110     0492                     SMT1CPW         equ	1170	;# 
  3111     0492                     SMT1CPWL        equ	1170	;# 
  3112     0493                     SMT1CPWH        equ	1171	;# 
  3113     0494                     SMT1CPWU        equ	1172	;# 
  3114     0495                     SMT1PR          equ	1173	;# 
  3115     0495                     SMT1PRL         equ	1173	;# 
  3116     0496                     SMT1PRH         equ	1174	;# 
  3117     0497                     SMT1PRU         equ	1175	;# 
  3118     0498                     SMT1CON0        equ	1176	;# 
  3119     0499                     SMT1CON1        equ	1177	;# 
  3120     049A                     SMT1STAT        equ	1178	;# 
  3121     049B                     SMT1CLK         equ	1179	;# 
  3122     049C                     SMT1SIG         equ	1180	;# 
  3123     049D                     SMT1WIN         equ	1181	;# 
  3124     050C                     SMT2TMR         equ	1292	;# 
  3125     050C                     SMT2TMRL        equ	1292	;# 
  3126     050D                     SMT2TMRH        equ	1293	;# 
  3127     050E                     SMT2TMRU        equ	1294	;# 
  3128     050F                     SMT2CPR         equ	1295	;# 
  3129     050F                     SMT2CPRL        equ	1295	;# 
  3130     0510                     SMT2CPRH        equ	1296	;# 
  3131     0511                     SMT2CPRU        equ	1297	;# 
  3132     0512                     SMT2CPW         equ	1298	;# 
  3133     0512                     SMT2CPWL        equ	1298	;# 
  3134     0513                     SMT2CPWH        equ	1299	;# 
  3135     0514                     SMT2CPWU        equ	1300	;# 
  3136     0515                     SMT2PR          equ	1301	;# 
  3137     0515                     SMT2PRL         equ	1301	;# 
  3138     0516                     SMT2PRH         equ	1302	;# 
  3139     0517                     SMT2PRU         equ	1303	;# 
  3140     0518                     SMT2CON0        equ	1304	;# 
  3141     0519                     SMT2CON1        equ	1305	;# 
  3142     051A                     SMT2STAT        equ	1306	;# 
  3143     051B                     SMT2CLK         equ	1307	;# 
  3144     051C                     SMT2SIG         equ	1308	;# 
  3145     051D                     SMT2WIN         equ	1309	;# 
  3146     058C                     NCO1ACC         equ	1420	;# 
  3147     058C                     NCO1ACCL        equ	1420	;# 
  3148     058D                     NCO1ACCH        equ	1421	;# 
  3149     058E                     NCO1ACCU        equ	1422	;# 
  3150     058F                     NCO1INC         equ	1423	;# 
  3151     058F                     NCO1INCL        equ	1423	;# 
  3152     0590                     NCO1INCH        equ	1424	;# 
  3153     0591                     NCO1INCU        equ	1425	;# 
  3154     0592                     NCO1CON         equ	1426	;# 
  3155     0593                     NCO1CLK         equ	1427	;# 
  3156     060C                     CWG1CLKCON      equ	1548	;# 
  3157     060D                     CWG1ISM         equ	1549	;# 
  3158     060E                     CWG1DBR         equ	1550	;# 
  3159     060F                     CWG1DBF         equ	1551	;# 
  3160     0610                     CWG1CON0        equ	1552	;# 
  3161     0611                     CWG1CON1        equ	1553	;# 
  3162     0612                     CWG1AS0         equ	1554	;# 
  3163     0613                     CWG1AS1         equ	1555	;# 
  3164     0614                     CWG1STR         equ	1556	;# 
  3165     0616                     CWG2CLKCON      equ	1558	;# 
  3166     0617                     CWG2ISM         equ	1559	;# 
  3167     0618                     CWG2DBR         equ	1560	;# 
  3168     0619                     CWG2DBF         equ	1561	;# 
  3169     061A                     CWG2CON0        equ	1562	;# 
  3170     061B                     CWG2CON1        equ	1563	;# 
  3171     061C                     CWG2AS0         equ	1564	;# 
  3172     061D                     CWG2AS1         equ	1565	;# 
  3173     061E                     CWG2STR         equ	1566	;# 
  3174     068C                     CWG3CLKCON      equ	1676	;# 
  3175     068D                     CWG3ISM         equ	1677	;# 
  3176     068E                     CWG3DBR         equ	1678	;# 
  3177     068F                     CWG3DBF         equ	1679	;# 
  3178     0690                     CWG3CON0        equ	1680	;# 
  3179     0691                     CWG3CON1        equ	1681	;# 
  3180     0692                     CWG3AS0         equ	1682	;# 
  3181     0693                     CWG3AS1         equ	1683	;# 
  3182     0694                     CWG3STR         equ	1684	;# 
  3183     070C                     PIR0            equ	1804	;# 
  3184     070D                     PIR1            equ	1805	;# 
  3185     070E                     PIR2            equ	1806	;# 
  3186     070F                     PIR3            equ	1807	;# 
  3187     0710                     PIR4            equ	1808	;# 
  3188     0711                     PIR5            equ	1809	;# 
  3189     0712                     PIR6            equ	1810	;# 
  3190     0713                     PIR7            equ	1811	;# 
  3191     0714                     PIR8            equ	1812	;# 
  3192     0716                     PIE0            equ	1814	;# 
  3193     0717                     PIE1            equ	1815	;# 
  3194     0718                     PIE2            equ	1816	;# 
  3195     0719                     PIE3            equ	1817	;# 
  3196     071A                     PIE4            equ	1818	;# 
  3197     071B                     PIE5            equ	1819	;# 
  3198     071C                     PIE6            equ	1820	;# 
  3199     071D                     PIE7            equ	1821	;# 
  3200     071E                     PIE8            equ	1822	;# 
  3201     0796                     PMD0            equ	1942	;# 
  3202     0797                     PMD1            equ	1943	;# 
  3203     0798                     PMD2            equ	1944	;# 
  3204     0799                     PMD3            equ	1945	;# 
  3205     079A                     PMD4            equ	1946	;# 
  3206     079B                     PMD5            equ	1947	;# 
  3207     080C                     WDTCON0         equ	2060	;# 
  3208     080D                     WDTCON1         equ	2061	;# 
  3209     080E                     WDTPSL          equ	2062	;# 
  3210     080F                     WDTPSH          equ	2063	;# 
  3211     0810                     WDTTMR          equ	2064	;# 
  3212     0811                     BORCON          equ	2065	;# 
  3213     0812                     VREGCON         equ	2066	;# 
  3214     0813                     PCON0           equ	2067	;# 
  3215     0814                     CCDCON          equ	2068	;# 
  3216     081A                     NVMADRL         equ	2074	;# 
  3217     081B                     NVMADRH         equ	2075	;# 
  3218     081C                     NVMDATL         equ	2076	;# 
  3219     081D                     NVMDATH         equ	2077	;# 
  3220     081E                     NVMCON1         equ	2078	;# 
  3221     081F                     NVMCON2         equ	2079	;# 
  3222     088C                     CPUDOZE         equ	2188	;# 
  3223     088D                     OSCCON1         equ	2189	;# 
  3224     088E                     OSCCON2         equ	2190	;# 
  3225     088F                     OSCCON3         equ	2191	;# 
  3226     0890                     OSCSTAT         equ	2192	;# 
  3227     0891                     OSCEN           equ	2193	;# 
  3228     0892                     OSCTUNE         equ	2194	;# 
  3229     0893                     OSCFRQ          equ	2195	;# 
  3230     0895                     CLKRCON         equ	2197	;# 
  3231     0896                     CLKRCLK         equ	2198	;# 
  3232     0897                     MDCON0          equ	2199	;# 
  3233     0898                     MDCON1          equ	2200	;# 
  3234     0899                     MDSRC           equ	2201	;# 
  3235     089A                     MDCARL          equ	2202	;# 
  3236     089B                     MDCARH          equ	2203	;# 
  3237     090C                     FVRCON          equ	2316	;# 
  3238     090E                     DAC1CON0        equ	2318	;# 
  3239     090F                     DAC1CON1        equ	2319	;# 
  3240     091F                     ZCD1CON         equ	2335	;# 
  3241     091F                     ZCDCON          equ	2335	;# 
  3242     098F                     CMOUT           equ	2447	;# 
  3243     098F                     CMSTAT          equ	2447	;# 
  3244     0990                     CM1CON0         equ	2448	;# 
  3245     0991                     CM1CON1         equ	2449	;# 
  3246     0992                     CM1NSEL         equ	2450	;# 
  3247     0993                     CM1PSEL         equ	2451	;# 
  3248     0994                     CM2CON0         equ	2452	;# 
  3249     0995                     CM2CON1         equ	2453	;# 
  3250     0996                     CM2NSEL         equ	2454	;# 
  3251     0997                     CM2PSEL         equ	2455	;# 
  3252     0E0F                     CLCDATA         equ	3599	;# 
  3253     0E10                     CLC1CON         equ	3600	;# 
  3254     0E11                     CLC1POL         equ	3601	;# 
  3255     0E12                     CLC1SEL0        equ	3602	;# 
  3256     0E13                     CLC1SEL1        equ	3603	;# 
  3257     0E14                     CLC1SEL2        equ	3604	;# 
  3258     0E15                     CLC1SEL3        equ	3605	;# 
  3259     0E16                     CLC1GLS0        equ	3606	;# 
  3260     0E17                     CLC1GLS1        equ	3607	;# 
  3261     0E18                     CLC1GLS2        equ	3608	;# 
  3262     0E19                     CLC1GLS3        equ	3609	;# 
  3263     0E1A                     CLC2CON         equ	3610	;# 
  3264     0E1B                     CLC2POL         equ	3611	;# 
  3265     0E1C                     CLC2SEL0        equ	3612	;# 
  3266     0E1D                     CLC2SEL1        equ	3613	;# 
  3267     0E1E                     CLC2SEL2        equ	3614	;# 
  3268     0E1F                     CLC2SEL3        equ	3615	;# 
  3269     0E20                     CLC2GLS0        equ	3616	;# 
  3270     0E21                     CLC2GLS1        equ	3617	;# 
  3271     0E22                     CLC2GLS2        equ	3618	;# 
  3272     0E23                     CLC2GLS3        equ	3619	;# 
  3273     0E24                     CLC3CON         equ	3620	;# 
  3274     0E25                     CLC3POL         equ	3621	;# 
  3275     0E26                     CLC3SEL0        equ	3622	;# 
  3276     0E27                     CLC3SEL1        equ	3623	;# 
  3277     0E28                     CLC3SEL2        equ	3624	;# 
  3278     0E29                     CLC3SEL3        equ	3625	;# 
  3279     0E2A                     CLC3GLS0        equ	3626	;# 
  3280     0E2B                     CLC3GLS1        equ	3627	;# 
  3281     0E2C                     CLC3GLS2        equ	3628	;# 
  3282     0E2D                     CLC3GLS3        equ	3629	;# 
  3283     0E2E                     CLC4CON         equ	3630	;# 
  3284     0E2F                     CLC4POL         equ	3631	;# 
  3285     0E30                     CLC4SEL0        equ	3632	;# 
  3286     0E31                     CLC4SEL1        equ	3633	;# 
  3287     0E32                     CLC4SEL2        equ	3634	;# 
  3288     0E33                     CLC4SEL3        equ	3635	;# 
  3289     0E34                     CLC4GLS0        equ	3636	;# 
  3290     0E35                     CLC4GLS1        equ	3637	;# 
  3291     0E36                     CLC4GLS2        equ	3638	;# 
  3292     0E37                     CLC4GLS3        equ	3639	;# 
  3293     0E8F                     PPSLOCK         equ	3727	;# 
  3294     0E90                     INTPPS          equ	3728	;# 
  3295     0E91                     T0CKIPPS        equ	3729	;# 
  3296     0E92                     T1CKIPPS        equ	3730	;# 
  3297     0E93                     T1GPPS          equ	3731	;# 
  3298     0E94                     T3CKIPPS        equ	3732	;# 
  3299     0E95                     T3GPPS          equ	3733	;# 
  3300     0E96                     T5CKIPPS        equ	3734	;# 
  3301     0E97                     T5GPPS          equ	3735	;# 
  3302     0E9C                     T2AINPPS        equ	3740	;# 
  3303     0E9D                     T4AINPPS        equ	3741	;# 
  3304     0E9E                     T6AINPPS        equ	3742	;# 
  3305     0EA1                     CCP1PPS         equ	3745	;# 
  3306     0EA2                     CCP2PPS         equ	3746	;# 
  3307     0EA3                     CCP3PPS         equ	3747	;# 
  3308     0EA4                     CCP4PPS         equ	3748	;# 
  3309     0EA5                     CCP5PPS         equ	3749	;# 
  3310     0EA9                     SMT1WINPPS      equ	3753	;# 
  3311     0EAA                     SMT1SIGPPS      equ	3754	;# 
  3312     0EAB                     SMT2WINPPS      equ	3755	;# 
  3313     0EAC                     SMT2SIGPPS      equ	3756	;# 
  3314     0EB1                     CWG1PPS         equ	3761	;# 
  3315     0EB2                     CWG2PPS         equ	3762	;# 
  3316     0EB3                     CWG3PPS         equ	3763	;# 
  3317     0EB8                     MDCARLPPS       equ	3768	;# 
  3318     0EB9                     MDCARHPPS       equ	3769	;# 
  3319     0EBA                     MDSRCPPS        equ	3770	;# 
  3320     0EBB                     CLCIN0PPS       equ	3771	;# 
  3321     0EBC                     CLCIN1PPS       equ	3772	;# 
  3322     0EBD                     CLCIN2PPS       equ	3773	;# 
  3323     0EBE                     CLCIN3PPS       equ	3774	;# 
  3324     0EC3                     ADCACTPPS       equ	3779	;# 
  3325     0EC5                     SSP1CLKPPS      equ	3781	;# 
  3326     0EC6                     SSP1DATPPS      equ	3782	;# 
  3327     0EC7                     SSP1SSPPS       equ	3783	;# 
  3328     0EC8                     SSP2CLKPPS      equ	3784	;# 
  3329     0EC9                     SSP2DATPPS      equ	3785	;# 
  3330     0ECA                     SSP2SSPPS       equ	3786	;# 
  3331     0ECB                     RXPPS           equ	3787	;# 
  3332     0ECC                     TXPPS           equ	3788	;# 
  3333     0F10                     RA0PPS          equ	3856	;# 
  3334     0F11                     RA1PPS          equ	3857	;# 
  3335     0F12                     RA2PPS          equ	3858	;# 
  3336     0F13                     RA3PPS          equ	3859	;# 
  3337     0F14                     RA4PPS          equ	3860	;# 
  3338     0F15                     RA5PPS          equ	3861	;# 
  3339     0F16                     RA6PPS          equ	3862	;# 
  3340     0F17                     RA7PPS          equ	3863	;# 
  3341     0F18                     RB0PPS          equ	3864	;# 
  3342     0F19                     RB1PPS          equ	3865	;# 
  3343     0F1A                     RB2PPS          equ	3866	;# 
  3344     0F1B                     RB3PPS          equ	3867	;# 
  3345     0F1C                     RB4PPS          equ	3868	;# 
  3346     0F1D                     RB5PPS          equ	3869	;# 
  3347     0F1E                     RB6PPS          equ	3870	;# 
  3348     0F1F                     RB7PPS          equ	3871	;# 
  3349     0F20                     RC0PPS          equ	3872	;# 
  3350     0F21                     RC1PPS          equ	3873	;# 
  3351     0F22                     RC2PPS          equ	3874	;# 
  3352     0F23                     RC3PPS          equ	3875	;# 
  3353     0F24                     RC4PPS          equ	3876	;# 
  3354     0F25                     RC5PPS          equ	3877	;# 
  3355     0F26                     RC6PPS          equ	3878	;# 
  3356     0F27                     RC7PPS          equ	3879	;# 
  3357     0F28                     RD0PPS          equ	3880	;# 
  3358     0F29                     RD1PPS          equ	3881	;# 
  3359     0F2A                     RD2PPS          equ	3882	;# 
  3360     0F2B                     RD3PPS          equ	3883	;# 
  3361     0F2C                     RD4PPS          equ	3884	;# 
  3362     0F2D                     RD5PPS          equ	3885	;# 
  3363     0F2E                     RD6PPS          equ	3886	;# 
  3364     0F2F                     RD7PPS          equ	3887	;# 
  3365     0F30                     RE0PPS          equ	3888	;# 
  3366     0F31                     RE1PPS          equ	3889	;# 
  3367     0F32                     RE2PPS          equ	3890	;# 
  3368     0F38                     ANSELA          equ	3896	;# 
  3369     0F39                     WPUA            equ	3897	;# 
  3370     0F3A                     ODCONA          equ	3898	;# 
  3371     0F3B                     SLRCONA         equ	3899	;# 
  3372     0F3C                     INLVLA          equ	3900	;# 
  3373     0F3D                     IOCAP           equ	3901	;# 
  3374     0F3E                     IOCAN           equ	3902	;# 
  3375     0F3F                     IOCAF           equ	3903	;# 
  3376     0F40                     CCDNA           equ	3904	;# 
  3377     0F41                     CCDPA           equ	3905	;# 
  3378     0F43                     ANSELB          equ	3907	;# 
  3379     0F44                     WPUB            equ	3908	;# 
  3380     0F45                     ODCONB          equ	3909	;# 
  3381     0F46                     SLRCONB         equ	3910	;# 
  3382     0F47                     INLVLB          equ	3911	;# 
  3383     0F48                     IOCBP           equ	3912	;# 
  3384     0F49                     IOCBN           equ	3913	;# 
  3385     0F4A                     IOCBF           equ	3914	;# 
  3386     0F4B                     CCDNB           equ	3915	;# 
  3387     0F4C                     CCDPB           equ	3916	;# 
  3388     0F4E                     ANSELC          equ	3918	;# 
  3389     0F4F                     WPUC            equ	3919	;# 
  3390     0F50                     ODCONC          equ	3920	;# 
  3391     0F51                     SLRCONC         equ	3921	;# 
  3392     0F52                     INLVLC          equ	3922	;# 
  3393     0F53                     IOCCP           equ	3923	;# 
  3394     0F54                     IOCCN           equ	3924	;# 
  3395     0F55                     IOCCF           equ	3925	;# 
  3396     0F56                     CCDNC           equ	3926	;# 
  3397     0F57                     CCDPC           equ	3927	;# 
  3398     0F59                     ANSELD          equ	3929	;# 
  3399     0F5A                     WPUD            equ	3930	;# 
  3400     0F5B                     ODCOND          equ	3931	;# 
  3401     0F5C                     SLRCOND         equ	3932	;# 
  3402     0F5D                     INLVLD          equ	3933	;# 
  3403     0F61                     CCDND           equ	3937	;# 
  3404     0F62                     CCDPD           equ	3938	;# 
  3405     0F64                     ANSELE          equ	3940	;# 
  3406     0F65                     WPUE            equ	3941	;# 
  3407     0F66                     ODCONE          equ	3942	;# 
  3408     0F67                     SLRCONE         equ	3943	;# 
  3409     0F68                     INLVLE          equ	3944	;# 
  3410     0F69                     IOCEP           equ	3945	;# 
  3411     0F6A                     IOCEN           equ	3946	;# 
  3412     0F6B                     IOCEF           equ	3947	;# 
  3413     0F6C                     CCDNE           equ	3948	;# 
  3414     0F6D                     CCDPE           equ	3949	;# 
  3415     0FE4                     STATUS_SHAD     equ	4068	;# 
  3416     0FE5                     WREG_SHAD       equ	4069	;# 
  3417     0FE6                     BSR_SHAD        equ	4070	;# 
  3418     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3419     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3420     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3421     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3422     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3423     0FED                     STKPTR          equ	4077	;# 
  3424     0FEE                     TOSL            equ	4078	;# 
  3425     0FEF                     TOSH            equ	4079	;# 
  3426     0000                     INDF0           equ	0	;# 
  3427     0001                     INDF1           equ	1	;# 
  3428     0002                     PCL             equ	2	;# 
  3429     0003                     STATUS          equ	3	;# 
  3430     0004                     FSR0L           equ	4	;# 
  3431     0005                     FSR0H           equ	5	;# 
  3432     0006                     FSR1L           equ	6	;# 
  3433     0007                     FSR1H           equ	7	;# 
  3434     0008                     BSR             equ	8	;# 
  3435     0009                     WREG            equ	9	;# 
  3436     000A                     PCLATH          equ	10	;# 
  3437     000B                     INTCON          equ	11	;# 
  3438     000C                     PORTA           equ	12	;# 
  3439     000D                     PORTB           equ	13	;# 
  3440     000E                     PORTC           equ	14	;# 
  3441     000F                     PORTD           equ	15	;# 
  3442     0010                     PORTE           equ	16	;# 
  3443     0011                     TRISA           equ	17	;# 
  3444     0012                     TRISB           equ	18	;# 
  3445     0013                     TRISC           equ	19	;# 
  3446     0014                     TRISD           equ	20	;# 
  3447     0015                     TRISE           equ	21	;# 
  3448     0016                     LATA            equ	22	;# 
  3449     0017                     LATB            equ	23	;# 
  3450     0018                     LATC            equ	24	;# 
  3451     0019                     LATD            equ	25	;# 
  3452     001A                     LATE            equ	26	;# 
  3453     001C                     TMR0L           equ	28	;# 
  3454     001C                     TMR0            equ	28	;# 
  3455     001D                     TMR0H           equ	29	;# 
  3456     001D                     PR0             equ	29	;# 
  3457     001E                     T0CON0          equ	30	;# 
  3458     001F                     T0CON1          equ	31	;# 
  3459     008C                     ADRES           equ	140	;# 
  3460     008C                     ADRESL          equ	140	;# 
  3461     008D                     ADRESH          equ	141	;# 
  3462     008E                     ADPREV          equ	142	;# 
  3463     008E                     ADPREVL         equ	142	;# 
  3464     008F                     ADPREVH         equ	143	;# 
  3465     0090                     ADACC           equ	144	;# 
  3466     0090                     ADACCL          equ	144	;# 
  3467     0091                     ADACCH          equ	145	;# 
  3468     0093                     ADCON0          equ	147	;# 
  3469     0094                     ADCON1          equ	148	;# 
  3470     0095                     ADCON2          equ	149	;# 
  3471     0096                     ADCON3          equ	150	;# 
  3472     0097                     ADSTAT          equ	151	;# 
  3473     0098                     ADCLK           equ	152	;# 
  3474     0099                     ADACT           equ	153	;# 
  3475     009A                     ADREF           equ	154	;# 
  3476     009B                     ADCAP           equ	155	;# 
  3477     009C                     ADPRE           equ	156	;# 
  3478     009D                     ADACQ           equ	157	;# 
  3479     009E                     ADPCH           equ	158	;# 
  3480     010C                     ADCNT           equ	268	;# 
  3481     010D                     ADRPT           equ	269	;# 
  3482     010E                     ADLTH           equ	270	;# 
  3483     010E                     ADLTHL          equ	270	;# 
  3484     010F                     ADLTHH          equ	271	;# 
  3485     0110                     ADUTH           equ	272	;# 
  3486     0110                     ADUTHL          equ	272	;# 
  3487     0111                     ADUTHH          equ	273	;# 
  3488     0112                     ADSTPT          equ	274	;# 
  3489     0112                     ADSTPTL         equ	274	;# 
  3490     0113                     ADSTPTH         equ	275	;# 
  3491     0114                     ADFLTR          equ	276	;# 
  3492     0114                     ADFLTRL         equ	276	;# 
  3493     0115                     ADFLTRH         equ	277	;# 
  3494     0116                     ADERR           equ	278	;# 
  3495     0116                     ADERRL          equ	278	;# 
  3496     0117                     ADERRH          equ	279	;# 
  3497     0119                     RC1REG          equ	281	;# 
  3498     0119                     RCREG           equ	281	;# 
  3499     0119                     RCREG1          equ	281	;# 
  3500     011A                     TX1REG          equ	282	;# 
  3501     011A                     TXREG1          equ	282	;# 
  3502     011A                     TXREG           equ	282	;# 
  3503     011B                     SP1BRG          equ	283	;# 
  3504     011B                     SP1BRGL         equ	283	;# 
  3505     011B                     SPBRG           equ	283	;# 
  3506     011B                     SPBRG1          equ	283	;# 
  3507     011B                     SPBRGL          equ	283	;# 
  3508     011C                     SP1BRGH         equ	284	;# 
  3509     011C                     SPBRGH          equ	284	;# 
  3510     011C                     SPBRGH1         equ	284	;# 
  3511     011D                     RC1STA          equ	285	;# 
  3512     011D                     RCSTA1          equ	285	;# 
  3513     011D                     RCSTA           equ	285	;# 
  3514     011E                     TX1STA          equ	286	;# 
  3515     011E                     TXSTA1          equ	286	;# 
  3516     011E                     TXSTA           equ	286	;# 
  3517     011F                     BAUD1CON        equ	287	;# 
  3518     011F                     BAUDCON1        equ	287	;# 
  3519     011F                     BAUDCTL1        equ	287	;# 
  3520     011F                     BAUDCON         equ	287	;# 
  3521     011F                     BAUDCTL         equ	287	;# 
  3522     018C                     SSP1BUF         equ	396	;# 
  3523     018D                     SSP1ADD         equ	397	;# 
  3524     018E                     SSP1MSK         equ	398	;# 
  3525     018F                     SSP1STAT        equ	399	;# 
  3526     0190                     SSP1CON1        equ	400	;# 
  3527     0191                     SSP1CON2        equ	401	;# 
  3528     0192                     SSP1CON3        equ	402	;# 
  3529     0196                     SSP2BUF         equ	406	;# 
  3530     0197                     SSP2ADD         equ	407	;# 
  3531     0198                     SSP2MSK         equ	408	;# 
  3532     0199                     SSP2STAT        equ	409	;# 
  3533     019A                     SSP2CON1        equ	410	;# 
  3534     019B                     SSP2CON2        equ	411	;# 
  3535     019C                     SSP2CON3        equ	412	;# 
  3536     020C                     TMR1            equ	524	;# 
  3537     020C                     TMR1L           equ	524	;# 
  3538     020D                     TMR1H           equ	525	;# 
  3539     020E                     T1CON           equ	526	;# 
  3540     020F                     T1GCON          equ	527	;# 
  3541     020F                     PR1             equ	527	;# 
  3542     0210                     T1GATE          equ	528	;# 
  3543     0210                     TMR1GATE        equ	528	;# 
  3544     0211                     T1CLK           equ	529	;# 
  3545     0211                     TMR1CLK         equ	529	;# 
  3546     0212                     TMR3            equ	530	;# 
  3547     0212                     TMR3L           equ	530	;# 
  3548     0213                     TMR3H           equ	531	;# 
  3549     0214                     T3CON           equ	532	;# 
  3550     0215                     T3GCON          equ	533	;# 
  3551     0215                     PR3             equ	533	;# 
  3552     0216                     T3GATE          equ	534	;# 
  3553     0216                     TMR3GATE        equ	534	;# 
  3554     0217                     T3CLK           equ	535	;# 
  3555     0217                     TMR3CLK         equ	535	;# 
  3556     0218                     TMR5            equ	536	;# 
  3557     0218                     TMR5L           equ	536	;# 
  3558     0219                     TMR5H           equ	537	;# 
  3559     021A                     T5CON           equ	538	;# 
  3560     021B                     T5GCON          equ	539	;# 
  3561     021B                     PR5             equ	539	;# 
  3562     021C                     T5GATE          equ	540	;# 
  3563     021C                     TMR5GATE        equ	540	;# 
  3564     021D                     T5CLK           equ	541	;# 
  3565     021D                     TMR5CLK         equ	541	;# 
  3566     021E                     CCPTMRS0        equ	542	;# 
  3567     021F                     CCPTMRS1        equ	543	;# 
  3568     028C                     T2TMR           equ	652	;# 
  3569     028C                     TMR2            equ	652	;# 
  3570     028D                     T2PR            equ	653	;# 
  3571     028D                     PR2             equ	653	;# 
  3572     028E                     T2CON           equ	654	;# 
  3573     028F                     T2HLT           equ	655	;# 
  3574     0290                     T2CLKCON        equ	656	;# 
  3575     0290                     T2CLK           equ	656	;# 
  3576     0291                     T2RST           equ	657	;# 
  3577     0292                     T4TMR           equ	658	;# 
  3578     0292                     TMR4            equ	658	;# 
  3579     0293                     T4PR            equ	659	;# 
  3580     0293                     PR4             equ	659	;# 
  3581     0294                     T4CON           equ	660	;# 
  3582     0295                     T4HLT           equ	661	;# 
  3583     0296                     T4CLKCON        equ	662	;# 
  3584     0296                     T4CLK           equ	662	;# 
  3585     0297                     T4RST           equ	663	;# 
  3586     0298                     T6TMR           equ	664	;# 
  3587     0298                     TMR6            equ	664	;# 
  3588     0299                     T6PR            equ	665	;# 
  3589     0299                     PR6             equ	665	;# 
  3590     029A                     T6CON           equ	666	;# 
  3591     029B                     T6HLT           equ	667	;# 
  3592     029C                     T6CLKCON        equ	668	;# 
  3593     029C                     T6CLK           equ	668	;# 
  3594     029D                     T6RST           equ	669	;# 
  3595     030C                     CCPR1           equ	780	;# 
  3596     030C                     CCPR1L          equ	780	;# 
  3597     030D                     CCPR1H          equ	781	;# 
  3598     030E                     CCP1CON         equ	782	;# 
  3599     030F                     CCP1CAP         equ	783	;# 
  3600     0310                     CCPR2           equ	784	;# 
  3601     0310                     CCPR2L          equ	784	;# 
  3602     0311                     CCPR2H          equ	785	;# 
  3603     0312                     CCP2CON         equ	786	;# 
  3604     0313                     CCP2CAP         equ	787	;# 
  3605     0314                     CCPR3           equ	788	;# 
  3606     0314                     CCPR3L          equ	788	;# 
  3607     0315                     CCPR3H          equ	789	;# 
  3608     0316                     CCP3CON         equ	790	;# 
  3609     0317                     CCP3CAP         equ	791	;# 
  3610     0318                     CCPR4           equ	792	;# 
  3611     0318                     CCPR4L          equ	792	;# 
  3612     0319                     CCPR4H          equ	793	;# 
  3613     031A                     CCP4CON         equ	794	;# 
  3614     031B                     CCP4CAP         equ	795	;# 
  3615     031C                     CCPR5           equ	796	;# 
  3616     031C                     CCPR5L          equ	796	;# 
  3617     031D                     CCPR5H          equ	797	;# 
  3618     031E                     CCP5CON         equ	798	;# 
  3619     031F                     CCP5CAP         equ	799	;# 
  3620     038C                     PWM6DC          equ	908	;# 
  3621     038C                     PWM6DCL         equ	908	;# 
  3622     038D                     PWM6DCH         equ	909	;# 
  3623     038E                     PWM6CON         equ	910	;# 
  3624     0390                     PWM7DC          equ	912	;# 
  3625     0390                     PWM7DCL         equ	912	;# 
  3626     0391                     PWM7DCH         equ	913	;# 
  3627     0392                     PWM7CON         equ	914	;# 
  3628     040C                     SCANLADRL       equ	1036	;# 
  3629     040D                     SCANLADRH       equ	1037	;# 
  3630     040E                     SCANHADRL       equ	1038	;# 
  3631     040F                     SCANHADRH       equ	1039	;# 
  3632     0410                     SCANCON0        equ	1040	;# 
  3633     0411                     SCANTRIG        equ	1041	;# 
  3634     0416                     CRCDATA         equ	1046	;# 
  3635     0416                     CRCDATL         equ	1046	;# 
  3636     0417                     CRCDATH         equ	1047	;# 
  3637     0418                     CRCACC          equ	1048	;# 
  3638     0418                     CRCACCL         equ	1048	;# 
  3639     0419                     CRCACCH         equ	1049	;# 
  3640     041A                     CRCSHFT         equ	1050	;# 
  3641     041A                     CRCSHIFTL       equ	1050	;# 
  3642     041B                     CRCSHIFTH       equ	1051	;# 
  3643     041C                     CRCXOR          equ	1052	;# 
  3644     041C                     CRCXORL         equ	1052	;# 
  3645     041D                     CRCXORH         equ	1053	;# 
  3646     041E                     CRCCON0         equ	1054	;# 
  3647     041F                     CRCCON1         equ	1055	;# 
  3648     048C                     SMT1TMR         equ	1164	;# 
  3649     048C                     SMT1TMRL        equ	1164	;# 
  3650     048D                     SMT1TMRH        equ	1165	;# 
  3651     048E                     SMT1TMRU        equ	1166	;# 
  3652     048F                     SMT1CPR         equ	1167	;# 
  3653     048F                     SMT1CPRL        equ	1167	;# 
  3654     0490                     SMT1CPRH        equ	1168	;# 
  3655     0491                     SMT1CPRU        equ	1169	;# 
  3656     0492                     SMT1CPW         equ	1170	;# 
  3657     0492                     SMT1CPWL        equ	1170	;# 
  3658     0493                     SMT1CPWH        equ	1171	;# 
  3659     0494                     SMT1CPWU        equ	1172	;# 
  3660     0495                     SMT1PR          equ	1173	;# 
  3661     0495                     SMT1PRL         equ	1173	;# 
  3662     0496                     SMT1PRH         equ	1174	;# 
  3663     0497                     SMT1PRU         equ	1175	;# 
  3664     0498                     SMT1CON0        equ	1176	;# 
  3665     0499                     SMT1CON1        equ	1177	;# 
  3666     049A                     SMT1STAT        equ	1178	;# 
  3667     049B                     SMT1CLK         equ	1179	;# 
  3668     049C                     SMT1SIG         equ	1180	;# 
  3669     049D                     SMT1WIN         equ	1181	;# 
  3670     050C                     SMT2TMR         equ	1292	;# 
  3671     050C                     SMT2TMRL        equ	1292	;# 
  3672     050D                     SMT2TMRH        equ	1293	;# 
  3673     050E                     SMT2TMRU        equ	1294	;# 
  3674     050F                     SMT2CPR         equ	1295	;# 
  3675     050F                     SMT2CPRL        equ	1295	;# 
  3676     0510                     SMT2CPRH        equ	1296	;# 
  3677     0511                     SMT2CPRU        equ	1297	;# 
  3678     0512                     SMT2CPW         equ	1298	;# 
  3679     0512                     SMT2CPWL        equ	1298	;# 
  3680     0513                     SMT2CPWH        equ	1299	;# 
  3681     0514                     SMT2CPWU        equ	1300	;# 
  3682     0515                     SMT2PR          equ	1301	;# 
  3683     0515                     SMT2PRL         equ	1301	;# 
  3684     0516                     SMT2PRH         equ	1302	;# 
  3685     0517                     SMT2PRU         equ	1303	;# 
  3686     0518                     SMT2CON0        equ	1304	;# 
  3687     0519                     SMT2CON1        equ	1305	;# 
  3688     051A                     SMT2STAT        equ	1306	;# 
  3689     051B                     SMT2CLK         equ	1307	;# 
  3690     051C                     SMT2SIG         equ	1308	;# 
  3691     051D                     SMT2WIN         equ	1309	;# 
  3692     058C                     NCO1ACC         equ	1420	;# 
  3693     058C                     NCO1ACCL        equ	1420	;# 
  3694     058D                     NCO1ACCH        equ	1421	;# 
  3695     058E                     NCO1ACCU        equ	1422	;# 
  3696     058F                     NCO1INC         equ	1423	;# 
  3697     058F                     NCO1INCL        equ	1423	;# 
  3698     0590                     NCO1INCH        equ	1424	;# 
  3699     0591                     NCO1INCU        equ	1425	;# 
  3700     0592                     NCO1CON         equ	1426	;# 
  3701     0593                     NCO1CLK         equ	1427	;# 
  3702     060C                     CWG1CLKCON      equ	1548	;# 
  3703     060D                     CWG1ISM         equ	1549	;# 
  3704     060E                     CWG1DBR         equ	1550	;# 
  3705     060F                     CWG1DBF         equ	1551	;# 
  3706     0610                     CWG1CON0        equ	1552	;# 
  3707     0611                     CWG1CON1        equ	1553	;# 
  3708     0612                     CWG1AS0         equ	1554	;# 
  3709     0613                     CWG1AS1         equ	1555	;# 
  3710     0614                     CWG1STR         equ	1556	;# 
  3711     0616                     CWG2CLKCON      equ	1558	;# 
  3712     0617                     CWG2ISM         equ	1559	;# 
  3713     0618                     CWG2DBR         equ	1560	;# 
  3714     0619                     CWG2DBF         equ	1561	;# 
  3715     061A                     CWG2CON0        equ	1562	;# 
  3716     061B                     CWG2CON1        equ	1563	;# 
  3717     061C                     CWG2AS0         equ	1564	;# 
  3718     061D                     CWG2AS1         equ	1565	;# 
  3719     061E                     CWG2STR         equ	1566	;# 
  3720     068C                     CWG3CLKCON      equ	1676	;# 
  3721     068D                     CWG3ISM         equ	1677	;# 
  3722     068E                     CWG3DBR         equ	1678	;# 
  3723     068F                     CWG3DBF         equ	1679	;# 
  3724     0690                     CWG3CON0        equ	1680	;# 
  3725     0691                     CWG3CON1        equ	1681	;# 
  3726     0692                     CWG3AS0         equ	1682	;# 
  3727     0693                     CWG3AS1         equ	1683	;# 
  3728     0694                     CWG3STR         equ	1684	;# 
  3729     070C                     PIR0            equ	1804	;# 
  3730     070D                     PIR1            equ	1805	;# 
  3731     070E                     PIR2            equ	1806	;# 
  3732     070F                     PIR3            equ	1807	;# 
  3733     0710                     PIR4            equ	1808	;# 
  3734     0711                     PIR5            equ	1809	;# 
  3735     0712                     PIR6            equ	1810	;# 
  3736     0713                     PIR7            equ	1811	;# 
  3737     0714                     PIR8            equ	1812	;# 
  3738     0716                     PIE0            equ	1814	;# 
  3739     0717                     PIE1            equ	1815	;# 
  3740     0718                     PIE2            equ	1816	;# 
  3741     0719                     PIE3            equ	1817	;# 
  3742     071A                     PIE4            equ	1818	;# 
  3743     071B                     PIE5            equ	1819	;# 
  3744     071C                     PIE6            equ	1820	;# 
  3745     071D                     PIE7            equ	1821	;# 
  3746     071E                     PIE8            equ	1822	;# 
  3747     0796                     PMD0            equ	1942	;# 
  3748     0797                     PMD1            equ	1943	;# 
  3749     0798                     PMD2            equ	1944	;# 
  3750     0799                     PMD3            equ	1945	;# 
  3751     079A                     PMD4            equ	1946	;# 
  3752     079B                     PMD5            equ	1947	;# 
  3753     080C                     WDTCON0         equ	2060	;# 
  3754     080D                     WDTCON1         equ	2061	;# 
  3755     080E                     WDTPSL          equ	2062	;# 
  3756     080F                     WDTPSH          equ	2063	;# 
  3757     0810                     WDTTMR          equ	2064	;# 
  3758     0811                     BORCON          equ	2065	;# 
  3759     0812                     VREGCON         equ	2066	;# 
  3760     0813                     PCON0           equ	2067	;# 
  3761     0814                     CCDCON          equ	2068	;# 
  3762     081A                     NVMADRL         equ	2074	;# 
  3763     081B                     NVMADRH         equ	2075	;# 
  3764     081C                     NVMDATL         equ	2076	;# 
  3765     081D                     NVMDATH         equ	2077	;# 
  3766     081E                     NVMCON1         equ	2078	;# 
  3767     081F                     NVMCON2         equ	2079	;# 
  3768     088C                     CPUDOZE         equ	2188	;# 
  3769     088D                     OSCCON1         equ	2189	;# 
  3770     088E                     OSCCON2         equ	2190	;# 
  3771     088F                     OSCCON3         equ	2191	;# 
  3772     0890                     OSCSTAT         equ	2192	;# 
  3773     0891                     OSCEN           equ	2193	;# 
  3774     0892                     OSCTUNE         equ	2194	;# 
  3775     0893                     OSCFRQ          equ	2195	;# 
  3776     0895                     CLKRCON         equ	2197	;# 
  3777     0896                     CLKRCLK         equ	2198	;# 
  3778     0897                     MDCON0          equ	2199	;# 
  3779     0898                     MDCON1          equ	2200	;# 
  3780     0899                     MDSRC           equ	2201	;# 
  3781     089A                     MDCARL          equ	2202	;# 
  3782     089B                     MDCARH          equ	2203	;# 
  3783     090C                     FVRCON          equ	2316	;# 
  3784     090E                     DAC1CON0        equ	2318	;# 
  3785     090F                     DAC1CON1        equ	2319	;# 
  3786     091F                     ZCD1CON         equ	2335	;# 
  3787     091F                     ZCDCON          equ	2335	;# 
  3788     098F                     CMOUT           equ	2447	;# 
  3789     098F                     CMSTAT          equ	2447	;# 
  3790     0990                     CM1CON0         equ	2448	;# 
  3791     0991                     CM1CON1         equ	2449	;# 
  3792     0992                     CM1NSEL         equ	2450	;# 
  3793     0993                     CM1PSEL         equ	2451	;# 
  3794     0994                     CM2CON0         equ	2452	;# 
  3795     0995                     CM2CON1         equ	2453	;# 
  3796     0996                     CM2NSEL         equ	2454	;# 
  3797     0997                     CM2PSEL         equ	2455	;# 
  3798     0E0F                     CLCDATA         equ	3599	;# 
  3799     0E10                     CLC1CON         equ	3600	;# 
  3800     0E11                     CLC1POL         equ	3601	;# 
  3801     0E12                     CLC1SEL0        equ	3602	;# 
  3802     0E13                     CLC1SEL1        equ	3603	;# 
  3803     0E14                     CLC1SEL2        equ	3604	;# 
  3804     0E15                     CLC1SEL3        equ	3605	;# 
  3805     0E16                     CLC1GLS0        equ	3606	;# 
  3806     0E17                     CLC1GLS1        equ	3607	;# 
  3807     0E18                     CLC1GLS2        equ	3608	;# 
  3808     0E19                     CLC1GLS3        equ	3609	;# 
  3809     0E1A                     CLC2CON         equ	3610	;# 
  3810     0E1B                     CLC2POL         equ	3611	;# 
  3811     0E1C                     CLC2SEL0        equ	3612	;# 
  3812     0E1D                     CLC2SEL1        equ	3613	;# 
  3813     0E1E                     CLC2SEL2        equ	3614	;# 
  3814     0E1F                     CLC2SEL3        equ	3615	;# 
  3815     0E20                     CLC2GLS0        equ	3616	;# 
  3816     0E21                     CLC2GLS1        equ	3617	;# 
  3817     0E22                     CLC2GLS2        equ	3618	;# 
  3818     0E23                     CLC2GLS3        equ	3619	;# 
  3819     0E24                     CLC3CON         equ	3620	;# 
  3820     0E25                     CLC3POL         equ	3621	;# 
  3821     0E26                     CLC3SEL0        equ	3622	;# 
  3822     0E27                     CLC3SEL1        equ	3623	;# 
  3823     0E28                     CLC3SEL2        equ	3624	;# 
  3824     0E29                     CLC3SEL3        equ	3625	;# 
  3825     0E2A                     CLC3GLS0        equ	3626	;# 
  3826     0E2B                     CLC3GLS1        equ	3627	;# 
  3827     0E2C                     CLC3GLS2        equ	3628	;# 
  3828     0E2D                     CLC3GLS3        equ	3629	;# 
  3829     0E2E                     CLC4CON         equ	3630	;# 
  3830     0E2F                     CLC4POL         equ	3631	;# 
  3831     0E30                     CLC4SEL0        equ	3632	;# 
  3832     0E31                     CLC4SEL1        equ	3633	;# 
  3833     0E32                     CLC4SEL2        equ	3634	;# 
  3834     0E33                     CLC4SEL3        equ	3635	;# 
  3835     0E34                     CLC4GLS0        equ	3636	;# 
  3836     0E35                     CLC4GLS1        equ	3637	;# 
  3837     0E36                     CLC4GLS2        equ	3638	;# 
  3838     0E37                     CLC4GLS3        equ	3639	;# 
  3839     0E8F                     PPSLOCK         equ	3727	;# 
  3840     0E90                     INTPPS          equ	3728	;# 
  3841     0E91                     T0CKIPPS        equ	3729	;# 
  3842     0E92                     T1CKIPPS        equ	3730	;# 
  3843     0E93                     T1GPPS          equ	3731	;# 
  3844     0E94                     T3CKIPPS        equ	3732	;# 
  3845     0E95                     T3GPPS          equ	3733	;# 
  3846     0E96                     T5CKIPPS        equ	3734	;# 
  3847     0E97                     T5GPPS          equ	3735	;# 
  3848     0E9C                     T2AINPPS        equ	3740	;# 
  3849     0E9D                     T4AINPPS        equ	3741	;# 
  3850     0E9E                     T6AINPPS        equ	3742	;# 
  3851     0EA1                     CCP1PPS         equ	3745	;# 
  3852     0EA2                     CCP2PPS         equ	3746	;# 
  3853     0EA3                     CCP3PPS         equ	3747	;# 
  3854     0EA4                     CCP4PPS         equ	3748	;# 
  3855     0EA5                     CCP5PPS         equ	3749	;# 
  3856     0EA9                     SMT1WINPPS      equ	3753	;# 
  3857     0EAA                     SMT1SIGPPS      equ	3754	;# 
  3858     0EAB                     SMT2WINPPS      equ	3755	;# 
  3859     0EAC                     SMT2SIGPPS      equ	3756	;# 
  3860     0EB1                     CWG1PPS         equ	3761	;# 
  3861     0EB2                     CWG2PPS         equ	3762	;# 
  3862     0EB3                     CWG3PPS         equ	3763	;# 
  3863     0EB8                     MDCARLPPS       equ	3768	;# 
  3864     0EB9                     MDCARHPPS       equ	3769	;# 
  3865     0EBA                     MDSRCPPS        equ	3770	;# 
  3866     0EBB                     CLCIN0PPS       equ	3771	;# 
  3867     0EBC                     CLCIN1PPS       equ	3772	;# 
  3868     0EBD                     CLCIN2PPS       equ	3773	;# 
  3869     0EBE                     CLCIN3PPS       equ	3774	;# 
  3870     0EC3                     ADCACTPPS       equ	3779	;# 
  3871     0EC5                     SSP1CLKPPS      equ	3781	;# 
  3872     0EC6                     SSP1DATPPS      equ	3782	;# 
  3873     0EC7                     SSP1SSPPS       equ	3783	;# 
  3874     0EC8                     SSP2CLKPPS      equ	3784	;# 
  3875     0EC9                     SSP2DATPPS      equ	3785	;# 
  3876     0ECA                     SSP2SSPPS       equ	3786	;# 
  3877     0ECB                     RXPPS           equ	3787	;# 
  3878     0ECC                     TXPPS           equ	3788	;# 
  3879     0F10                     RA0PPS          equ	3856	;# 
  3880     0F11                     RA1PPS          equ	3857	;# 
  3881     0F12                     RA2PPS          equ	3858	;# 
  3882     0F13                     RA3PPS          equ	3859	;# 
  3883     0F14                     RA4PPS          equ	3860	;# 
  3884     0F15                     RA5PPS          equ	3861	;# 
  3885     0F16                     RA6PPS          equ	3862	;# 
  3886     0F17                     RA7PPS          equ	3863	;# 
  3887     0F18                     RB0PPS          equ	3864	;# 
  3888     0F19                     RB1PPS          equ	3865	;# 
  3889     0F1A                     RB2PPS          equ	3866	;# 
  3890     0F1B                     RB3PPS          equ	3867	;# 
  3891     0F1C                     RB4PPS          equ	3868	;# 
  3892     0F1D                     RB5PPS          equ	3869	;# 
  3893     0F1E                     RB6PPS          equ	3870	;# 
  3894     0F1F                     RB7PPS          equ	3871	;# 
  3895     0F20                     RC0PPS          equ	3872	;# 
  3896     0F21                     RC1PPS          equ	3873	;# 
  3897     0F22                     RC2PPS          equ	3874	;# 
  3898     0F23                     RC3PPS          equ	3875	;# 
  3899     0F24                     RC4PPS          equ	3876	;# 
  3900     0F25                     RC5PPS          equ	3877	;# 
  3901     0F26                     RC6PPS          equ	3878	;# 
  3902     0F27                     RC7PPS          equ	3879	;# 
  3903     0F28                     RD0PPS          equ	3880	;# 
  3904     0F29                     RD1PPS          equ	3881	;# 
  3905     0F2A                     RD2PPS          equ	3882	;# 
  3906     0F2B                     RD3PPS          equ	3883	;# 
  3907     0F2C                     RD4PPS          equ	3884	;# 
  3908     0F2D                     RD5PPS          equ	3885	;# 
  3909     0F2E                     RD6PPS          equ	3886	;# 
  3910     0F2F                     RD7PPS          equ	3887	;# 
  3911     0F30                     RE0PPS          equ	3888	;# 
  3912     0F31                     RE1PPS          equ	3889	;# 
  3913     0F32                     RE2PPS          equ	3890	;# 
  3914     0F38                     ANSELA          equ	3896	;# 
  3915     0F39                     WPUA            equ	3897	;# 
  3916     0F3A                     ODCONA          equ	3898	;# 
  3917     0F3B                     SLRCONA         equ	3899	;# 
  3918     0F3C                     INLVLA          equ	3900	;# 
  3919     0F3D                     IOCAP           equ	3901	;# 
  3920     0F3E                     IOCAN           equ	3902	;# 
  3921     0F3F                     IOCAF           equ	3903	;# 
  3922     0F40                     CCDNA           equ	3904	;# 
  3923     0F41                     CCDPA           equ	3905	;# 
  3924     0F43                     ANSELB          equ	3907	;# 
  3925     0F44                     WPUB            equ	3908	;# 
  3926     0F45                     ODCONB          equ	3909	;# 
  3927     0F46                     SLRCONB         equ	3910	;# 
  3928     0F47                     INLVLB          equ	3911	;# 
  3929     0F48                     IOCBP           equ	3912	;# 
  3930     0F49                     IOCBN           equ	3913	;# 
  3931     0F4A                     IOCBF           equ	3914	;# 
  3932     0F4B                     CCDNB           equ	3915	;# 
  3933     0F4C                     CCDPB           equ	3916	;# 
  3934     0F4E                     ANSELC          equ	3918	;# 
  3935     0F4F                     WPUC            equ	3919	;# 
  3936     0F50                     ODCONC          equ	3920	;# 
  3937     0F51                     SLRCONC         equ	3921	;# 
  3938     0F52                     INLVLC          equ	3922	;# 
  3939     0F53                     IOCCP           equ	3923	;# 
  3940     0F54                     IOCCN           equ	3924	;# 
  3941     0F55                     IOCCF           equ	3925	;# 
  3942     0F56                     CCDNC           equ	3926	;# 
  3943     0F57                     CCDPC           equ	3927	;# 
  3944     0F59                     ANSELD          equ	3929	;# 
  3945     0F5A                     WPUD            equ	3930	;# 
  3946     0F5B                     ODCOND          equ	3931	;# 
  3947     0F5C                     SLRCOND         equ	3932	;# 
  3948     0F5D                     INLVLD          equ	3933	;# 
  3949     0F61                     CCDND           equ	3937	;# 
  3950     0F62                     CCDPD           equ	3938	;# 
  3951     0F64                     ANSELE          equ	3940	;# 
  3952     0F65                     WPUE            equ	3941	;# 
  3953     0F66                     ODCONE          equ	3942	;# 
  3954     0F67                     SLRCONE         equ	3943	;# 
  3955     0F68                     INLVLE          equ	3944	;# 
  3956     0F69                     IOCEP           equ	3945	;# 
  3957     0F6A                     IOCEN           equ	3946	;# 
  3958     0F6B                     IOCEF           equ	3947	;# 
  3959     0F6C                     CCDNE           equ	3948	;# 
  3960     0F6D                     CCDPE           equ	3949	;# 
  3961     0FE4                     STATUS_SHAD     equ	4068	;# 
  3962     0FE5                     WREG_SHAD       equ	4069	;# 
  3963     0FE6                     BSR_SHAD        equ	4070	;# 
  3964     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3965     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3966     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3967     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3968     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3969     0FED                     STKPTR          equ	4077	;# 
  3970     0FEE                     TOSL            equ	4078	;# 
  3971     0FEF                     TOSH            equ	4079	;# 
  3972     0000                     INDF0           equ	0	;# 
  3973     0001                     INDF1           equ	1	;# 
  3974     0002                     PCL             equ	2	;# 
  3975     0003                     STATUS          equ	3	;# 
  3976     0004                     FSR0L           equ	4	;# 
  3977     0005                     FSR0H           equ	5	;# 
  3978     0006                     FSR1L           equ	6	;# 
  3979     0007                     FSR1H           equ	7	;# 
  3980     0008                     BSR             equ	8	;# 
  3981     0009                     WREG            equ	9	;# 
  3982     000A                     PCLATH          equ	10	;# 
  3983     000B                     INTCON          equ	11	;# 
  3984     000C                     PORTA           equ	12	;# 
  3985     000D                     PORTB           equ	13	;# 
  3986     000E                     PORTC           equ	14	;# 
  3987     000F                     PORTD           equ	15	;# 
  3988     0010                     PORTE           equ	16	;# 
  3989     0011                     TRISA           equ	17	;# 
  3990     0012                     TRISB           equ	18	;# 
  3991     0013                     TRISC           equ	19	;# 
  3992     0014                     TRISD           equ	20	;# 
  3993     0015                     TRISE           equ	21	;# 
  3994     0016                     LATA            equ	22	;# 
  3995     0017                     LATB            equ	23	;# 
  3996     0018                     LATC            equ	24	;# 
  3997     0019                     LATD            equ	25	;# 
  3998     001A                     LATE            equ	26	;# 
  3999     001C                     TMR0L           equ	28	;# 
  4000     001C                     TMR0            equ	28	;# 
  4001     001D                     TMR0H           equ	29	;# 
  4002     001D                     PR0             equ	29	;# 
  4003     001E                     T0CON0          equ	30	;# 
  4004     001F                     T0CON1          equ	31	;# 
  4005     008C                     ADRES           equ	140	;# 
  4006     008C                     ADRESL          equ	140	;# 
  4007     008D                     ADRESH          equ	141	;# 
  4008     008E                     ADPREV          equ	142	;# 
  4009     008E                     ADPREVL         equ	142	;# 
  4010     008F                     ADPREVH         equ	143	;# 
  4011     0090                     ADACC           equ	144	;# 
  4012     0090                     ADACCL          equ	144	;# 
  4013     0091                     ADACCH          equ	145	;# 
  4014     0093                     ADCON0          equ	147	;# 
  4015     0094                     ADCON1          equ	148	;# 
  4016     0095                     ADCON2          equ	149	;# 
  4017     0096                     ADCON3          equ	150	;# 
  4018     0097                     ADSTAT          equ	151	;# 
  4019     0098                     ADCLK           equ	152	;# 
  4020     0099                     ADACT           equ	153	;# 
  4021     009A                     ADREF           equ	154	;# 
  4022     009B                     ADCAP           equ	155	;# 
  4023     009C                     ADPRE           equ	156	;# 
  4024     009D                     ADACQ           equ	157	;# 
  4025     009E                     ADPCH           equ	158	;# 
  4026     010C                     ADCNT           equ	268	;# 
  4027     010D                     ADRPT           equ	269	;# 
  4028     010E                     ADLTH           equ	270	;# 
  4029     010E                     ADLTHL          equ	270	;# 
  4030     010F                     ADLTHH          equ	271	;# 
  4031     0110                     ADUTH           equ	272	;# 
  4032     0110                     ADUTHL          equ	272	;# 
  4033     0111                     ADUTHH          equ	273	;# 
  4034     0112                     ADSTPT          equ	274	;# 
  4035     0112                     ADSTPTL         equ	274	;# 
  4036     0113                     ADSTPTH         equ	275	;# 
  4037     0114                     ADFLTR          equ	276	;# 
  4038     0114                     ADFLTRL         equ	276	;# 
  4039     0115                     ADFLTRH         equ	277	;# 
  4040     0116                     ADERR           equ	278	;# 
  4041     0116                     ADERRL          equ	278	;# 
  4042     0117                     ADERRH          equ	279	;# 
  4043     0119                     RC1REG          equ	281	;# 
  4044     0119                     RCREG           equ	281	;# 
  4045     0119                     RCREG1          equ	281	;# 
  4046     011A                     TX1REG          equ	282	;# 
  4047     011A                     TXREG1          equ	282	;# 
  4048     011A                     TXREG           equ	282	;# 
  4049     011B                     SP1BRG          equ	283	;# 
  4050     011B                     SP1BRGL         equ	283	;# 
  4051     011B                     SPBRG           equ	283	;# 
  4052     011B                     SPBRG1          equ	283	;# 
  4053     011B                     SPBRGL          equ	283	;# 
  4054     011C                     SP1BRGH         equ	284	;# 
  4055     011C                     SPBRGH          equ	284	;# 
  4056     011C                     SPBRGH1         equ	284	;# 
  4057     011D                     RC1STA          equ	285	;# 
  4058     011D                     RCSTA1          equ	285	;# 
  4059     011D                     RCSTA           equ	285	;# 
  4060     011E                     TX1STA          equ	286	;# 
  4061     011E                     TXSTA1          equ	286	;# 
  4062     011E                     TXSTA           equ	286	;# 
  4063     011F                     BAUD1CON        equ	287	;# 
  4064     011F                     BAUDCON1        equ	287	;# 
  4065     011F                     BAUDCTL1        equ	287	;# 
  4066     011F                     BAUDCON         equ	287	;# 
  4067     011F                     BAUDCTL         equ	287	;# 
  4068     018C                     SSP1BUF         equ	396	;# 
  4069     018D                     SSP1ADD         equ	397	;# 
  4070     018E                     SSP1MSK         equ	398	;# 
  4071     018F                     SSP1STAT        equ	399	;# 
  4072     0190                     SSP1CON1        equ	400	;# 
  4073     0191                     SSP1CON2        equ	401	;# 
  4074     0192                     SSP1CON3        equ	402	;# 
  4075     0196                     SSP2BUF         equ	406	;# 
  4076     0197                     SSP2ADD         equ	407	;# 
  4077     0198                     SSP2MSK         equ	408	;# 
  4078     0199                     SSP2STAT        equ	409	;# 
  4079     019A                     SSP2CON1        equ	410	;# 
  4080     019B                     SSP2CON2        equ	411	;# 
  4081     019C                     SSP2CON3        equ	412	;# 
  4082     020C                     TMR1            equ	524	;# 
  4083     020C                     TMR1L           equ	524	;# 
  4084     020D                     TMR1H           equ	525	;# 
  4085     020E                     T1CON           equ	526	;# 
  4086     020F                     T1GCON          equ	527	;# 
  4087     020F                     PR1             equ	527	;# 
  4088     0210                     T1GATE          equ	528	;# 
  4089     0210                     TMR1GATE        equ	528	;# 
  4090     0211                     T1CLK           equ	529	;# 
  4091     0211                     TMR1CLK         equ	529	;# 
  4092     0212                     TMR3            equ	530	;# 
  4093     0212                     TMR3L           equ	530	;# 
  4094     0213                     TMR3H           equ	531	;# 
  4095     0214                     T3CON           equ	532	;# 
  4096     0215                     T3GCON          equ	533	;# 
  4097     0215                     PR3             equ	533	;# 
  4098     0216                     T3GATE          equ	534	;# 
  4099     0216                     TMR3GATE        equ	534	;# 
  4100     0217                     T3CLK           equ	535	;# 
  4101     0217                     TMR3CLK         equ	535	;# 
  4102     0218                     TMR5            equ	536	;# 
  4103     0218                     TMR5L           equ	536	;# 
  4104     0219                     TMR5H           equ	537	;# 
  4105     021A                     T5CON           equ	538	;# 
  4106     021B                     T5GCON          equ	539	;# 
  4107     021B                     PR5             equ	539	;# 
  4108     021C                     T5GATE          equ	540	;# 
  4109     021C                     TMR5GATE        equ	540	;# 
  4110     021D                     T5CLK           equ	541	;# 
  4111     021D                     TMR5CLK         equ	541	;# 
  4112     021E                     CCPTMRS0        equ	542	;# 
  4113     021F                     CCPTMRS1        equ	543	;# 
  4114     028C                     T2TMR           equ	652	;# 
  4115     028C                     TMR2            equ	652	;# 
  4116     028D                     T2PR            equ	653	;# 
  4117     028D                     PR2             equ	653	;# 
  4118     028E                     T2CON           equ	654	;# 
  4119     028F                     T2HLT           equ	655	;# 
  4120     0290                     T2CLKCON        equ	656	;# 
  4121     0290                     T2CLK           equ	656	;# 
  4122     0291                     T2RST           equ	657	;# 
  4123     0292                     T4TMR           equ	658	;# 
  4124     0292                     TMR4            equ	658	;# 
  4125     0293                     T4PR            equ	659	;# 
  4126     0293                     PR4             equ	659	;# 
  4127     0294                     T4CON           equ	660	;# 
  4128     0295                     T4HLT           equ	661	;# 
  4129     0296                     T4CLKCON        equ	662	;# 
  4130     0296                     T4CLK           equ	662	;# 
  4131     0297                     T4RST           equ	663	;# 
  4132     0298                     T6TMR           equ	664	;# 
  4133     0298                     TMR6            equ	664	;# 
  4134     0299                     T6PR            equ	665	;# 
  4135     0299                     PR6             equ	665	;# 
  4136     029A                     T6CON           equ	666	;# 
  4137     029B                     T6HLT           equ	667	;# 
  4138     029C                     T6CLKCON        equ	668	;# 
  4139     029C                     T6CLK           equ	668	;# 
  4140     029D                     T6RST           equ	669	;# 
  4141     030C                     CCPR1           equ	780	;# 
  4142     030C                     CCPR1L          equ	780	;# 
  4143     030D                     CCPR1H          equ	781	;# 
  4144     030E                     CCP1CON         equ	782	;# 
  4145     030F                     CCP1CAP         equ	783	;# 
  4146     0310                     CCPR2           equ	784	;# 
  4147     0310                     CCPR2L          equ	784	;# 
  4148     0311                     CCPR2H          equ	785	;# 
  4149     0312                     CCP2CON         equ	786	;# 
  4150     0313                     CCP2CAP         equ	787	;# 
  4151     0314                     CCPR3           equ	788	;# 
  4152     0314                     CCPR3L          equ	788	;# 
  4153     0315                     CCPR3H          equ	789	;# 
  4154     0316                     CCP3CON         equ	790	;# 
  4155     0317                     CCP3CAP         equ	791	;# 
  4156     0318                     CCPR4           equ	792	;# 
  4157     0318                     CCPR4L          equ	792	;# 
  4158     0319                     CCPR4H          equ	793	;# 
  4159     031A                     CCP4CON         equ	794	;# 
  4160     031B                     CCP4CAP         equ	795	;# 
  4161     031C                     CCPR5           equ	796	;# 
  4162     031C                     CCPR5L          equ	796	;# 
  4163     031D                     CCPR5H          equ	797	;# 
  4164     031E                     CCP5CON         equ	798	;# 
  4165     031F                     CCP5CAP         equ	799	;# 
  4166     038C                     PWM6DC          equ	908	;# 
  4167     038C                     PWM6DCL         equ	908	;# 
  4168     038D                     PWM6DCH         equ	909	;# 
  4169     038E                     PWM6CON         equ	910	;# 
  4170     0390                     PWM7DC          equ	912	;# 
  4171     0390                     PWM7DCL         equ	912	;# 
  4172     0391                     PWM7DCH         equ	913	;# 
  4173     0392                     PWM7CON         equ	914	;# 
  4174     040C                     SCANLADRL       equ	1036	;# 
  4175     040D                     SCANLADRH       equ	1037	;# 
  4176     040E                     SCANHADRL       equ	1038	;# 
  4177     040F                     SCANHADRH       equ	1039	;# 
  4178     0410                     SCANCON0        equ	1040	;# 
  4179     0411                     SCANTRIG        equ	1041	;# 
  4180     0416                     CRCDATA         equ	1046	;# 
  4181     0416                     CRCDATL         equ	1046	;# 
  4182     0417                     CRCDATH         equ	1047	;# 
  4183     0418                     CRCACC          equ	1048	;# 
  4184     0418                     CRCACCL         equ	1048	;# 
  4185     0419                     CRCACCH         equ	1049	;# 
  4186     041A                     CRCSHFT         equ	1050	;# 
  4187     041A                     CRCSHIFTL       equ	1050	;# 
  4188     041B                     CRCSHIFTH       equ	1051	;# 
  4189     041C                     CRCXOR          equ	1052	;# 
  4190     041C                     CRCXORL         equ	1052	;# 
  4191     041D                     CRCXORH         equ	1053	;# 
  4192     041E                     CRCCON0         equ	1054	;# 
  4193     041F                     CRCCON1         equ	1055	;# 
  4194     048C                     SMT1TMR         equ	1164	;# 
  4195     048C                     SMT1TMRL        equ	1164	;# 
  4196     048D                     SMT1TMRH        equ	1165	;# 
  4197     048E                     SMT1TMRU        equ	1166	;# 
  4198     048F                     SMT1CPR         equ	1167	;# 
  4199     048F                     SMT1CPRL        equ	1167	;# 
  4200     0490                     SMT1CPRH        equ	1168	;# 
  4201     0491                     SMT1CPRU        equ	1169	;# 
  4202     0492                     SMT1CPW         equ	1170	;# 
  4203     0492                     SMT1CPWL        equ	1170	;# 
  4204     0493                     SMT1CPWH        equ	1171	;# 
  4205     0494                     SMT1CPWU        equ	1172	;# 
  4206     0495                     SMT1PR          equ	1173	;# 
  4207     0495                     SMT1PRL         equ	1173	;# 
  4208     0496                     SMT1PRH         equ	1174	;# 
  4209     0497                     SMT1PRU         equ	1175	;# 
  4210     0498                     SMT1CON0        equ	1176	;# 
  4211     0499                     SMT1CON1        equ	1177	;# 
  4212     049A                     SMT1STAT        equ	1178	;# 
  4213     049B                     SMT1CLK         equ	1179	;# 
  4214     049C                     SMT1SIG         equ	1180	;# 
  4215     049D                     SMT1WIN         equ	1181	;# 
  4216     050C                     SMT2TMR         equ	1292	;# 
  4217     050C                     SMT2TMRL        equ	1292	;# 
  4218     050D                     SMT2TMRH        equ	1293	;# 
  4219     050E                     SMT2TMRU        equ	1294	;# 
  4220     050F                     SMT2CPR         equ	1295	;# 
  4221     050F                     SMT2CPRL        equ	1295	;# 
  4222     0510                     SMT2CPRH        equ	1296	;# 
  4223     0511                     SMT2CPRU        equ	1297	;# 
  4224     0512                     SMT2CPW         equ	1298	;# 
  4225     0512                     SMT2CPWL        equ	1298	;# 
  4226     0513                     SMT2CPWH        equ	1299	;# 
  4227     0514                     SMT2CPWU        equ	1300	;# 
  4228     0515                     SMT2PR          equ	1301	;# 
  4229     0515                     SMT2PRL         equ	1301	;# 
  4230     0516                     SMT2PRH         equ	1302	;# 
  4231     0517                     SMT2PRU         equ	1303	;# 
  4232     0518                     SMT2CON0        equ	1304	;# 
  4233     0519                     SMT2CON1        equ	1305	;# 
  4234     051A                     SMT2STAT        equ	1306	;# 
  4235     051B                     SMT2CLK         equ	1307	;# 
  4236     051C                     SMT2SIG         equ	1308	;# 
  4237     051D                     SMT2WIN         equ	1309	;# 
  4238     058C                     NCO1ACC         equ	1420	;# 
  4239     058C                     NCO1ACCL        equ	1420	;# 
  4240     058D                     NCO1ACCH        equ	1421	;# 
  4241     058E                     NCO1ACCU        equ	1422	;# 
  4242     058F                     NCO1INC         equ	1423	;# 
  4243     058F                     NCO1INCL        equ	1423	;# 
  4244     0590                     NCO1INCH        equ	1424	;# 
  4245     0591                     NCO1INCU        equ	1425	;# 
  4246     0592                     NCO1CON         equ	1426	;# 
  4247     0593                     NCO1CLK         equ	1427	;# 
  4248     060C                     CWG1CLKCON      equ	1548	;# 
  4249     060D                     CWG1ISM         equ	1549	;# 
  4250     060E                     CWG1DBR         equ	1550	;# 
  4251     060F                     CWG1DBF         equ	1551	;# 
  4252     0610                     CWG1CON0        equ	1552	;# 
  4253     0611                     CWG1CON1        equ	1553	;# 
  4254     0612                     CWG1AS0         equ	1554	;# 
  4255     0613                     CWG1AS1         equ	1555	;# 
  4256     0614                     CWG1STR         equ	1556	;# 
  4257     0616                     CWG2CLKCON      equ	1558	;# 
  4258     0617                     CWG2ISM         equ	1559	;# 
  4259     0618                     CWG2DBR         equ	1560	;# 
  4260     0619                     CWG2DBF         equ	1561	;# 
  4261     061A                     CWG2CON0        equ	1562	;# 
  4262     061B                     CWG2CON1        equ	1563	;# 
  4263     061C                     CWG2AS0         equ	1564	;# 
  4264     061D                     CWG2AS1         equ	1565	;# 
  4265     061E                     CWG2STR         equ	1566	;# 
  4266     068C                     CWG3CLKCON      equ	1676	;# 
  4267     068D                     CWG3ISM         equ	1677	;# 
  4268     068E                     CWG3DBR         equ	1678	;# 
  4269     068F                     CWG3DBF         equ	1679	;# 
  4270     0690                     CWG3CON0        equ	1680	;# 
  4271     0691                     CWG3CON1        equ	1681	;# 
  4272     0692                     CWG3AS0         equ	1682	;# 
  4273     0693                     CWG3AS1         equ	1683	;# 
  4274     0694                     CWG3STR         equ	1684	;# 
  4275     070C                     PIR0            equ	1804	;# 
  4276     070D                     PIR1            equ	1805	;# 
  4277     070E                     PIR2            equ	1806	;# 
  4278     070F                     PIR3            equ	1807	;# 
  4279     0710                     PIR4            equ	1808	;# 
  4280     0711                     PIR5            equ	1809	;# 
  4281     0712                     PIR6            equ	1810	;# 
  4282     0713                     PIR7            equ	1811	;# 
  4283     0714                     PIR8            equ	1812	;# 
  4284     0716                     PIE0            equ	1814	;# 
  4285     0717                     PIE1            equ	1815	;# 
  4286     0718                     PIE2            equ	1816	;# 
  4287     0719                     PIE3            equ	1817	;# 
  4288     071A                     PIE4            equ	1818	;# 
  4289     071B                     PIE5            equ	1819	;# 
  4290     071C                     PIE6            equ	1820	;# 
  4291     071D                     PIE7            equ	1821	;# 
  4292     071E                     PIE8            equ	1822	;# 
  4293     0796                     PMD0            equ	1942	;# 
  4294     0797                     PMD1            equ	1943	;# 
  4295     0798                     PMD2            equ	1944	;# 
  4296     0799                     PMD3            equ	1945	;# 
  4297     079A                     PMD4            equ	1946	;# 
  4298     079B                     PMD5            equ	1947	;# 
  4299     080C                     WDTCON0         equ	2060	;# 
  4300     080D                     WDTCON1         equ	2061	;# 
  4301     080E                     WDTPSL          equ	2062	;# 
  4302     080F                     WDTPSH          equ	2063	;# 
  4303     0810                     WDTTMR          equ	2064	;# 
  4304     0811                     BORCON          equ	2065	;# 
  4305     0812                     VREGCON         equ	2066	;# 
  4306     0813                     PCON0           equ	2067	;# 
  4307     0814                     CCDCON          equ	2068	;# 
  4308     081A                     NVMADRL         equ	2074	;# 
  4309     081B                     NVMADRH         equ	2075	;# 
  4310     081C                     NVMDATL         equ	2076	;# 
  4311     081D                     NVMDATH         equ	2077	;# 
  4312     081E                     NVMCON1         equ	2078	;# 
  4313     081F                     NVMCON2         equ	2079	;# 
  4314     088C                     CPUDOZE         equ	2188	;# 
  4315     088D                     OSCCON1         equ	2189	;# 
  4316     088E                     OSCCON2         equ	2190	;# 
  4317     088F                     OSCCON3         equ	2191	;# 
  4318     0890                     OSCSTAT         equ	2192	;# 
  4319     0891                     OSCEN           equ	2193	;# 
  4320     0892                     OSCTUNE         equ	2194	;# 
  4321     0893                     OSCFRQ          equ	2195	;# 
  4322     0895                     CLKRCON         equ	2197	;# 
  4323     0896                     CLKRCLK         equ	2198	;# 
  4324     0897                     MDCON0          equ	2199	;# 
  4325     0898                     MDCON1          equ	2200	;# 
  4326     0899                     MDSRC           equ	2201	;# 
  4327     089A                     MDCARL          equ	2202	;# 
  4328     089B                     MDCARH          equ	2203	;# 
  4329     090C                     FVRCON          equ	2316	;# 
  4330     090E                     DAC1CON0        equ	2318	;# 
  4331     090F                     DAC1CON1        equ	2319	;# 
  4332     091F                     ZCD1CON         equ	2335	;# 
  4333     091F                     ZCDCON          equ	2335	;# 
  4334     098F                     CMOUT           equ	2447	;# 
  4335     098F                     CMSTAT          equ	2447	;# 
  4336     0990                     CM1CON0         equ	2448	;# 
  4337     0991                     CM1CON1         equ	2449	;# 
  4338     0992                     CM1NSEL         equ	2450	;# 
  4339     0993                     CM1PSEL         equ	2451	;# 
  4340     0994                     CM2CON0         equ	2452	;# 
  4341     0995                     CM2CON1         equ	2453	;# 
  4342     0996                     CM2NSEL         equ	2454	;# 
  4343     0997                     CM2PSEL         equ	2455	;# 
  4344     0E0F                     CLCDATA         equ	3599	;# 
  4345     0E10                     CLC1CON         equ	3600	;# 
  4346     0E11                     CLC1POL         equ	3601	;# 
  4347     0E12                     CLC1SEL0        equ	3602	;# 
  4348     0E13                     CLC1SEL1        equ	3603	;# 
  4349     0E14                     CLC1SEL2        equ	3604	;# 
  4350     0E15                     CLC1SEL3        equ	3605	;# 
  4351     0E16                     CLC1GLS0        equ	3606	;# 
  4352     0E17                     CLC1GLS1        equ	3607	;# 
  4353     0E18                     CLC1GLS2        equ	3608	;# 
  4354     0E19                     CLC1GLS3        equ	3609	;# 
  4355     0E1A                     CLC2CON         equ	3610	;# 
  4356     0E1B                     CLC2POL         equ	3611	;# 
  4357     0E1C                     CLC2SEL0        equ	3612	;# 
  4358     0E1D                     CLC2SEL1        equ	3613	;# 
  4359     0E1E                     CLC2SEL2        equ	3614	;# 
  4360     0E1F                     CLC2SEL3        equ	3615	;# 
  4361     0E20                     CLC2GLS0        equ	3616	;# 
  4362     0E21                     CLC2GLS1        equ	3617	;# 
  4363     0E22                     CLC2GLS2        equ	3618	;# 
  4364     0E23                     CLC2GLS3        equ	3619	;# 
  4365     0E24                     CLC3CON         equ	3620	;# 
  4366     0E25                     CLC3POL         equ	3621	;# 
  4367     0E26                     CLC3SEL0        equ	3622	;# 
  4368     0E27                     CLC3SEL1        equ	3623	;# 
  4369     0E28                     CLC3SEL2        equ	3624	;# 
  4370     0E29                     CLC3SEL3        equ	3625	;# 
  4371     0E2A                     CLC3GLS0        equ	3626	;# 
  4372     0E2B                     CLC3GLS1        equ	3627	;# 
  4373     0E2C                     CLC3GLS2        equ	3628	;# 
  4374     0E2D                     CLC3GLS3        equ	3629	;# 
  4375     0E2E                     CLC4CON         equ	3630	;# 
  4376     0E2F                     CLC4POL         equ	3631	;# 
  4377     0E30                     CLC4SEL0        equ	3632	;# 
  4378     0E31                     CLC4SEL1        equ	3633	;# 
  4379     0E32                     CLC4SEL2        equ	3634	;# 
  4380     0E33                     CLC4SEL3        equ	3635	;# 
  4381     0E34                     CLC4GLS0        equ	3636	;# 
  4382     0E35                     CLC4GLS1        equ	3637	;# 
  4383     0E36                     CLC4GLS2        equ	3638	;# 
  4384     0E37                     CLC4GLS3        equ	3639	;# 
  4385     0E8F                     PPSLOCK         equ	3727	;# 
  4386     0E90                     INTPPS          equ	3728	;# 
  4387     0E91                     T0CKIPPS        equ	3729	;# 
  4388     0E92                     T1CKIPPS        equ	3730	;# 
  4389     0E93                     T1GPPS          equ	3731	;# 
  4390     0E94                     T3CKIPPS        equ	3732	;# 
  4391     0E95                     T3GPPS          equ	3733	;# 
  4392     0E96                     T5CKIPPS        equ	3734	;# 
  4393     0E97                     T5GPPS          equ	3735	;# 
  4394     0E9C                     T2AINPPS        equ	3740	;# 
  4395     0E9D                     T4AINPPS        equ	3741	;# 
  4396     0E9E                     T6AINPPS        equ	3742	;# 
  4397     0EA1                     CCP1PPS         equ	3745	;# 
  4398     0EA2                     CCP2PPS         equ	3746	;# 
  4399     0EA3                     CCP3PPS         equ	3747	;# 
  4400     0EA4                     CCP4PPS         equ	3748	;# 
  4401     0EA5                     CCP5PPS         equ	3749	;# 
  4402     0EA9                     SMT1WINPPS      equ	3753	;# 
  4403     0EAA                     SMT1SIGPPS      equ	3754	;# 
  4404     0EAB                     SMT2WINPPS      equ	3755	;# 
  4405     0EAC                     SMT2SIGPPS      equ	3756	;# 
  4406     0EB1                     CWG1PPS         equ	3761	;# 
  4407     0EB2                     CWG2PPS         equ	3762	;# 
  4408     0EB3                     CWG3PPS         equ	3763	;# 
  4409     0EB8                     MDCARLPPS       equ	3768	;# 
  4410     0EB9                     MDCARHPPS       equ	3769	;# 
  4411     0EBA                     MDSRCPPS        equ	3770	;# 
  4412     0EBB                     CLCIN0PPS       equ	3771	;# 
  4413     0EBC                     CLCIN1PPS       equ	3772	;# 
  4414     0EBD                     CLCIN2PPS       equ	3773	;# 
  4415     0EBE                     CLCIN3PPS       equ	3774	;# 
  4416     0EC3                     ADCACTPPS       equ	3779	;# 
  4417     0EC5                     SSP1CLKPPS      equ	3781	;# 
  4418     0EC6                     SSP1DATPPS      equ	3782	;# 
  4419     0EC7                     SSP1SSPPS       equ	3783	;# 
  4420     0EC8                     SSP2CLKPPS      equ	3784	;# 
  4421     0EC9                     SSP2DATPPS      equ	3785	;# 
  4422     0ECA                     SSP2SSPPS       equ	3786	;# 
  4423     0ECB                     RXPPS           equ	3787	;# 
  4424     0ECC                     TXPPS           equ	3788	;# 
  4425     0F10                     RA0PPS          equ	3856	;# 
  4426     0F11                     RA1PPS          equ	3857	;# 
  4427     0F12                     RA2PPS          equ	3858	;# 
  4428     0F13                     RA3PPS          equ	3859	;# 
  4429     0F14                     RA4PPS          equ	3860	;# 
  4430     0F15                     RA5PPS          equ	3861	;# 
  4431     0F16                     RA6PPS          equ	3862	;# 
  4432     0F17                     RA7PPS          equ	3863	;# 
  4433     0F18                     RB0PPS          equ	3864	;# 
  4434     0F19                     RB1PPS          equ	3865	;# 
  4435     0F1A                     RB2PPS          equ	3866	;# 
  4436     0F1B                     RB3PPS          equ	3867	;# 
  4437     0F1C                     RB4PPS          equ	3868	;# 
  4438     0F1D                     RB5PPS          equ	3869	;# 
  4439     0F1E                     RB6PPS          equ	3870	;# 
  4440     0F1F                     RB7PPS          equ	3871	;# 
  4441     0F20                     RC0PPS          equ	3872	;# 
  4442     0F21                     RC1PPS          equ	3873	;# 
  4443     0F22                     RC2PPS          equ	3874	;# 
  4444     0F23                     RC3PPS          equ	3875	;# 
  4445     0F24                     RC4PPS          equ	3876	;# 
  4446     0F25                     RC5PPS          equ	3877	;# 
  4447     0F26                     RC6PPS          equ	3878	;# 
  4448     0F27                     RC7PPS          equ	3879	;# 
  4449     0F28                     RD0PPS          equ	3880	;# 
  4450     0F29                     RD1PPS          equ	3881	;# 
  4451     0F2A                     RD2PPS          equ	3882	;# 
  4452     0F2B                     RD3PPS          equ	3883	;# 
  4453     0F2C                     RD4PPS          equ	3884	;# 
  4454     0F2D                     RD5PPS          equ	3885	;# 
  4455     0F2E                     RD6PPS          equ	3886	;# 
  4456     0F2F                     RD7PPS          equ	3887	;# 
  4457     0F30                     RE0PPS          equ	3888	;# 
  4458     0F31                     RE1PPS          equ	3889	;# 
  4459     0F32                     RE2PPS          equ	3890	;# 
  4460     0F38                     ANSELA          equ	3896	;# 
  4461     0F39                     WPUA            equ	3897	;# 
  4462     0F3A                     ODCONA          equ	3898	;# 
  4463     0F3B                     SLRCONA         equ	3899	;# 
  4464     0F3C                     INLVLA          equ	3900	;# 
  4465     0F3D                     IOCAP           equ	3901	;# 
  4466     0F3E                     IOCAN           equ	3902	;# 
  4467     0F3F                     IOCAF           equ	3903	;# 
  4468     0F40                     CCDNA           equ	3904	;# 
  4469     0F41                     CCDPA           equ	3905	;# 
  4470     0F43                     ANSELB          equ	3907	;# 
  4471     0F44                     WPUB            equ	3908	;# 
  4472     0F45                     ODCONB          equ	3909	;# 
  4473     0F46                     SLRCONB         equ	3910	;# 
  4474     0F47                     INLVLB          equ	3911	;# 
  4475     0F48                     IOCBP           equ	3912	;# 
  4476     0F49                     IOCBN           equ	3913	;# 
  4477     0F4A                     IOCBF           equ	3914	;# 
  4478     0F4B                     CCDNB           equ	3915	;# 
  4479     0F4C                     CCDPB           equ	3916	;# 
  4480     0F4E                     ANSELC          equ	3918	;# 
  4481     0F4F                     WPUC            equ	3919	;# 
  4482     0F50                     ODCONC          equ	3920	;# 
  4483     0F51                     SLRCONC         equ	3921	;# 
  4484     0F52                     INLVLC          equ	3922	;# 
  4485     0F53                     IOCCP           equ	3923	;# 
  4486     0F54                     IOCCN           equ	3924	;# 
  4487     0F55                     IOCCF           equ	3925	;# 
  4488     0F56                     CCDNC           equ	3926	;# 
  4489     0F57                     CCDPC           equ	3927	;# 
  4490     0F59                     ANSELD          equ	3929	;# 
  4491     0F5A                     WPUD            equ	3930	;# 
  4492     0F5B                     ODCOND          equ	3931	;# 
  4493     0F5C                     SLRCOND         equ	3932	;# 
  4494     0F5D                     INLVLD          equ	3933	;# 
  4495     0F61                     CCDND           equ	3937	;# 
  4496     0F62                     CCDPD           equ	3938	;# 
  4497     0F64                     ANSELE          equ	3940	;# 
  4498     0F65                     WPUE            equ	3941	;# 
  4499     0F66                     ODCONE          equ	3942	;# 
  4500     0F67                     SLRCONE         equ	3943	;# 
  4501     0F68                     INLVLE          equ	3944	;# 
  4502     0F69                     IOCEP           equ	3945	;# 
  4503     0F6A                     IOCEN           equ	3946	;# 
  4504     0F6B                     IOCEF           equ	3947	;# 
  4505     0F6C                     CCDNE           equ	3948	;# 
  4506     0F6D                     CCDPE           equ	3949	;# 
  4507     0FE4                     STATUS_SHAD     equ	4068	;# 
  4508     0FE5                     WREG_SHAD       equ	4069	;# 
  4509     0FE6                     BSR_SHAD        equ	4070	;# 
  4510     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4511     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4512     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4513     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4514     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4515     0FED                     STKPTR          equ	4077	;# 
  4516     0FEE                     TOSL            equ	4078	;# 
  4517     0FEF                     TOSH            equ	4079	;# 
  4518     0000                     INDF0           equ	0	;# 
  4519     0001                     INDF1           equ	1	;# 
  4520     0002                     PCL             equ	2	;# 
  4521     0003                     STATUS          equ	3	;# 
  4522     0004                     FSR0L           equ	4	;# 
  4523     0005                     FSR0H           equ	5	;# 
  4524     0006                     FSR1L           equ	6	;# 
  4525     0007                     FSR1H           equ	7	;# 
  4526     0008                     BSR             equ	8	;# 
  4527     0009                     WREG            equ	9	;# 
  4528     000A                     PCLATH          equ	10	;# 
  4529     000B                     INTCON          equ	11	;# 
  4530     000C                     PORTA           equ	12	;# 
  4531     000D                     PORTB           equ	13	;# 
  4532     000E                     PORTC           equ	14	;# 
  4533     000F                     PORTD           equ	15	;# 
  4534     0010                     PORTE           equ	16	;# 
  4535     0011                     TRISA           equ	17	;# 
  4536     0012                     TRISB           equ	18	;# 
  4537     0013                     TRISC           equ	19	;# 
  4538     0014                     TRISD           equ	20	;# 
  4539     0015                     TRISE           equ	21	;# 
  4540     0016                     LATA            equ	22	;# 
  4541     0017                     LATB            equ	23	;# 
  4542     0018                     LATC            equ	24	;# 
  4543     0019                     LATD            equ	25	;# 
  4544     001A                     LATE            equ	26	;# 
  4545     001C                     TMR0L           equ	28	;# 
  4546     001C                     TMR0            equ	28	;# 
  4547     001D                     TMR0H           equ	29	;# 
  4548     001D                     PR0             equ	29	;# 
  4549     001E                     T0CON0          equ	30	;# 
  4550     001F                     T0CON1          equ	31	;# 
  4551     008C                     ADRES           equ	140	;# 
  4552     008C                     ADRESL          equ	140	;# 
  4553     008D                     ADRESH          equ	141	;# 
  4554     008E                     ADPREV          equ	142	;# 
  4555     008E                     ADPREVL         equ	142	;# 
  4556     008F                     ADPREVH         equ	143	;# 
  4557     0090                     ADACC           equ	144	;# 
  4558     0090                     ADACCL          equ	144	;# 
  4559     0091                     ADACCH          equ	145	;# 
  4560     0093                     ADCON0          equ	147	;# 
  4561     0094                     ADCON1          equ	148	;# 
  4562     0095                     ADCON2          equ	149	;# 
  4563     0096                     ADCON3          equ	150	;# 
  4564     0097                     ADSTAT          equ	151	;# 
  4565     0098                     ADCLK           equ	152	;# 
  4566     0099                     ADACT           equ	153	;# 
  4567     009A                     ADREF           equ	154	;# 
  4568     009B                     ADCAP           equ	155	;# 
  4569     009C                     ADPRE           equ	156	;# 
  4570     009D                     ADACQ           equ	157	;# 
  4571     009E                     ADPCH           equ	158	;# 
  4572     010C                     ADCNT           equ	268	;# 
  4573     010D                     ADRPT           equ	269	;# 
  4574     010E                     ADLTH           equ	270	;# 
  4575     010E                     ADLTHL          equ	270	;# 
  4576     010F                     ADLTHH          equ	271	;# 
  4577     0110                     ADUTH           equ	272	;# 
  4578     0110                     ADUTHL          equ	272	;# 
  4579     0111                     ADUTHH          equ	273	;# 
  4580     0112                     ADSTPT          equ	274	;# 
  4581     0112                     ADSTPTL         equ	274	;# 
  4582     0113                     ADSTPTH         equ	275	;# 
  4583     0114                     ADFLTR          equ	276	;# 
  4584     0114                     ADFLTRL         equ	276	;# 
  4585     0115                     ADFLTRH         equ	277	;# 
  4586     0116                     ADERR           equ	278	;# 
  4587     0116                     ADERRL          equ	278	;# 
  4588     0117                     ADERRH          equ	279	;# 
  4589     0119                     RC1REG          equ	281	;# 
  4590     0119                     RCREG           equ	281	;# 
  4591     0119                     RCREG1          equ	281	;# 
  4592     011A                     TX1REG          equ	282	;# 
  4593     011A                     TXREG1          equ	282	;# 
  4594     011A                     TXREG           equ	282	;# 
  4595     011B                     SP1BRG          equ	283	;# 
  4596     011B                     SP1BRGL         equ	283	;# 
  4597     011B                     SPBRG           equ	283	;# 
  4598     011B                     SPBRG1          equ	283	;# 
  4599     011B                     SPBRGL          equ	283	;# 
  4600     011C                     SP1BRGH         equ	284	;# 
  4601     011C                     SPBRGH          equ	284	;# 
  4602     011C                     SPBRGH1         equ	284	;# 
  4603     011D                     RC1STA          equ	285	;# 
  4604     011D                     RCSTA1          equ	285	;# 
  4605     011D                     RCSTA           equ	285	;# 
  4606     011E                     TX1STA          equ	286	;# 
  4607     011E                     TXSTA1          equ	286	;# 
  4608     011E                     TXSTA           equ	286	;# 
  4609     011F                     BAUD1CON        equ	287	;# 
  4610     011F                     BAUDCON1        equ	287	;# 
  4611     011F                     BAUDCTL1        equ	287	;# 
  4612     011F                     BAUDCON         equ	287	;# 
  4613     011F                     BAUDCTL         equ	287	;# 
  4614     018C                     SSP1BUF         equ	396	;# 
  4615     018D                     SSP1ADD         equ	397	;# 
  4616     018E                     SSP1MSK         equ	398	;# 
  4617     018F                     SSP1STAT        equ	399	;# 
  4618     0190                     SSP1CON1        equ	400	;# 
  4619     0191                     SSP1CON2        equ	401	;# 
  4620     0192                     SSP1CON3        equ	402	;# 
  4621     0196                     SSP2BUF         equ	406	;# 
  4622     0197                     SSP2ADD         equ	407	;# 
  4623     0198                     SSP2MSK         equ	408	;# 
  4624     0199                     SSP2STAT        equ	409	;# 
  4625     019A                     SSP2CON1        equ	410	;# 
  4626     019B                     SSP2CON2        equ	411	;# 
  4627     019C                     SSP2CON3        equ	412	;# 
  4628     020C                     TMR1            equ	524	;# 
  4629     020C                     TMR1L           equ	524	;# 
  4630     020D                     TMR1H           equ	525	;# 
  4631     020E                     T1CON           equ	526	;# 
  4632     020F                     T1GCON          equ	527	;# 
  4633     020F                     PR1             equ	527	;# 
  4634     0210                     T1GATE          equ	528	;# 
  4635     0210                     TMR1GATE        equ	528	;# 
  4636     0211                     T1CLK           equ	529	;# 
  4637     0211                     TMR1CLK         equ	529	;# 
  4638     0212                     TMR3            equ	530	;# 
  4639     0212                     TMR3L           equ	530	;# 
  4640     0213                     TMR3H           equ	531	;# 
  4641     0214                     T3CON           equ	532	;# 
  4642     0215                     T3GCON          equ	533	;# 
  4643     0215                     PR3             equ	533	;# 
  4644     0216                     T3GATE          equ	534	;# 
  4645     0216                     TMR3GATE        equ	534	;# 
  4646     0217                     T3CLK           equ	535	;# 
  4647     0217                     TMR3CLK         equ	535	;# 
  4648     0218                     TMR5            equ	536	;# 
  4649     0218                     TMR5L           equ	536	;# 
  4650     0219                     TMR5H           equ	537	;# 
  4651     021A                     T5CON           equ	538	;# 
  4652     021B                     T5GCON          equ	539	;# 
  4653     021B                     PR5             equ	539	;# 
  4654     021C                     T5GATE          equ	540	;# 
  4655     021C                     TMR5GATE        equ	540	;# 
  4656     021D                     T5CLK           equ	541	;# 
  4657     021D                     TMR5CLK         equ	541	;# 
  4658     021E                     CCPTMRS0        equ	542	;# 
  4659     021F                     CCPTMRS1        equ	543	;# 
  4660     028C                     T2TMR           equ	652	;# 
  4661     028C                     TMR2            equ	652	;# 
  4662     028D                     T2PR            equ	653	;# 
  4663     028D                     PR2             equ	653	;# 
  4664     028E                     T2CON           equ	654	;# 
  4665     028F                     T2HLT           equ	655	;# 
  4666     0290                     T2CLKCON        equ	656	;# 
  4667     0290                     T2CLK           equ	656	;# 
  4668     0291                     T2RST           equ	657	;# 
  4669     0292                     T4TMR           equ	658	;# 
  4670     0292                     TMR4            equ	658	;# 
  4671     0293                     T4PR            equ	659	;# 
  4672     0293                     PR4             equ	659	;# 
  4673     0294                     T4CON           equ	660	;# 
  4674     0295                     T4HLT           equ	661	;# 
  4675     0296                     T4CLKCON        equ	662	;# 
  4676     0296                     T4CLK           equ	662	;# 
  4677     0297                     T4RST           equ	663	;# 
  4678     0298                     T6TMR           equ	664	;# 
  4679     0298                     TMR6            equ	664	;# 
  4680     0299                     T6PR            equ	665	;# 
  4681     0299                     PR6             equ	665	;# 
  4682     029A                     T6CON           equ	666	;# 
  4683     029B                     T6HLT           equ	667	;# 
  4684     029C                     T6CLKCON        equ	668	;# 
  4685     029C                     T6CLK           equ	668	;# 
  4686     029D                     T6RST           equ	669	;# 
  4687     030C                     CCPR1           equ	780	;# 
  4688     030C                     CCPR1L          equ	780	;# 
  4689     030D                     CCPR1H          equ	781	;# 
  4690     030E                     CCP1CON         equ	782	;# 
  4691     030F                     CCP1CAP         equ	783	;# 
  4692     0310                     CCPR2           equ	784	;# 
  4693     0310                     CCPR2L          equ	784	;# 
  4694     0311                     CCPR2H          equ	785	;# 
  4695     0312                     CCP2CON         equ	786	;# 
  4696     0313                     CCP2CAP         equ	787	;# 
  4697     0314                     CCPR3           equ	788	;# 
  4698     0314                     CCPR3L          equ	788	;# 
  4699     0315                     CCPR3H          equ	789	;# 
  4700     0316                     CCP3CON         equ	790	;# 
  4701     0317                     CCP3CAP         equ	791	;# 
  4702     0318                     CCPR4           equ	792	;# 
  4703     0318                     CCPR4L          equ	792	;# 
  4704     0319                     CCPR4H          equ	793	;# 
  4705     031A                     CCP4CON         equ	794	;# 
  4706     031B                     CCP4CAP         equ	795	;# 
  4707     031C                     CCPR5           equ	796	;# 
  4708     031C                     CCPR5L          equ	796	;# 
  4709     031D                     CCPR5H          equ	797	;# 
  4710     031E                     CCP5CON         equ	798	;# 
  4711     031F                     CCP5CAP         equ	799	;# 
  4712     038C                     PWM6DC          equ	908	;# 
  4713     038C                     PWM6DCL         equ	908	;# 
  4714     038D                     PWM6DCH         equ	909	;# 
  4715     038E                     PWM6CON         equ	910	;# 
  4716     0390                     PWM7DC          equ	912	;# 
  4717     0390                     PWM7DCL         equ	912	;# 
  4718     0391                     PWM7DCH         equ	913	;# 
  4719     0392                     PWM7CON         equ	914	;# 
  4720     040C                     SCANLADRL       equ	1036	;# 
  4721     040D                     SCANLADRH       equ	1037	;# 
  4722     040E                     SCANHADRL       equ	1038	;# 
  4723     040F                     SCANHADRH       equ	1039	;# 
  4724     0410                     SCANCON0        equ	1040	;# 
  4725     0411                     SCANTRIG        equ	1041	;# 
  4726     0416                     CRCDATA         equ	1046	;# 
  4727     0416                     CRCDATL         equ	1046	;# 
  4728     0417                     CRCDATH         equ	1047	;# 
  4729     0418                     CRCACC          equ	1048	;# 
  4730     0418                     CRCACCL         equ	1048	;# 
  4731     0419                     CRCACCH         equ	1049	;# 
  4732     041A                     CRCSHFT         equ	1050	;# 
  4733     041A                     CRCSHIFTL       equ	1050	;# 
  4734     041B                     CRCSHIFTH       equ	1051	;# 
  4735     041C                     CRCXOR          equ	1052	;# 
  4736     041C                     CRCXORL         equ	1052	;# 
  4737     041D                     CRCXORH         equ	1053	;# 
  4738     041E                     CRCCON0         equ	1054	;# 
  4739     041F                     CRCCON1         equ	1055	;# 
  4740     048C                     SMT1TMR         equ	1164	;# 
  4741     048C                     SMT1TMRL        equ	1164	;# 
  4742     048D                     SMT1TMRH        equ	1165	;# 
  4743     048E                     SMT1TMRU        equ	1166	;# 
  4744     048F                     SMT1CPR         equ	1167	;# 
  4745     048F                     SMT1CPRL        equ	1167	;# 
  4746     0490                     SMT1CPRH        equ	1168	;# 
  4747     0491                     SMT1CPRU        equ	1169	;# 
  4748     0492                     SMT1CPW         equ	1170	;# 
  4749     0492                     SMT1CPWL        equ	1170	;# 
  4750     0493                     SMT1CPWH        equ	1171	;# 
  4751     0494                     SMT1CPWU        equ	1172	;# 
  4752     0495                     SMT1PR          equ	1173	;# 
  4753     0495                     SMT1PRL         equ	1173	;# 
  4754     0496                     SMT1PRH         equ	1174	;# 
  4755     0497                     SMT1PRU         equ	1175	;# 
  4756     0498                     SMT1CON0        equ	1176	;# 
  4757     0499                     SMT1CON1        equ	1177	;# 
  4758     049A                     SMT1STAT        equ	1178	;# 
  4759     049B                     SMT1CLK         equ	1179	;# 
  4760     049C                     SMT1SIG         equ	1180	;# 
  4761     049D                     SMT1WIN         equ	1181	;# 
  4762     050C                     SMT2TMR         equ	1292	;# 
  4763     050C                     SMT2TMRL        equ	1292	;# 
  4764     050D                     SMT2TMRH        equ	1293	;# 
  4765     050E                     SMT2TMRU        equ	1294	;# 
  4766     050F                     SMT2CPR         equ	1295	;# 
  4767     050F                     SMT2CPRL        equ	1295	;# 
  4768     0510                     SMT2CPRH        equ	1296	;# 
  4769     0511                     SMT2CPRU        equ	1297	;# 
  4770     0512                     SMT2CPW         equ	1298	;# 
  4771     0512                     SMT2CPWL        equ	1298	;# 
  4772     0513                     SMT2CPWH        equ	1299	;# 
  4773     0514                     SMT2CPWU        equ	1300	;# 
  4774     0515                     SMT2PR          equ	1301	;# 
  4775     0515                     SMT2PRL         equ	1301	;# 
  4776     0516                     SMT2PRH         equ	1302	;# 
  4777     0517                     SMT2PRU         equ	1303	;# 
  4778     0518                     SMT2CON0        equ	1304	;# 
  4779     0519                     SMT2CON1        equ	1305	;# 
  4780     051A                     SMT2STAT        equ	1306	;# 
  4781     051B                     SMT2CLK         equ	1307	;# 
  4782     051C                     SMT2SIG         equ	1308	;# 
  4783     051D                     SMT2WIN         equ	1309	;# 
  4784     058C                     NCO1ACC         equ	1420	;# 
  4785     058C                     NCO1ACCL        equ	1420	;# 
  4786     058D                     NCO1ACCH        equ	1421	;# 
  4787     058E                     NCO1ACCU        equ	1422	;# 
  4788     058F                     NCO1INC         equ	1423	;# 
  4789     058F                     NCO1INCL        equ	1423	;# 
  4790     0590                     NCO1INCH        equ	1424	;# 
  4791     0591                     NCO1INCU        equ	1425	;# 
  4792     0592                     NCO1CON         equ	1426	;# 
  4793     0593                     NCO1CLK         equ	1427	;# 
  4794     060C                     CWG1CLKCON      equ	1548	;# 
  4795     060D                     CWG1ISM         equ	1549	;# 
  4796     060E                     CWG1DBR         equ	1550	;# 
  4797     060F                     CWG1DBF         equ	1551	;# 
  4798     0610                     CWG1CON0        equ	1552	;# 
  4799     0611                     CWG1CON1        equ	1553	;# 
  4800     0612                     CWG1AS0         equ	1554	;# 
  4801     0613                     CWG1AS1         equ	1555	;# 
  4802     0614                     CWG1STR         equ	1556	;# 
  4803     0616                     CWG2CLKCON      equ	1558	;# 
  4804     0617                     CWG2ISM         equ	1559	;# 
  4805     0618                     CWG2DBR         equ	1560	;# 
  4806     0619                     CWG2DBF         equ	1561	;# 
  4807     061A                     CWG2CON0        equ	1562	;# 
  4808     061B                     CWG2CON1        equ	1563	;# 
  4809     061C                     CWG2AS0         equ	1564	;# 
  4810     061D                     CWG2AS1         equ	1565	;# 
  4811     061E                     CWG2STR         equ	1566	;# 
  4812     068C                     CWG3CLKCON      equ	1676	;# 
  4813     068D                     CWG3ISM         equ	1677	;# 
  4814     068E                     CWG3DBR         equ	1678	;# 
  4815     068F                     CWG3DBF         equ	1679	;# 
  4816     0690                     CWG3CON0        equ	1680	;# 
  4817     0691                     CWG3CON1        equ	1681	;# 
  4818     0692                     CWG3AS0         equ	1682	;# 
  4819     0693                     CWG3AS1         equ	1683	;# 
  4820     0694                     CWG3STR         equ	1684	;# 
  4821     070C                     PIR0            equ	1804	;# 
  4822     070D                     PIR1            equ	1805	;# 
  4823     070E                     PIR2            equ	1806	;# 
  4824     070F                     PIR3            equ	1807	;# 
  4825     0710                     PIR4            equ	1808	;# 
  4826     0711                     PIR5            equ	1809	;# 
  4827     0712                     PIR6            equ	1810	;# 
  4828     0713                     PIR7            equ	1811	;# 
  4829     0714                     PIR8            equ	1812	;# 
  4830     0716                     PIE0            equ	1814	;# 
  4831     0717                     PIE1            equ	1815	;# 
  4832     0718                     PIE2            equ	1816	;# 
  4833     0719                     PIE3            equ	1817	;# 
  4834     071A                     PIE4            equ	1818	;# 
  4835     071B                     PIE5            equ	1819	;# 
  4836     071C                     PIE6            equ	1820	;# 
  4837     071D                     PIE7            equ	1821	;# 
  4838     071E                     PIE8            equ	1822	;# 
  4839     0796                     PMD0            equ	1942	;# 
  4840     0797                     PMD1            equ	1943	;# 
  4841     0798                     PMD2            equ	1944	;# 
  4842     0799                     PMD3            equ	1945	;# 
  4843     079A                     PMD4            equ	1946	;# 
  4844     079B                     PMD5            equ	1947	;# 
  4845     080C                     WDTCON0         equ	2060	;# 
  4846     080D                     WDTCON1         equ	2061	;# 
  4847     080E                     WDTPSL          equ	2062	;# 
  4848     080F                     WDTPSH          equ	2063	;# 
  4849     0810                     WDTTMR          equ	2064	;# 
  4850     0811                     BORCON          equ	2065	;# 
  4851     0812                     VREGCON         equ	2066	;# 
  4852     0813                     PCON0           equ	2067	;# 
  4853     0814                     CCDCON          equ	2068	;# 
  4854     081A                     NVMADRL         equ	2074	;# 
  4855     081B                     NVMADRH         equ	2075	;# 
  4856     081C                     NVMDATL         equ	2076	;# 
  4857     081D                     NVMDATH         equ	2077	;# 
  4858     081E                     NVMCON1         equ	2078	;# 
  4859     081F                     NVMCON2         equ	2079	;# 
  4860     088C                     CPUDOZE         equ	2188	;# 
  4861     088D                     OSCCON1         equ	2189	;# 
  4862     088E                     OSCCON2         equ	2190	;# 
  4863     088F                     OSCCON3         equ	2191	;# 
  4864     0890                     OSCSTAT         equ	2192	;# 
  4865     0891                     OSCEN           equ	2193	;# 
  4866     0892                     OSCTUNE         equ	2194	;# 
  4867     0893                     OSCFRQ          equ	2195	;# 
  4868     0895                     CLKRCON         equ	2197	;# 
  4869     0896                     CLKRCLK         equ	2198	;# 
  4870     0897                     MDCON0          equ	2199	;# 
  4871     0898                     MDCON1          equ	2200	;# 
  4872     0899                     MDSRC           equ	2201	;# 
  4873     089A                     MDCARL          equ	2202	;# 
  4874     089B                     MDCARH          equ	2203	;# 
  4875     090C                     FVRCON          equ	2316	;# 
  4876     090E                     DAC1CON0        equ	2318	;# 
  4877     090F                     DAC1CON1        equ	2319	;# 
  4878     091F                     ZCD1CON         equ	2335	;# 
  4879     091F                     ZCDCON          equ	2335	;# 
  4880     098F                     CMOUT           equ	2447	;# 
  4881     098F                     CMSTAT          equ	2447	;# 
  4882     0990                     CM1CON0         equ	2448	;# 
  4883     0991                     CM1CON1         equ	2449	;# 
  4884     0992                     CM1NSEL         equ	2450	;# 
  4885     0993                     CM1PSEL         equ	2451	;# 
  4886     0994                     CM2CON0         equ	2452	;# 
  4887     0995                     CM2CON1         equ	2453	;# 
  4888     0996                     CM2NSEL         equ	2454	;# 
  4889     0997                     CM2PSEL         equ	2455	;# 
  4890     0E0F                     CLCDATA         equ	3599	;# 
  4891     0E10                     CLC1CON         equ	3600	;# 
  4892     0E11                     CLC1POL         equ	3601	;# 
  4893     0E12                     CLC1SEL0        equ	3602	;# 
  4894     0E13                     CLC1SEL1        equ	3603	;# 
  4895     0E14                     CLC1SEL2        equ	3604	;# 
  4896     0E15                     CLC1SEL3        equ	3605	;# 
  4897     0E16                     CLC1GLS0        equ	3606	;# 
  4898     0E17                     CLC1GLS1        equ	3607	;# 
  4899     0E18                     CLC1GLS2        equ	3608	;# 
  4900     0E19                     CLC1GLS3        equ	3609	;# 
  4901     0E1A                     CLC2CON         equ	3610	;# 
  4902     0E1B                     CLC2POL         equ	3611	;# 
  4903     0E1C                     CLC2SEL0        equ	3612	;# 
  4904     0E1D                     CLC2SEL1        equ	3613	;# 
  4905     0E1E                     CLC2SEL2        equ	3614	;# 
  4906     0E1F                     CLC2SEL3        equ	3615	;# 
  4907     0E20                     CLC2GLS0        equ	3616	;# 
  4908     0E21                     CLC2GLS1        equ	3617	;# 
  4909     0E22                     CLC2GLS2        equ	3618	;# 
  4910     0E23                     CLC2GLS3        equ	3619	;# 
  4911     0E24                     CLC3CON         equ	3620	;# 
  4912     0E25                     CLC3POL         equ	3621	;# 
  4913     0E26                     CLC3SEL0        equ	3622	;# 
  4914     0E27                     CLC3SEL1        equ	3623	;# 
  4915     0E28                     CLC3SEL2        equ	3624	;# 
  4916     0E29                     CLC3SEL3        equ	3625	;# 
  4917     0E2A                     CLC3GLS0        equ	3626	;# 
  4918     0E2B                     CLC3GLS1        equ	3627	;# 
  4919     0E2C                     CLC3GLS2        equ	3628	;# 
  4920     0E2D                     CLC3GLS3        equ	3629	;# 
  4921     0E2E                     CLC4CON         equ	3630	;# 
  4922     0E2F                     CLC4POL         equ	3631	;# 
  4923     0E30                     CLC4SEL0        equ	3632	;# 
  4924     0E31                     CLC4SEL1        equ	3633	;# 
  4925     0E32                     CLC4SEL2        equ	3634	;# 
  4926     0E33                     CLC4SEL3        equ	3635	;# 
  4927     0E34                     CLC4GLS0        equ	3636	;# 
  4928     0E35                     CLC4GLS1        equ	3637	;# 
  4929     0E36                     CLC4GLS2        equ	3638	;# 
  4930     0E37                     CLC4GLS3        equ	3639	;# 
  4931     0E8F                     PPSLOCK         equ	3727	;# 
  4932     0E90                     INTPPS          equ	3728	;# 
  4933     0E91                     T0CKIPPS        equ	3729	;# 
  4934     0E92                     T1CKIPPS        equ	3730	;# 
  4935     0E93                     T1GPPS          equ	3731	;# 
  4936     0E94                     T3CKIPPS        equ	3732	;# 
  4937     0E95                     T3GPPS          equ	3733	;# 
  4938     0E96                     T5CKIPPS        equ	3734	;# 
  4939     0E97                     T5GPPS          equ	3735	;# 
  4940     0E9C                     T2AINPPS        equ	3740	;# 
  4941     0E9D                     T4AINPPS        equ	3741	;# 
  4942     0E9E                     T6AINPPS        equ	3742	;# 
  4943     0EA1                     CCP1PPS         equ	3745	;# 
  4944     0EA2                     CCP2PPS         equ	3746	;# 
  4945     0EA3                     CCP3PPS         equ	3747	;# 
  4946     0EA4                     CCP4PPS         equ	3748	;# 
  4947     0EA5                     CCP5PPS         equ	3749	;# 
  4948     0EA9                     SMT1WINPPS      equ	3753	;# 
  4949     0EAA                     SMT1SIGPPS      equ	3754	;# 
  4950     0EAB                     SMT2WINPPS      equ	3755	;# 
  4951     0EAC                     SMT2SIGPPS      equ	3756	;# 
  4952     0EB1                     CWG1PPS         equ	3761	;# 
  4953     0EB2                     CWG2PPS         equ	3762	;# 
  4954     0EB3                     CWG3PPS         equ	3763	;# 
  4955     0EB8                     MDCARLPPS       equ	3768	;# 
  4956     0EB9                     MDCARHPPS       equ	3769	;# 
  4957     0EBA                     MDSRCPPS        equ	3770	;# 
  4958     0EBB                     CLCIN0PPS       equ	3771	;# 
  4959     0EBC                     CLCIN1PPS       equ	3772	;# 
  4960     0EBD                     CLCIN2PPS       equ	3773	;# 
  4961     0EBE                     CLCIN3PPS       equ	3774	;# 
  4962     0EC3                     ADCACTPPS       equ	3779	;# 
  4963     0EC5                     SSP1CLKPPS      equ	3781	;# 
  4964     0EC6                     SSP1DATPPS      equ	3782	;# 
  4965     0EC7                     SSP1SSPPS       equ	3783	;# 
  4966     0EC8                     SSP2CLKPPS      equ	3784	;# 
  4967     0EC9                     SSP2DATPPS      equ	3785	;# 
  4968     0ECA                     SSP2SSPPS       equ	3786	;# 
  4969     0ECB                     RXPPS           equ	3787	;# 
  4970     0ECC                     TXPPS           equ	3788	;# 
  4971     0F10                     RA0PPS          equ	3856	;# 
  4972     0F11                     RA1PPS          equ	3857	;# 
  4973     0F12                     RA2PPS          equ	3858	;# 
  4974     0F13                     RA3PPS          equ	3859	;# 
  4975     0F14                     RA4PPS          equ	3860	;# 
  4976     0F15                     RA5PPS          equ	3861	;# 
  4977     0F16                     RA6PPS          equ	3862	;# 
  4978     0F17                     RA7PPS          equ	3863	;# 
  4979     0F18                     RB0PPS          equ	3864	;# 
  4980     0F19                     RB1PPS          equ	3865	;# 
  4981     0F1A                     RB2PPS          equ	3866	;# 
  4982     0F1B                     RB3PPS          equ	3867	;# 
  4983     0F1C                     RB4PPS          equ	3868	;# 
  4984     0F1D                     RB5PPS          equ	3869	;# 
  4985     0F1E                     RB6PPS          equ	3870	;# 
  4986     0F1F                     RB7PPS          equ	3871	;# 
  4987     0F20                     RC0PPS          equ	3872	;# 
  4988     0F21                     RC1PPS          equ	3873	;# 
  4989     0F22                     RC2PPS          equ	3874	;# 
  4990     0F23                     RC3PPS          equ	3875	;# 
  4991     0F24                     RC4PPS          equ	3876	;# 
  4992     0F25                     RC5PPS          equ	3877	;# 
  4993     0F26                     RC6PPS          equ	3878	;# 
  4994     0F27                     RC7PPS          equ	3879	;# 
  4995     0F28                     RD0PPS          equ	3880	;# 
  4996     0F29                     RD1PPS          equ	3881	;# 
  4997     0F2A                     RD2PPS          equ	3882	;# 
  4998     0F2B                     RD3PPS          equ	3883	;# 
  4999     0F2C                     RD4PPS          equ	3884	;# 
  5000     0F2D                     RD5PPS          equ	3885	;# 
  5001     0F2E                     RD6PPS          equ	3886	;# 
  5002     0F2F                     RD7PPS          equ	3887	;# 
  5003     0F30                     RE0PPS          equ	3888	;# 
  5004     0F31                     RE1PPS          equ	3889	;# 
  5005     0F32                     RE2PPS          equ	3890	;# 
  5006     0F38                     ANSELA          equ	3896	;# 
  5007     0F39                     WPUA            equ	3897	;# 
  5008     0F3A                     ODCONA          equ	3898	;# 
  5009     0F3B                     SLRCONA         equ	3899	;# 
  5010     0F3C                     INLVLA          equ	3900	;# 
  5011     0F3D                     IOCAP           equ	3901	;# 
  5012     0F3E                     IOCAN           equ	3902	;# 
  5013     0F3F                     IOCAF           equ	3903	;# 
  5014     0F40                     CCDNA           equ	3904	;# 
  5015     0F41                     CCDPA           equ	3905	;# 
  5016     0F43                     ANSELB          equ	3907	;# 
  5017     0F44                     WPUB            equ	3908	;# 
  5018     0F45                     ODCONB          equ	3909	;# 
  5019     0F46                     SLRCONB         equ	3910	;# 
  5020     0F47                     INLVLB          equ	3911	;# 
  5021     0F48                     IOCBP           equ	3912	;# 
  5022     0F49                     IOCBN           equ	3913	;# 
  5023     0F4A                     IOCBF           equ	3914	;# 
  5024     0F4B                     CCDNB           equ	3915	;# 
  5025     0F4C                     CCDPB           equ	3916	;# 
  5026     0F4E                     ANSELC          equ	3918	;# 
  5027     0F4F                     WPUC            equ	3919	;# 
  5028     0F50                     ODCONC          equ	3920	;# 
  5029     0F51                     SLRCONC         equ	3921	;# 
  5030     0F52                     INLVLC          equ	3922	;# 
  5031     0F53                     IOCCP           equ	3923	;# 
  5032     0F54                     IOCCN           equ	3924	;# 
  5033     0F55                     IOCCF           equ	3925	;# 
  5034     0F56                     CCDNC           equ	3926	;# 
  5035     0F57                     CCDPC           equ	3927	;# 
  5036     0F59                     ANSELD          equ	3929	;# 
  5037     0F5A                     WPUD            equ	3930	;# 
  5038     0F5B                     ODCOND          equ	3931	;# 
  5039     0F5C                     SLRCOND         equ	3932	;# 
  5040     0F5D                     INLVLD          equ	3933	;# 
  5041     0F61                     CCDND           equ	3937	;# 
  5042     0F62                     CCDPD           equ	3938	;# 
  5043     0F64                     ANSELE          equ	3940	;# 
  5044     0F65                     WPUE            equ	3941	;# 
  5045     0F66                     ODCONE          equ	3942	;# 
  5046     0F67                     SLRCONE         equ	3943	;# 
  5047     0F68                     INLVLE          equ	3944	;# 
  5048     0F69                     IOCEP           equ	3945	;# 
  5049     0F6A                     IOCEN           equ	3946	;# 
  5050     0F6B                     IOCEF           equ	3947	;# 
  5051     0F6C                     CCDNE           equ	3948	;# 
  5052     0F6D                     CCDPE           equ	3949	;# 
  5053     0FE4                     STATUS_SHAD     equ	4068	;# 
  5054     0FE5                     WREG_SHAD       equ	4069	;# 
  5055     0FE6                     BSR_SHAD        equ	4070	;# 
  5056     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5057     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5058     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5059     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5060     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5061     0FED                     STKPTR          equ	4077	;# 
  5062     0FEE                     TOSL            equ	4078	;# 
  5063     0FEF                     TOSH            equ	4079	;# 
  5064                           
  5065                           	psect	stringtext1
  5066     0577                     __pstringtext1:
  5067     0577                     _i2c1_fsmStateTable:
  5068     0577  34C4               	retlw	low _I2C1_DO_IDLE
  5069     0578  340F               	retlw	high _I2C1_DO_IDLE
  5070     0579  34C6               	retlw	low _I2C1_DO_SEND_ADR_READ
  5071     057A  3407               	retlw	high _I2C1_DO_SEND_ADR_READ
  5072     057B  34D7               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  5073     057C  3407               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  5074     057D  34DD               	retlw	low _I2C1_DO_TX
  5075     057E  3401               	retlw	high _I2C1_DO_TX
  5076     057F  3453               	retlw	low _I2C1_DO_RX
  5077     0580  3403               	retlw	high _I2C1_DO_RX
  5078     0581  34E6               	retlw	low _I2C1_DO_RCEN
  5079     0582  3407               	retlw	high _I2C1_DO_RCEN
  5080     0583  34CF               	retlw	low _I2C1_DO_TX_EMPTY
  5081     0584  3404               	retlw	high _I2C1_DO_TX_EMPTY
  5082     0585  34C9               	retlw	low _I2C1_DO_SEND_RESTART_READ
  5083     0586  340F               	retlw	high _I2C1_DO_SEND_RESTART_READ
  5084     0587  34CE               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  5085     0588  340F               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  5086     0589  34D3               	retlw	low _I2C1_DO_SEND_RESTART
  5087     058A  340F               	retlw	high _I2C1_DO_SEND_RESTART
  5088     058B  34D8               	retlw	low _I2C1_DO_SEND_STOP
  5089     058C  340F               	retlw	high _I2C1_DO_SEND_STOP
  5090     058D  34DD               	retlw	low _I2C1_DO_RX_ACK
  5091     058E  340F               	retlw	high _I2C1_DO_RX_ACK
  5092     058F  34E2               	retlw	low _I2C1_DO_RX_NACK_STOP
  5093     0590  340F               	retlw	high _I2C1_DO_RX_NACK_STOP
  5094     0591  34E7               	retlw	low _I2C1_DO_RX_NACK_RESTART
  5095     0592  340F               	retlw	high _I2C1_DO_RX_NACK_RESTART
  5096     0593  34EC               	retlw	low _I2C1_DO_RESET
  5097     0594  340F               	retlw	high _I2C1_DO_RESET
  5098     0595  3426               	retlw	low _I2C1_DO_ADDRESS_NACK
  5099     0596  3405               	retlw	high _I2C1_DO_ADDRESS_NACK
  5100     0597                     __end_of_i2c1_fsmStateTable:
  5101     000B                     _INTCONbits     set	11
  5102     0014                     _TRISD          set	20
  5103     0013                     _TRISC          set	19
  5104     0012                     _TRISB          set	18
  5105     0011                     _TRISA          set	17
  5106     0015                     _TRISE          set	21
  5107     0018                     _LATC           set	24
  5108     0017                     _LATB           set	23
  5109     0016                     _LATA           set	22
  5110     0019                     _LATD           set	25
  5111     001A                     _LATE           set	26
  5112     0094                     _ADCON1bits     set	148
  5113     008E                     _ADPREVL        set	142
  5114     008F                     _ADPREVH        set	143
  5115     0097                     _ADSTATbits     set	151
  5116     0090                     _ADACCL         set	144
  5117     0091                     _ADACCH         set	145
  5118     0095                     _ADCON2bits     set	149
  5119     0096                     _ADCON3bits     set	150
  5120     008C                     _ADRESL         set	140
  5121     008D                     _ADRESH         set	141
  5122     0093                     _ADCON0bits     set	147
  5123     009D                     _ADACQ          set	157
  5124     0093                     _ADCON0         set	147
  5125     0098                     _ADCLK          set	152
  5126     0099                     _ADACT          set	153
  5127     009A                     _ADREF          set	154
  5128     0097                     _ADSTAT         set	151
  5129     0096                     _ADCON3         set	150
  5130     0095                     _ADCON2         set	149
  5131     0094                     _ADCON1         set	148
  5132     009C                     _ADPRE          set	156
  5133     009B                     _ADCAP          set	155
  5134     009E                     _ADPCH          set	158
  5135     0116                     _ADERRL         set	278
  5136     0117                     _ADERRH         set	279
  5137     0114                     _ADFLTRL        set	276
  5138     0115                     _ADFLTRH        set	277
  5139     010C                     _ADCNT          set	268
  5140     010D                     _ADRPT          set	269
  5141     0113                     _ADSTPTH        set	275
  5142     0112                     _ADSTPTL        set	274
  5143     0111                     _ADUTHH         set	273
  5144     0110                     _ADUTHL         set	272
  5145     010F                     _ADLTHH         set	271
  5146     010E                     _ADLTHL         set	270
  5147     018F                     _SSP1STATbits   set	399
  5148     0191                     _SSP1CON2bits   set	401
  5149     018C                     _SSP1BUF        set	396
  5150     0190                     _SSP1CON1bits   set	400
  5151     018D                     _SSP1ADD        set	397
  5152     0191                     _SSP1CON2       set	401
  5153     0190                     _SSP1CON1       set	400
  5154     018F                     _SSP1STAT       set	399
  5155     0719                     _PIE3bits       set	1817
  5156     070F                     _PIR3bits       set	1807
  5157     079B                     _PMD5           set	1947
  5158     079A                     _PMD4           set	1946
  5159     0799                     _PMD3           set	1945
  5160     0798                     _PMD2           set	1944
  5161     0797                     _PMD1           set	1943
  5162     0796                     _PMD0           set	1942
  5163     0892                     _OSCTUNE        set	2194
  5164     0893                     _OSCFRQ         set	2195
  5165     0891                     _OSCEN          set	2193
  5166     088F                     _OSCCON3        set	2191
  5167     088D                     _OSCCON1        set	2189
  5168     0EC6                     _SSP1DATPPS     set	3782
  5169     0EC5                     _SSP1CLKPPS     set	3781
  5170     0F24                     _RC4PPS         set	3876
  5171     0F23                     _RC3PPS         set	3875
  5172     0F68                     _INLVLE         set	3944
  5173     0F5D                     _INLVLD         set	3933
  5174     0F52                     _INLVLC         set	3922
  5175     0F47                     _INLVLB         set	3911
  5176     0F3C                     _INLVLA         set	3900
  5177     0F67                     _SLRCONE        set	3943
  5178     0F5C                     _SLRCOND        set	3932
  5179     0F51                     _SLRCONC        set	3921
  5180     0F46                     _SLRCONB        set	3910
  5181     0F3B                     _SLRCONA        set	3899
  5182     0F5B                     _ODCOND         set	3931
  5183     0F50                     _ODCONC         set	3920
  5184     0F45                     _ODCONB         set	3909
  5185     0F3A                     _ODCONA         set	3898
  5186     0F66                     _ODCONE         set	3942
  5187     0F4F                     _WPUC           set	3919
  5188     0F39                     _WPUA           set	3897
  5189     0F44                     _WPUB           set	3908
  5190     0F65                     _WPUE           set	3941
  5191     0F5A                     _WPUD           set	3930
  5192     0F38                     _ANSELA         set	3896
  5193     0F64                     _ANSELE         set	3940
  5194     0F43                     _ANSELB         set	3907
  5195     0F4E                     _ANSELC         set	3918
  5196     0F59                     _ANSELD         set	3929
  5197     0597                     STR_1:
  5198     0597  3425               	retlw	37	;'%'
  5199     0598  3464               	retlw	100	;'d'
  5200     0599  3400               	retlw	0
  5201                           
  5202                           	psect	stringtext2
  5203     0000                     __pstringtext2:
  5204                           
  5205                           	psect	cinit
  5206     0027                     start_initialization:	
  5207                           ; #config settings
  5208                           
  5209     0027                     __initialization:
  5210                           
  5211                           ; Clear objects allocated to BANK0
  5212     0027  3068               	movlw	low __pbssBANK0
  5213     0028  0084               	movwf	4
  5214     0029  3000               	movlw	high __pbssBANK0
  5215     002A  0085               	movwf	5
  5216     002B  3007               	movlw	7
  5217     002C  3187  27ED  3180   	fcall	clear_ram0
  5218                           
  5219                           ; Clear objects allocated to BANK1
  5220     002F  30A0               	movlw	low __pbssBANK1
  5221     0030  0084               	movwf	4
  5222     0031  3000               	movlw	high __pbssBANK1
  5223     0032  0085               	movwf	5
  5224     0033  3040               	movlw	64
  5225     0034  3187  27ED  3180   	fcall	clear_ram0
  5226     0037                     end_of_initialization:	
  5227                           ;End of C runtime variable initialization code
  5228                           
  5229     0037                     __end_of__initialization:
  5230     0037  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5231     0038  0020               	movlb	0
  5232     0039  3182  2A82         	ljmp	_main	;jump to C main() function
  5233                           
  5234                           	psect	bssBANK0
  5235     0068                     __pbssBANK0:
  5236     0068                     _prec:
  5237     0068                     	ds	2
  5238     006A                     _MSSP1_InterruptHandler:
  5239     006A                     	ds	2
  5240     006C                     _flags:
  5241     006C                     	ds	1
  5242     006D                     _display_cursor_blink:
  5243     006D                     	ds	1
  5244     006E                     _pcf_port:
  5245     006E                     	ds	1
  5246                           
  5247                           	psect	bssBANK1
  5248     00A0                     __pbssBANK1:
  5249     00A0                     _dbuf:
  5250     00A0                     	ds	32
  5251     00C0                     _I2C1_Status:
  5252     00C0                     	ds	30
  5253     00DE                     _width:
  5254     00DE                     	ds	2
  5255                           
  5256                           	psect	clrtext
  5257     07ED                     clear_ram0:	
  5258                           ;	Called with FSR0 containing the base address, and
  5259                           ;	WREG with the size to clear
  5260                           
  5261     07ED  0064               	clrwdt	;clear the watchdog before getting into this loop
  5262     07EE                     clrloop0:
  5263     07EE  0180               	clrf	0	;clear RAM location pointed to by FSR
  5264     07EF  3101               	addfsr 0,1
  5265     07F0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5266     07F1  2FEE               	goto	clrloop0	;have we reached the end yet?
  5267     07F2  3400               	retlw	0	;all done for this memory range, return
  5268                           
  5269                           	psect	cstackCOMMON
  5270     0070                     __pcstackCOMMON:
  5271     0070                     ?_I2C1_Open:
  5272     0070                     ?_I2C1_MasterWrite:	
  5273                           ; 1 bytes @ 0x0
  5274                           
  5275     0070                     ?_I2C1_Close:	
  5276                           ; 1 bytes @ 0x0
  5277                           
  5278     0070                     ?_I2C1_DO_IDLE:	
  5279                           ; 1 bytes @ 0x0
  5280                           
  5281     0070                     ?_I2C1_DO_SEND_ADR_READ:	
  5282                           ; 1 bytes @ 0x0
  5283                           
  5284     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  5285                           ; 1 bytes @ 0x0
  5286                           
  5287     0070                     ?_I2C1_DO_TX:	
  5288                           ; 1 bytes @ 0x0
  5289                           
  5290     0070                     ?_I2C1_DO_RX:	
  5291                           ; 1 bytes @ 0x0
  5292                           
  5293     0070                     ?_I2C1_DO_RCEN:	
  5294                           ; 1 bytes @ 0x0
  5295                           
  5296     0070                     ?_I2C1_DO_TX_EMPTY:	
  5297                           ; 1 bytes @ 0x0
  5298                           
  5299     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  5300                           ; 1 bytes @ 0x0
  5301                           
  5302     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  5303                           ; 1 bytes @ 0x0
  5304                           
  5305     0070                     ?_I2C1_DO_SEND_RESTART:	
  5306                           ; 1 bytes @ 0x0
  5307                           
  5308     0070                     ?_I2C1_DO_SEND_STOP:	
  5309                           ; 1 bytes @ 0x0
  5310                           
  5311     0070                     ?_I2C1_DO_RX_ACK:	
  5312                           ; 1 bytes @ 0x0
  5313                           
  5314     0070                     ?_I2C1_DO_RX_NACK_STOP:	
  5315                           ; 1 bytes @ 0x0
  5316                           
  5317     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  5318                           ; 1 bytes @ 0x0
  5319                           
  5320     0070                     ?_I2C1_DO_RESET:	
  5321                           ; 1 bytes @ 0x0
  5322                           
  5323     0070                     ?_I2C1_DO_ADDRESS_NACK:	
  5324                           ; 1 bytes @ 0x0
  5325                           
  5326     0070                     ?_I2C1_MasterIsr:	
  5327                           ; 1 bytes @ 0x0
  5328                           
  5329     0070                     ?_I2C1_MasterClearIrq:	
  5330                           ; 1 bytes @ 0x0
  5331                           
  5332     0070                     ?_I2C1_MasterOpen:	
  5333                           ; 1 bytes @ 0x0
  5334                           
  5335     0070                     ?_I2C1_MasterEnableIrq:	
  5336                           ; 1 bytes @ 0x0
  5337                           
  5338     0070                     ?_I2C1_MasterDisableIrq:	
  5339                           ; 1 bytes @ 0x0
  5340                           
  5341     0070                     ?_I2C1_MasterClose:	
  5342                           ; 1 bytes @ 0x0
  5343                           
  5344     0070                     ?_I2C1_MasterStart:	
  5345                           ; 1 bytes @ 0x0
  5346                           
  5347     0070                     ?_I2C1_MasterFsm:	
  5348                           ; 1 bytes @ 0x0
  5349                           
  5350     0070                     ?_I2C1_MasterIsNack:	
  5351                           ; 1 bytes @ 0x0
  5352                           
  5353     0070                     ?_I2C1_MasterSendTxData:	
  5354                           ; 1 bytes @ 0x0
  5355                           
  5356     0070                     ?_I2C1_MasterGetRxData:	
  5357                           ; 1 bytes @ 0x0
  5358                           
  5359     0070                     ?_I2C1_MasterSendAck:	
  5360                           ; 1 bytes @ 0x0
  5361                           
  5362     0070                     ?_I2C1_MasterStartRx:	
  5363                           ; 1 bytes @ 0x0
  5364                           
  5365     0070                     ?_I2C1_MasterSetIrq:	
  5366                           ; 1 bytes @ 0x0
  5367                           
  5368     0070                     ?_I2C1_MasterEnableRestart:	
  5369                           ; 1 bytes @ 0x0
  5370                           
  5371     0070                     ?_I2C1_MasterStop:	
  5372                           ; 1 bytes @ 0x0
  5373                           
  5374     0070                     ?_I2C1_MasterSendNack:	
  5375                           ; 1 bytes @ 0x0
  5376                           
  5377     0070                     ?_PMD_Initialize:	
  5378                           ; 1 bytes @ 0x0
  5379                           
  5380     0070                     ?_OSCILLATOR_Initialize:	
  5381                           ; 1 bytes @ 0x0
  5382                           
  5383     0070                     ?_ADCC_Initialize:	
  5384                           ; 1 bytes @ 0x0
  5385                           
  5386     0070                     ?_lcd_start:	
  5387                           ; 1 bytes @ 0x0
  5388                           
  5389     0070                     ?_lcd_delete:	
  5390                           ; 1 bytes @ 0x0
  5391                           
  5392     0070                     ?_lcd_command:	
  5393                           ; 1 bytes @ 0x0
  5394                           
  5395     0070                     ?_lcd_lighting_ac:	
  5396                           ; 1 bytes @ 0x0
  5397                           
  5398     0070                     ?_lcd_writeletter:	
  5399                           ; 1 bytes @ 0x0
  5400                           
  5401     0070                     ?_putch:	
  5402                           ; 1 bytes @ 0x0
  5403                           
  5404     0070                     ?_I2C1_Initialize:	
  5405                           ; 1 bytes @ 0x0
  5406                           
  5407     0070                     ?_I2C1_MasterOperation:	
  5408                           ; 1 bytes @ 0x0
  5409                           
  5410     0070                     ?_PIN_MANAGER_Initialize:	
  5411                           ; 1 bytes @ 0x0
  5412                           
  5413     0070                     ?_INTERRUPT_InterruptManager:	
  5414                           ; 1 bytes @ 0x0
  5415                           
  5416     0070                     ?_SYSTEM_Initialize:	
  5417                           ; 1 bytes @ 0x0
  5418                           
  5419     0070                     ?_main:	
  5420                           ; 1 bytes @ 0x0
  5421                           
  5422     0070                     ?_pcf8574_write:	
  5423                           ; 1 bytes @ 0x0
  5424                           
  5425     0070                     ?_pcf8574_write_wEnable:	
  5426                           ; 1 bytes @ 0x0
  5427                           
  5428     0070                     ?_lcd_busy:	
  5429                           ; 1 bytes @ 0x0
  5430                           
  5431     0070                     ?i1_I2C1_SetBuffer:	
  5432                           ; 1 bytes @ 0x0
  5433                           
  5434     0070                     ?i1_I2C1_SetCallback:	
  5435                           ; 1 bytes @ 0x0
  5436                           
  5437     0070                     ?i1_I2C1_MasterClearIrq:	
  5438                           ; 1 bytes @ 0x0
  5439                           
  5440     0070                     I2C1_MasterSendTxData@data:	
  5441                           ; 1 bytes @ 0x0
  5442                           
  5443     0070                     putch@c:	
  5444                           ; 1 bytes @ 0x0
  5445                           
  5446     0070                     i1I2C1_SetBuffer@buffer:	
  5447                           ; 1 bytes @ 0x0
  5448                           
  5449     0070                     i1I2C1_SetCallback@cb:	
  5450                           ; 2 bytes @ 0x0
  5451                           
  5452     0070                     ??_I2C1_DO_IDLE:	
  5453                           ; 2 bytes @ 0x0
  5454                           
  5455     0070                     ??_I2C1_DO_SEND_ADR_READ:	
  5456                           ; 1 bytes @ 0x0
  5457                           
  5458     0070                     ??_I2C1_DO_RCEN:	
  5459                           ; 1 bytes @ 0x0
  5460                           
  5461     0070                     ??_I2C1_DO_SEND_RESTART_READ:	
  5462                           ; 1 bytes @ 0x0
  5463                           
  5464     0070                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  5465                           ; 1 bytes @ 0x0
  5466                           
  5467     0070                     ??_I2C1_DO_SEND_RESTART:	
  5468                           ; 1 bytes @ 0x0
  5469                           
  5470     0070                     ??_I2C1_DO_SEND_STOP:	
  5471                           ; 1 bytes @ 0x0
  5472                           
  5473     0070                     ??_I2C1_DO_RX_ACK:	
  5474                           ; 1 bytes @ 0x0
  5475                           
  5476     0070                     ??_I2C1_DO_RX_NACK_STOP:	
  5477                           ; 1 bytes @ 0x0
  5478                           
  5479     0070                     ??_I2C1_DO_RX_NACK_RESTART:	
  5480                           ; 1 bytes @ 0x0
  5481                           
  5482     0070                     ??_I2C1_DO_RESET:	
  5483                           ; 1 bytes @ 0x0
  5484                           
  5485     0070                     ??_I2C1_MasterIsNack:	
  5486                           ; 1 bytes @ 0x0
  5487                           
  5488     0070                     ??_I2C1_MasterSendTxData:	
  5489                           ; 1 bytes @ 0x0
  5490                           
  5491     0070                     ??_I2C1_MasterGetRxData:	
  5492                           ; 1 bytes @ 0x0
  5493                           
  5494     0070                     ??_I2C1_MasterSendAck:	
  5495                           ; 1 bytes @ 0x0
  5496                           
  5497     0070                     ??_I2C1_MasterStartRx:	
  5498                           ; 1 bytes @ 0x0
  5499                           
  5500     0070                     ??_I2C1_MasterSetIrq:	
  5501                           ; 1 bytes @ 0x0
  5502                           
  5503     0070                     ??_I2C1_MasterEnableRestart:	
  5504                           ; 1 bytes @ 0x0
  5505                           
  5506     0070                     ??_I2C1_MasterStop:	
  5507                           ; 1 bytes @ 0x0
  5508                           
  5509     0070                     ??_I2C1_MasterSendNack:	
  5510                           ; 1 bytes @ 0x0
  5511                           
  5512     0070                     ??i1_I2C1_MasterClearIrq:	
  5513                           ; 1 bytes @ 0x0
  5514                           
  5515                           
  5516                           ; 1 bytes @ 0x0
  5517     0070                     	ds	1
  5518     0071                     ??_I2C1_DO_SEND_ADR_WRITE:
  5519                           
  5520                           ; 1 bytes @ 0x1
  5521     0071                     	ds	1
  5522     0072                     i1I2C1_SetCallback@ptr:
  5523     0072                     i1I2C1_SetBuffer@bufferSize:	
  5524                           ; 1 bytes @ 0x2
  5525                           
  5526                           
  5527                           ; 2 bytes @ 0x2
  5528     0072                     	ds	1
  5529     0073                     ??i1_I2C1_SetCallback:
  5530                           
  5531                           ; 1 bytes @ 0x3
  5532     0073                     	ds	1
  5533     0074                     ??i1_I2C1_SetBuffer:
  5534                           
  5535                           ; 1 bytes @ 0x4
  5536     0074                     	ds	1
  5537     0075                     i1I2C1_SetCallback@idx:
  5538                           
  5539                           ; 1 bytes @ 0x5
  5540     0075                     	ds	1
  5541     0076                     ?_I2C1_SetDataCompleteCallback:
  5542     0076                     I2C1_SetDataCompleteCallback@cb:	
  5543                           ; 1 bytes @ 0x6
  5544                           
  5545                           
  5546                           ; 2 bytes @ 0x6
  5547     0076                     	ds	2
  5548     0078                     I2C1_SetDataCompleteCallback@ptr:
  5549                           
  5550                           ; 1 bytes @ 0x8
  5551     0078                     	ds	1
  5552     0079                     ?_rd1RegCompleteHandler:
  5553     0079                     ?_rd2RegCompleteHandler:	
  5554                           ; 1 bytes @ 0x9
  5555                           
  5556     0079                     ?_wr1RegCompleteHandler:	
  5557                           ; 1 bytes @ 0x9
  5558                           
  5559     0079                     ?_wr2RegCompleteHandler:	
  5560                           ; 1 bytes @ 0x9
  5561                           
  5562     0079                     ?_rdBlkRegCompleteHandler:	
  5563                           ; 1 bytes @ 0x9
  5564                           
  5565     0079                     ?_I2C1_CallbackReturnStop:	
  5566                           ; 1 bytes @ 0x9
  5567                           
  5568     0079                     ?_I2C1_CallbackReturnReset:	
  5569                           ; 1 bytes @ 0x9
  5570                           
  5571     0079                     ?_wr1RegCompleteHandler@putch$F2178:	
  5572                           ; 1 bytes @ 0x9
  5573                           
  5574     0079                     ?_rd1RegCompleteHandler@putch$F2186:	
  5575                           ; 1 bytes @ 0x9
  5576                           
  5577     0079                     ?_rd2RegCompleteHandler@putch$F2192:	
  5578                           ; 1 bytes @ 0x9
  5579                           
  5580     0079                     ?_wr2RegCompleteHandler@putch$F2198:	
  5581                           ; 1 bytes @ 0x9
  5582                           
  5583     0079                     ?_rdBlkRegCompleteHandler@putch$F2204:	
  5584                           ; 1 bytes @ 0x9
  5585                           
  5586     0079                     wr1RegCompleteHandler@p:	
  5587                           ; 1 bytes @ 0x9
  5588                           
  5589     0079                     rd1RegCompleteHandler@p:	
  5590                           ; 1 bytes @ 0x9
  5591                           
  5592     0079                     rd2RegCompleteHandler@p:	
  5593                           ; 1 bytes @ 0x9
  5594                           
  5595     0079                     wr2RegCompleteHandler@p:	
  5596                           ; 1 bytes @ 0x9
  5597                           
  5598     0079                     rdBlkRegCompleteHandler@p:	
  5599                           ; 1 bytes @ 0x9
  5600                           
  5601     0079                     rd1RegCompleteHandler@i2c1_master_example$F146@ptr:	
  5602                           ; 1 bytes @ 0x9
  5603                           
  5604     0079                     rd2RegCompleteHandler@i2c1_master_example$F157@ptr:	
  5605                           ; 1 bytes @ 0x9
  5606                           
  5607     0079                     wr1RegCompleteHandler@i2c1_master_example$F163@ptr:	
  5608                           ; 1 bytes @ 0x9
  5609                           
  5610     0079                     wr2RegCompleteHandler@i2c1_master_example$F169@ptr:	
  5611                           ; 1 bytes @ 0x9
  5612                           
  5613     0079                     rdBlkRegCompleteHandler@i2c1_master_example$F180@ptr:	
  5614                           ; 1 bytes @ 0x9
  5615                           
  5616     0079                     I2C1_CallbackReturnStop@funPtr:	
  5617                           ; 1 bytes @ 0x9
  5618                           
  5619     0079                     I2C1_CallbackReturnReset@funPtr:	
  5620                           ; 1 bytes @ 0x9
  5621                           
  5622     0079                     ??_I2C1_SetDataCompleteCallback:	
  5623                           ; 1 bytes @ 0x9
  5624                           
  5625                           
  5626                           ; 1 bytes @ 0x9
  5627     0079                     	ds	1
  5628     007A                     ??_rd1RegCompleteHandler:
  5629     007A                     ??_rd2RegCompleteHandler:	
  5630                           ; 1 bytes @ 0xA
  5631                           
  5632     007A                     ??_wr1RegCompleteHandler:	
  5633                           ; 1 bytes @ 0xA
  5634                           
  5635     007A                     ??_wr2RegCompleteHandler:	
  5636                           ; 1 bytes @ 0xA
  5637                           
  5638     007A                     ??_rdBlkRegCompleteHandler:	
  5639                           ; 1 bytes @ 0xA
  5640                           
  5641     007A                     ??_I2C1_DO_TX:	
  5642                           ; 1 bytes @ 0xA
  5643                           
  5644     007A                     ??_I2C1_DO_RX:	
  5645                           ; 1 bytes @ 0xA
  5646                           
  5647     007A                     ??_I2C1_DO_TX_EMPTY:	
  5648                           ; 1 bytes @ 0xA
  5649                           
  5650     007A                     ??_I2C1_DO_ADDRESS_NACK:	
  5651                           ; 1 bytes @ 0xA
  5652                           
  5653     007A                     ??_I2C1_CallbackReturnStop:	
  5654                           ; 1 bytes @ 0xA
  5655                           
  5656     007A                     ??_I2C1_CallbackReturnReset:	
  5657                           ; 1 bytes @ 0xA
  5658                           
  5659     007A                     ??_wr1RegCompleteHandler@putch$F2180:	
  5660                           ; 1 bytes @ 0xA
  5661                           
  5662     007A                     ??_rd1RegCompleteHandler@putch$F2188:	
  5663                           ; 1 bytes @ 0xA
  5664                           
  5665     007A                     ??_rd2RegCompleteHandler@putch$F2194:	
  5666                           ; 1 bytes @ 0xA
  5667                           
  5668     007A                     ??_wr2RegCompleteHandler@putch$F2200:	
  5669                           ; 1 bytes @ 0xA
  5670                           
  5671     007A                     ??_rdBlkRegCompleteHandler@putch$F2206:	
  5672                           ; 1 bytes @ 0xA
  5673                           
  5674                           
  5675                           ; 1 bytes @ 0xA
  5676     007A                     	ds	2
  5677     007C                     ??_I2C1_MasterFsm:
  5678                           
  5679                           ; 1 bytes @ 0xC
  5680     007C                     	ds	2
  5681     007E                     ??_I2C1_MasterIsr:
  5682     007E                     ??_INTERRUPT_InterruptManager:	
  5683                           ; 1 bytes @ 0xE
  5684                           
  5685                           
  5686                           	psect	cstackBANK0
  5687     0020                     __pcstackBANK0:	
  5688                           ; 1 bytes @ 0xE
  5689                           
  5690     0020                     ?_I2C1_SetBuffer:
  5691     0020                     ?_I2C1_SetInterruptHandler:	
  5692                           ; 1 bytes @ 0x0
  5693                           
  5694     0020                     ?_I2C1_SetCallback:	
  5695                           ; 1 bytes @ 0x0
  5696                           
  5697     0020                     ?_ADCC_GetSingleConversion:	
  5698                           ; 1 bytes @ 0x0
  5699                           
  5700     0020                     ?_fputc:	
  5701                           ; 2 bytes @ 0x0
  5702                           
  5703     0020                     ?___awdiv:	
  5704                           ; 2 bytes @ 0x0
  5705                           
  5706     0020                     ?___awmod:	
  5707                           ; 2 bytes @ 0x0
  5708                           
  5709     0020                     I2C1_Close@returnValue:	
  5710                           ; 2 bytes @ 0x0
  5711                           
  5712     0020                     I2C1_MasterOperation@read:	
  5713                           ; 1 bytes @ 0x0
  5714                           
  5715     0020                     I2C1_SetBuffer@buffer:	
  5716                           ; 1 bytes @ 0x0
  5717                           
  5718     0020                     I2C1_SetInterruptHandler@InterruptHandler:	
  5719                           ; 2 bytes @ 0x0
  5720                           
  5721     0020                     I2C1_SetCallback@cb:	
  5722                           ; 2 bytes @ 0x0
  5723                           
  5724     0020                     ___awdiv@divisor:	
  5725                           ; 2 bytes @ 0x0
  5726                           
  5727     0020                     ___awmod@divisor:	
  5728                           ; 2 bytes @ 0x0
  5729                           
  5730     0020                     fputc@c:	
  5731                           ; 2 bytes @ 0x0
  5732                           
  5733     0020                     ??_I2C1_Close:	
  5734                           ; 2 bytes @ 0x0
  5735                           
  5736     0020                     ??_I2C1_MasterClearIrq:	
  5737                           ; 1 bytes @ 0x0
  5738                           
  5739     0020                     ??_I2C1_MasterOpen:	
  5740                           ; 1 bytes @ 0x0
  5741                           
  5742     0020                     ??_I2C1_MasterEnableIrq:	
  5743                           ; 1 bytes @ 0x0
  5744                           
  5745     0020                     ??_I2C1_MasterDisableIrq:	
  5746                           ; 1 bytes @ 0x0
  5747                           
  5748     0020                     ??_I2C1_MasterClose:	
  5749                           ; 1 bytes @ 0x0
  5750                           
  5751     0020                     ??_I2C1_MasterStart:	
  5752                           ; 1 bytes @ 0x0
  5753                           
  5754     0020                     ??_PMD_Initialize:	
  5755                           ; 1 bytes @ 0x0
  5756                           
  5757     0020                     ??_OSCILLATOR_Initialize:	
  5758                           ; 1 bytes @ 0x0
  5759                           
  5760     0020                     ??_ADCC_Initialize:	
  5761                           ; 1 bytes @ 0x0
  5762                           
  5763     0020                     ??_putch:	
  5764                           ; 1 bytes @ 0x0
  5765                           
  5766     0020                     ??_I2C1_Initialize:	
  5767                           ; 1 bytes @ 0x0
  5768                           
  5769     0020                     ??_I2C1_MasterOperation:	
  5770                           ; 1 bytes @ 0x0
  5771                           
  5772     0020                     ??_PIN_MANAGER_Initialize:	
  5773                           ; 1 bytes @ 0x0
  5774                           
  5775     0020                     ??_SYSTEM_Initialize:	
  5776                           ; 1 bytes @ 0x0
  5777                           
  5778     0020                     ??_lcd_busy:	
  5779                           ; 1 bytes @ 0x0
  5780                           
  5781                           
  5782                           ; 1 bytes @ 0x0
  5783     0020                     	ds	1
  5784     0021                     I2C1_MasterOperation@returnValue:
  5785                           
  5786                           ; 1 bytes @ 0x1
  5787     0021                     	ds	1
  5788     0022                     I2C1_Open@address:
  5789     0022                     I2C1_SetCallback@ptr:	
  5790                           ; 1 bytes @ 0x2
  5791                           
  5792     0022                     ADCC_GetSingleConversion@channel:	
  5793                           ; 1 bytes @ 0x2
  5794                           
  5795     0022                     I2C1_SetBuffer@bufferSize:	
  5796                           ; 1 bytes @ 0x2
  5797                           
  5798     0022                     ___awdiv@dividend:	
  5799                           ; 2 bytes @ 0x2
  5800                           
  5801     0022                     ___awmod@dividend:	
  5802                           ; 2 bytes @ 0x2
  5803                           
  5804     0022                     fputc@fp:	
  5805                           ; 2 bytes @ 0x2
  5806                           
  5807     0022                     ??_I2C1_Open:	
  5808                           ; 2 bytes @ 0x2
  5809                           
  5810     0022                     ??_I2C1_MasterWrite:	
  5811                           ; 1 bytes @ 0x2
  5812                           
  5813     0022                     ??_I2C1_SetInterruptHandler:	
  5814                           ; 1 bytes @ 0x2
  5815                           
  5816     0022                     ??_ADCC_GetSingleConversion:	
  5817                           ; 1 bytes @ 0x2
  5818                           
  5819                           
  5820                           ; 1 bytes @ 0x2
  5821     0022                     	ds	1
  5822     0023                     I2C1_Open@returnValue:
  5823     0023                     ??_I2C1_SetCallback:	
  5824                           ; 1 bytes @ 0x3
  5825                           
  5826                           
  5827                           ; 1 bytes @ 0x3
  5828     0023                     	ds	1
  5829     0024                     ___awdiv@counter:
  5830     0024                     ___awmod@counter:	
  5831                           ; 1 bytes @ 0x4
  5832                           
  5833     0024                     ??_I2C1_SetBuffer:	
  5834                           ; 1 bytes @ 0x4
  5835                           
  5836     0024                     ??_fputc:	
  5837                           ; 1 bytes @ 0x4
  5838                           
  5839     0024                     ??___awdiv:	
  5840                           ; 1 bytes @ 0x4
  5841                           
  5842     0024                     ??___awmod:	
  5843                           ; 1 bytes @ 0x4
  5844                           
  5845                           
  5846                           ; 1 bytes @ 0x4
  5847     0024                     	ds	1
  5848     0025                     I2C1_SetCallback@idx:
  5849     0025                     ___awdiv@sign:	
  5850                           ; 1 bytes @ 0x5
  5851                           
  5852     0025                     ___awmod@sign:	
  5853                           ; 1 bytes @ 0x5
  5854                           
  5855                           
  5856                           ; 1 bytes @ 0x5
  5857     0025                     	ds	1
  5858     0026                     ?_I2C1_SetAddressNackCallback:
  5859     0026                     ?_abs:	
  5860                           ; 1 bytes @ 0x6
  5861                           
  5862     0026                     I2C1_SetAddressNackCallback@cb:	
  5863                           ; 2 bytes @ 0x6
  5864                           
  5865     0026                     ___awdiv@quotient:	
  5866                           ; 2 bytes @ 0x6
  5867                           
  5868     0026                     abs@a:	
  5869                           ; 2 bytes @ 0x6
  5870                           
  5871                           
  5872                           ; 2 bytes @ 0x6
  5873     0026                     	ds	2
  5874     0028                     I2C1_SetAddressNackCallback@ptr:
  5875     0028                     ??_abs:	
  5876                           ; 2 bytes @ 0x8
  5877                           
  5878                           
  5879                           ; 1 bytes @ 0x8
  5880     0028                     	ds	2
  5881     002A                     ?_i2c_writeNBytes:
  5882     002A                     ?_vfpfcnvrt:	
  5883                           ; 1 bytes @ 0xA
  5884                           
  5885     002A                     i2c_writeNBytes@data:	
  5886                           ; 1 bytes @ 0xA
  5887                           
  5888     002A                     vfpfcnvrt@fp:	
  5889                           ; 1 bytes @ 0xA
  5890                           
  5891     002A                     ??_I2C1_SetAddressNackCallback:	
  5892                           ; 2 bytes @ 0xA
  5893                           
  5894                           
  5895                           ; 1 bytes @ 0xA
  5896     002A                     	ds	1
  5897     002B                     i2c_writeNBytes@len:
  5898                           
  5899                           ; 2 bytes @ 0xB
  5900     002B                     	ds	1
  5901     002C                     vfpfcnvrt@fmt:
  5902                           
  5903                           ; 1 bytes @ 0xC
  5904     002C                     	ds	1
  5905     002D                     i2c_writeNBytes@address:
  5906     002D                     vfpfcnvrt@ap:	
  5907                           ; 1 bytes @ 0xD
  5908                           
  5909     002D                     ??_i2c_writeNBytes:	
  5910                           ; 1 bytes @ 0xD
  5911                           
  5912                           
  5913                           ; 1 bytes @ 0xD
  5914     002D                     	ds	1
  5915     002E                     pcf8574_write@data:
  5916     002E                     pcf8574_write_wEnable@writeBuffer:	
  5917                           ; 1 bytes @ 0xE
  5918                           
  5919     002E                     ??_pcf8574_write:	
  5920                           ; 3 bytes @ 0xE
  5921                           
  5922     002E                     ??_pcf8574_write_wEnable:	
  5923                           ; 1 bytes @ 0xE
  5924                           
  5925     002E                     ??_vfpfcnvrt:	
  5926                           ; 1 bytes @ 0xE
  5927                           
  5928                           
  5929                           ; 1 bytes @ 0xE
  5930     002E                     	ds	1
  5931     002F                     ??_lcd_lighting_ac:
  5932                           
  5933                           ; 1 bytes @ 0xF
  5934     002F                     	ds	2
  5935     0031                     ??_lcd_command:
  5936     0031                     ??_lcd_writeletter:	
  5937                           ; 1 bytes @ 0x11
  5938                           
  5939                           
  5940                           ; 1 bytes @ 0x11
  5941     0031                     	ds	1
  5942     0032                     lcd_writeletter@letter:
  5943     0032                     lcd_command@command:	
  5944                           ; 1 bytes @ 0x12
  5945                           
  5946     0032                     vfpfcnvrt@done:	
  5947                           ; 1 bytes @ 0x12
  5948                           
  5949                           
  5950                           ; 1 bytes @ 0x12
  5951     0032                     	ds	1
  5952     0033                     ?_lcd_go:
  5953     0033                     lcd_go@column:	
  5954                           ; 1 bytes @ 0x13
  5955                           
  5956     0033                     vfpfcnvrt@cp:	
  5957                           ; 1 bytes @ 0x13
  5958                           
  5959     0033                     ??_lcd_start:	
  5960                           ; 2 bytes @ 0x13
  5961                           
  5962     0033                     ??_lcd_delete:	
  5963                           ; 1 bytes @ 0x13
  5964                           
  5965                           
  5966                           ; 1 bytes @ 0x13
  5967     0033                     	ds	1
  5968     0034                     lcd_go@line:
  5969     0034                     ??_lcd_go:	
  5970                           ; 1 bytes @ 0x14
  5971                           
  5972                           
  5973                           ; 1 bytes @ 0x14
  5974     0034                     	ds	1
  5975     0035                     lcd_go@temp:
  5976     0035                     vfpfcnvrt@convarg:	
  5977                           ; 1 bytes @ 0x15
  5978                           
  5979                           
  5980                           ; 4 bytes @ 0x15
  5981     0035                     	ds	1
  5982     0036                     ?_lcd_writemessage:
  5983     0036                     lcd_writemessage@column:	
  5984                           ; 1 bytes @ 0x16
  5985                           
  5986                           
  5987                           ; 1 bytes @ 0x16
  5988     0036                     	ds	1
  5989     0037                     lcd_writemessage@message:
  5990                           
  5991                           ; 1 bytes @ 0x17
  5992     0037                     	ds	1
  5993     0038                     lcd_writemessage@line:
  5994     0038                     ??_lcd_writemessage:	
  5995                           ; 1 bytes @ 0x18
  5996                           
  5997                           
  5998                           ; 1 bytes @ 0x18
  5999     0038                     	ds	1
  6000     0039                     vfpfcnvrt@c:
  6001                           
  6002                           ; 1 bytes @ 0x19
  6003     0039                     	ds	1
  6004     003A                     ?_vfprintf:
  6005     003A                     vfprintf@fp:	
  6006                           ; 2 bytes @ 0x1A
  6007                           
  6008                           
  6009                           ; 2 bytes @ 0x1A
  6010     003A                     	ds	2
  6011     003C                     vfprintf@fmt:
  6012                           
  6013                           ; 2 bytes @ 0x1C
  6014     003C                     	ds	2
  6015     003E                     vfprintf@ap:
  6016                           
  6017                           ; 1 bytes @ 0x1E
  6018     003E                     	ds	1
  6019     003F                     ??_vfprintf:
  6020                           
  6021                           ; 1 bytes @ 0x1F
  6022     003F                     	ds	1
  6023     0040                     vfprintf@cfmt:
  6024                           
  6025                           ; 2 bytes @ 0x20
  6026     0040                     	ds	2
  6027     0042                     ?_sprintf:
  6028     0042                     sprintf@s:	
  6029                           ; 2 bytes @ 0x22
  6030                           
  6031                           
  6032                           ; 1 bytes @ 0x22
  6033     0042                     	ds	1
  6034     0043                     sprintf@fmt:
  6035                           
  6036                           ; 2 bytes @ 0x23
  6037     0043                     	ds	4
  6038     0047                     sprintf@ap:
  6039     0047                     ??_sprintf:	
  6040                           ; 1 bytes @ 0x27
  6041                           
  6042                           
  6043                           ; 1 bytes @ 0x27
  6044     0047                     	ds	1
  6045     0048                     sprintf@f:
  6046                           
  6047                           ; 11 bytes @ 0x28
  6048     0048                     	ds	11
  6049     0053                     ??_main:
  6050                           
  6051                           ; 1 bytes @ 0x33
  6052     0053                     	ds	2
  6053     0055                     main@buffer:
  6054                           
  6055                           ; 17 bytes @ 0x35
  6056     0055                     	ds	17
  6057     0066                     main@valor:
  6058                           
  6059                           ; 2 bytes @ 0x46
  6060     0066                     	ds	2
  6061                           
  6062                           	psect	maintext
  6063     0282                     __pmaintext:	
  6064 ;;
  6065 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6066 ;;
  6067 ;; *************** function _main *****************
  6068 ;; Defined at:
  6069 ;;		line 50 in file "main.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  buffer         17   53[BANK0 ] unsigned char [17]
  6074 ;;  valor           2   70[BANK0 ] int 
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : B1F/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6085 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;Total ram usage:       21 bytes
  6089 ;; Hardware stack levels required when called: 15
  6090 ;; This function calls:
  6091 ;;		_ADCC_GetSingleConversion
  6092 ;;		_SYSTEM_Initialize
  6093 ;;		_lcd_delete
  6094 ;;		_lcd_start
  6095 ;;		_lcd_writemessage
  6096 ;;		_sprintf
  6097 ;; This function is called by:
  6098 ;;		Startup code after reset
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102     0282                     _main:	
  6103                           ;psect for function _main
  6104                           
  6105     0282                     l4003:	
  6106                           ;incstack = 0
  6107                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6108                           
  6109                           
  6110                           ;main.c: 53:     SYSTEM_Initialize();
  6111     0282  3187  2764  3182   	fcall	_SYSTEM_Initialize
  6112     0285                     l4005:
  6113                           
  6114                           ;main.c: 59:    (INTCONbits.GIE = 1);
  6115     0285  178B               	bsf	11,7	;volatile
  6116     0286                     l4007:
  6117                           
  6118                           ;main.c: 62:    (INTCONbits.PEIE = 1);
  6119     0286  170B               	bsf	11,6	;volatile
  6120     0287                     l4009:
  6121                           
  6122                           ;main.c: 69:   _delay((unsigned long)((500)*(32000000/4000.0)));
  6123     0287  3015               	movlw	21
  6124     0288  0020               	movlb	0	; select bank0
  6125     0289  00D4               	movwf	??_main+1
  6126     028A  304B               	movlw	75
  6127     028B  00D3               	movwf	??_main
  6128     028C  30BE               	movlw	190
  6129     028D                     u1867:
  6130     028D  0B89               	decfsz	9,f
  6131     028E  2A8D               	goto	u1867
  6132     028F  0BD3               	decfsz	??_main,f
  6133     0290  2A8D               	goto	u1867
  6134     0291  0BD4               	decfsz	??_main+1,f
  6135     0292  2A8D               	goto	u1867
  6136     0293  0000               	nop
  6137     0294                     l4011:
  6138                           
  6139                           ;main.c: 70:     lcd_start();
  6140     0294  3183  2397  3182   	fcall	_lcd_start
  6141     0297                     l4013:
  6142                           
  6143                           ;main.c: 73:     {;main.c: 84:       char buffer[17];;main.c: 88:       _delay((unsigned
      +                           long)((50)*(32000000/4000.0)));
  6144     0297  3003               	movlw	3
  6145     0298  0020               	movlb	0	; select bank0
  6146     0299  00D4               	movwf	??_main+1
  6147     029A  3008               	movlw	8
  6148     029B  00D3               	movwf	??_main
  6149     029C  3077               	movlw	119
  6150     029D                     u1877:
  6151     029D  0B89               	decfsz	9,f
  6152     029E  2A9D               	goto	u1877
  6153     029F  0BD3               	decfsz	??_main,f
  6154     02A0  2A9D               	goto	u1877
  6155     02A1  0BD4               	decfsz	??_main+1,f
  6156     02A2  2A9D               	goto	u1877
  6157     02A3                     l4015:
  6158                           
  6159                           ;main.c: 89:       lcd_delete();
  6160     02A3  318F  27FB  3182   	fcall	_lcd_delete
  6161     02A6                     l4017:
  6162                           
  6163                           ;main.c: 90:       valor = ADCC_GetSingleConversion(POT);
  6164     02A6  3000               	movlw	0
  6165     02A7  3186  2690  3182   	fcall	_ADCC_GetSingleConversion
  6166     02AA  0020               	movlb	0	; select bank0
  6167     02AB  0821               	movf	?_ADCC_GetSingleConversion+1,w
  6168     02AC  00E7               	movwf	main@valor+1
  6169     02AD  0820               	movf	?_ADCC_GetSingleConversion,w
  6170     02AE  00E6               	movwf	main@valor
  6171     02AF                     l4019:
  6172                           
  6173                           ;main.c: 91:       sprintf(buffer, "%d", valor);
  6174     02AF  3055               	movlw	(low (main@buffer| 0))& (0+255)
  6175     02B0  00C2               	movwf	sprintf@s
  6176     02B1  3097               	movlw	low (STR_1| (0+32768))
  6177     02B2  00C3               	movwf	sprintf@fmt
  6178     02B3  3085               	movlw	high (STR_1| (0+32768))
  6179     02B4  00C4               	movwf	sprintf@fmt+1
  6180     02B5  0867               	movf	main@valor+1,w
  6181     02B6  00C6               	movwf	?_sprintf+4
  6182     02B7  0866               	movf	main@valor,w
  6183     02B8  00C5               	movwf	?_sprintf+3
  6184     02B9  3185  259A  3182   	fcall	_sprintf
  6185     02BC                     l4021:
  6186                           
  6187                           ;main.c: 92:       lcd_writemessage(1, 1, buffer);
  6188     02BC  0020               	movlb	0	; select bank0
  6189     02BD  01B6               	clrf	lcd_writemessage@column
  6190     02BE  0AB6               	incf	lcd_writemessage@column,f
  6191     02BF  3055               	movlw	(low (main@buffer| 0))& (0+255)
  6192     02C0  00B7               	movwf	lcd_writemessage@message
  6193     02C1  3001               	movlw	1
  6194     02C2  3185  25F4  3182   	fcall	_lcd_writemessage
  6195     02C5  2A97               	goto	l4013
  6196     02C6  3180  2825         	ljmp	start
  6197     02C8                     __end_of_main:
  6198                           
  6199                           	psect	text1
  6200     059A                     __ptext1:	
  6201 ;; *************** function _sprintf *****************
  6202 ;; Defined at:
  6203 ;;		line 9 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/nf_sprintf.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  s               1   34[BANK0 ] PTR unsigned char 
  6206 ;;		 -> main@buffer(17), 
  6207 ;;  fmt             2   35[BANK0 ] PTR const unsigned char 
  6208 ;;		 -> STR_1(3), 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  f              11   40[BANK0 ] struct _IO_FILE
  6211 ;;  ret             2    0        int 
  6212 ;;  ap              1   39[BANK0 ] PTR void [1]
  6213 ;;		 -> ?_sprintf(2), 
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  2   34[BANK0 ] int 
  6216 ;; Registers used:
  6217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6223 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6224 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6226 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;Total ram usage:       17 bytes
  6228 ;; Hardware stack levels used: 1
  6229 ;; Hardware stack levels required when called: 11
  6230 ;; This function calls:
  6231 ;;		_vfprintf
  6232 ;; This function is called by:
  6233 ;;		_main
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237     059A                     _sprintf:	
  6238                           ;psect for function _sprintf
  6239                           
  6240     059A                     l3761:	
  6241                           ;incstack = 0
  6242                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6243                           
  6244     059A  3045               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  6245     059B  0020               	movlb	0	; select bank0
  6246     059C  00C7               	movwf	sprintf@ap
  6247     059D  0842               	movf	sprintf@s,w
  6248     059E  00C8               	movwf	sprintf@f
  6249     059F  01C9               	clrf	sprintf@f+1
  6250     05A0                     l3763:
  6251     05A0  01CA               	clrf	sprintf@f+2
  6252     05A1  01CB               	clrf	sprintf@f+3
  6253     05A2                     l3765:
  6254     05A2  01D1               	clrf	sprintf@f+9
  6255     05A3  01D2               	clrf	sprintf@f+10
  6256     05A4                     l3767:
  6257     05A4  3048               	movlw	low sprintf@f
  6258     05A5  00BA               	movwf	vfprintf@fp
  6259     05A6  3000               	movlw	high sprintf@f
  6260     05A7  00BB               	movwf	vfprintf@fp+1
  6261     05A8  0844               	movf	sprintf@fmt+1,w
  6262     05A9  00BD               	movwf	vfprintf@fmt+1
  6263     05AA  0843               	movf	sprintf@fmt,w
  6264     05AB  00BC               	movwf	vfprintf@fmt
  6265     05AC  3047               	movlw	(low (sprintf@ap| 0))& (0+255)
  6266     05AD  00BE               	movwf	vfprintf@ap
  6267     05AE  3185  25B8  3185   	fcall	_vfprintf
  6268     05B1                     l3769:
  6269     05B1  0020               	movlb	0	; select bank0
  6270     05B2  0842               	movf	sprintf@s,w
  6271     05B3  074A               	addwf	sprintf@f+2,w
  6272     05B4  0086               	movwf	6
  6273     05B5  0187               	clrf	7
  6274     05B6  0181               	clrf	1
  6275     05B7                     l1599:
  6276     05B7  0008               	return
  6277     05B8                     __end_of_sprintf:
  6278                           
  6279                           	psect	text2
  6280     05B8                     __ptext2:	
  6281 ;; *************** function _vfprintf *****************
  6282 ;; Defined at:
  6283 ;;		line 1817 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  6286 ;;		 -> sprintf@f(11), 
  6287 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
  6288 ;;		 -> STR_1(3), 
  6289 ;;  ap              1   30[BANK0 ] PTR PTR void 
  6290 ;;		 -> sprintf@ap(1), 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  cfmt            2   32[BANK0 ] PTR unsigned char 
  6293 ;;		 -> STR_1(3), 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  2   26[BANK0 ] int 
  6296 ;; Registers used:
  6297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6303 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6307 ;;Total ram usage:        8 bytes
  6308 ;; Hardware stack levels used: 1
  6309 ;; Hardware stack levels required when called: 10
  6310 ;; This function calls:
  6311 ;;		_vfpfcnvrt
  6312 ;; This function is called by:
  6313 ;;		_sprintf
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317     05B8                     _vfprintf:	
  6318                           ;psect for function _vfprintf
  6319                           
  6320     05B8                     l3713:	
  6321                           ;incstack = 0
  6322                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6323                           
  6324                           
  6325                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
  6326     05B8  0020               	movlb	0	; select bank0
  6327     05B9  083D               	movf	vfprintf@fmt+1,w
  6328     05BA  00C1               	movwf	vfprintf@cfmt+1
  6329     05BB  083C               	movf	vfprintf@fmt,w
  6330     05BC  00C0               	movwf	vfprintf@cfmt
  6331                           
  6332                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  6333     05BD  2DC9               	goto	l3717
  6334     05BE                     l3715:
  6335                           
  6336                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
  6337     05BE  083B               	movf	vfprintf@fp+1,w
  6338     05BF  00AB               	movwf	vfpfcnvrt@fp+1
  6339     05C0  083A               	movf	vfprintf@fp,w
  6340     05C1  00AA               	movwf	vfpfcnvrt@fp
  6341     05C2  3040               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6342     05C3  00AC               	movwf	vfpfcnvrt@fmt
  6343     05C4  083E               	movf	vfprintf@ap,w
  6344     05C5  00AD               	movwf	vfpfcnvrt@ap
  6345     05C6  3180  203B  3185   	fcall	_vfpfcnvrt
  6346     05C9                     l3717:
  6347                           
  6348                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  6349     05C9  0020               	movlb	0	; select bank0
  6350     05CA  0840               	movf	vfprintf@cfmt,w
  6351     05CB  0084               	movwf	4
  6352     05CC  0841               	movf	vfprintf@cfmt+1,w
  6353     05CD  0085               	movwf	5
  6354     05CE  0012               	moviw fsr0++
  6355     05CF  1D03               	btfss	3,2
  6356     05D0  2DD2               	goto	u1461
  6357     05D1  2DD3               	goto	u1460
  6358     05D2                     u1461:
  6359     05D2  2DBE               	goto	l3715
  6360     05D3                     u1460:
  6361     05D3                     l3719:
  6362                           
  6363                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  6364     05D3  01BA               	clrf	?_vfprintf
  6365     05D4  01BB               	clrf	?_vfprintf+1
  6366     05D5                     l1643:
  6367     05D5  0008               	return
  6368     05D6                     __end_of_vfprintf:
  6369                           
  6370                           	psect	text3
  6371     003B                     __ptext3:	
  6372 ;; *************** function _vfpfcnvrt *****************
  6373 ;; Defined at:
  6374 ;;		line 1177 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  6377 ;;		 -> sprintf@f(11), 
  6378 ;;  fmt             1   12[BANK0 ] PTR PTR unsigned char 
  6379 ;;		 -> vfprintf@cfmt(2), 
  6380 ;;  ap              1   13[BANK0 ] PTR PTR void 
  6381 ;;		 -> sprintf@ap(1), 
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;  convarg         4   21[BANK0 ] struct .
  6384 ;;  cp              2   19[BANK0 ] PTR unsigned char 
  6385 ;;		 -> STR_1(3), 
  6386 ;;  c               1   25[BANK0 ] unsigned char 
  6387 ;;  done            1   18[BANK0 ] _Bool 
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  1    wreg      void 
  6390 ;; Registers used:
  6391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6397 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;Total ram usage:       16 bytes
  6402 ;; Hardware stack levels used: 1
  6403 ;; Hardware stack levels required when called: 9
  6404 ;; This function calls:
  6405 ;;		___awdiv
  6406 ;;		___awmod
  6407 ;;		_abs
  6408 ;;		_fputc
  6409 ;; This function is called by:
  6410 ;;		_vfprintf
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414     003B                     _vfpfcnvrt:	
  6415                           ;psect for function _vfpfcnvrt
  6416                           
  6417     003B                     l3537:	
  6418                           ;incstack = 0
  6419                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6420                           
  6421                           
  6422                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v3.00/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v3.00/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6423     003B  0020               	movlb	0	; select bank0
  6424     003C  082C               	movf	vfpfcnvrt@fmt,w
  6425     003D  0086               	movwf	6
  6426     003E  0187               	clrf	7
  6427     003F  3F40               	moviw [0]fsr1
  6428     0040  00AE               	movwf	??_vfpfcnvrt
  6429     0041  3F41               	moviw [1]fsr1
  6430     0042  00AF               	movwf	??_vfpfcnvrt+1
  6431     0043  082E               	movf	??_vfpfcnvrt,w
  6432     0044  0084               	movwf	4
  6433     0045  082F               	movf	??_vfpfcnvrt+1,w
  6434     0046  0085               	movwf	5
  6435     0047  0012               	moviw fsr0++
  6436     0048  3A25               	xorlw	37
  6437     0049  1D03               	btfss	3,2
  6438     004A  284C               	goto	u1331
  6439     004B  284D               	goto	u1330
  6440     004C                     u1331:
  6441     004C  290D               	goto	l3583
  6442     004D                     u1330:
  6443     004D                     l3539:
  6444                           
  6445                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
  6446     004D  082C               	movf	vfpfcnvrt@fmt,w
  6447     004E  0086               	movwf	6
  6448     004F  0187               	clrf	7
  6449     0050  3001               	movlw	1
  6450     0051  0781               	addwf	1,f
  6451     0052  3141               	addfsr 1,1
  6452     0053  1803               	skipnc
  6453     0054  0A81               	incf	1,f
  6454     0055                     l3541:
  6455                           
  6456                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
  6457     0055  0021               	movlb	1	; select bank1
  6458     0056  01DE               	clrf	_width^(0+128)
  6459     0057  01DF               	clrf	(_width+1)^(0+128)
  6460     0058  3000               	movlw	0
  6461     0059  0020               	movlb	0	; select bank0
  6462     005A  00EC               	movwf	_flags
  6463     005B                     l3543:
  6464                           
  6465                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
  6466     005B  30FF               	movlw	255
  6467     005C  00E8               	movwf	_prec
  6468     005D  30FF               	movlw	255
  6469     005E  00E9               	movwf	_prec+1
  6470     005F                     l3545:
  6471                           
  6472                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1291:   cp = *fmt;
  6473     005F  082C               	movf	vfpfcnvrt@fmt,w
  6474     0060  0086               	movwf	6
  6475     0061  0187               	clrf	7
  6476     0062  3F40               	moviw [0]fsr1
  6477     0063  00B3               	movwf	vfpfcnvrt@cp
  6478     0064  3F41               	moviw [1]fsr1
  6479     0065  00B4               	movwf	vfpfcnvrt@cp+1
  6480     0066                     l3547:
  6481                           
  6482                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1361:   if (*cp == 'd' || *cp
      +                           == 'i') {
  6483     0066  0833               	movf	vfpfcnvrt@cp,w
  6484     0067  0084               	movwf	4
  6485     0068  0834               	movf	vfpfcnvrt@cp+1,w
  6486     0069  0085               	movwf	5
  6487     006A  0012               	moviw fsr0++
  6488     006B  3A64               	xorlw	100
  6489     006C  1903               	btfsc	3,2
  6490     006D  286F               	goto	u1341
  6491     006E  2870               	goto	u1340
  6492     006F                     u1341:
  6493     006F  287A               	goto	l3551
  6494     0070                     u1340:
  6495     0070                     l3549:
  6496     0070  0833               	movf	vfpfcnvrt@cp,w
  6497     0071  0084               	movwf	4
  6498     0072  0834               	movf	vfpfcnvrt@cp+1,w
  6499     0073  0085               	movwf	5
  6500     0074  0012               	moviw fsr0++
  6501     0075  3A69               	xorlw	105
  6502     0076  1D03               	btfss	3,2
  6503     0077  2879               	goto	u1351
  6504     0078  287A               	goto	u1350
  6505     0079                     u1351:
  6506     0079  2903               	goto	l3579
  6507     007A                     u1350:
  6508     007A                     l3551:
  6509                           
  6510                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1404:    convarg.sint = (vfpf
      +                          _sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6511     007A  082D               	movf	vfpfcnvrt@ap,w
  6512     007B  0086               	movwf	6
  6513     007C  0187               	clrf	7
  6514     007D  0801               	movf	1,w
  6515     007E  0084               	movwf	4
  6516     007F  0185               	clrf	5
  6517     0080  3002               	movlw	2
  6518     0081  0781               	addwf	1,f
  6519     0082  3F00               	moviw [0]fsr0
  6520     0083  00B5               	movwf	vfpfcnvrt@convarg
  6521     0084  3F01               	moviw [1]fsr0
  6522     0085  00B6               	movwf	vfpfcnvrt@convarg+1
  6523     0086                     l3553:
  6524                           
  6525                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1406:    *fmt = cp+1;
  6526     0086  0833               	movf	vfpfcnvrt@cp,w
  6527     0087  3E01               	addlw	1
  6528     0088  00AE               	movwf	??_vfpfcnvrt
  6529     0089  3000               	movlw	0
  6530     008A  3D34               	addwfc	vfpfcnvrt@cp+1,w
  6531     008B  00AF               	movwf	??_vfpfcnvrt+1
  6532     008C  082C               	movf	vfpfcnvrt@fmt,w
  6533     008D  0086               	movwf	6
  6534     008E  0187               	clrf	7
  6535     008F  082E               	movf	??_vfpfcnvrt,w
  6536     0090  3FC0               	movwi [0]fsr1
  6537     0091  082F               	movf	??_vfpfcnvrt+1,w
  6538     0092  3FC1               	movwi [1]fsr1
  6539     0093                     l3555:
  6540                           
  6541                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1408:    c = sizeof(dbuf);
  6542     0093  3020               	movlw	32
  6543     0094  00B9               	movwf	vfpfcnvrt@c
  6544     0095                     l3557:
  6545                           
  6546                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1409:    done = convarg.sint 
      +                          < 0;
  6547     0095  1BB6               	btfsc	vfpfcnvrt@convarg+1,7
  6548     0096  2898               	goto	u1361
  6549     0097  289A               	goto	u1360
  6550     0098                     u1361:
  6551     0098  3001               	movlw	1
  6552     0099  289B               	goto	u1370
  6553     009A                     u1360:
  6554     009A  3000               	movlw	0
  6555     009B                     u1370:
  6556     009B  00B2               	movwf	vfpfcnvrt@done
  6557     009C                     l3559:
  6558                           
  6559                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1411:     dbuf[--c] = abs(con
      +                          varg.sint % 10) + '0';
  6560     009C  3001               	movlw	1
  6561     009D  02B9               	subwf	vfpfcnvrt@c,f
  6562     009E  0839               	movf	vfpfcnvrt@c,w
  6563     009F  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  6564     00A0  0086               	movwf	6
  6565     00A1  0187               	clrf	7
  6566     00A2  300A               	movlw	10
  6567     00A3  00A0               	movwf	___awmod@divisor
  6568     00A4  3000               	movlw	0
  6569     00A5  00A1               	movwf	___awmod@divisor+1
  6570     00A6  0836               	movf	vfpfcnvrt@convarg+1,w
  6571     00A7  00A3               	movwf	___awmod@dividend+1
  6572     00A8  0835               	movf	vfpfcnvrt@convarg,w
  6573     00A9  00A2               	movwf	___awmod@dividend
  6574     00AA  3182  2230  3180   	fcall	___awmod
  6575     00AD  0020               	movlb	0	; select bank0
  6576     00AE  0821               	movf	?___awmod+1,w
  6577     00AF  00A7               	movwf	abs@a+1
  6578     00B0  0820               	movf	?___awmod,w
  6579     00B1  00A6               	movwf	abs@a
  6580     00B2  3187  2752  3180   	fcall	_abs
  6581     00B5  0020               	movlb	0	; select bank0
  6582     00B6  0826               	movf	?_abs,w
  6583     00B7  3E30               	addlw	48
  6584     00B8  0081               	movwf	1
  6585     00B9                     l3561:
  6586                           
  6587                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1412:     convarg.sint /= 10;
  6588     00B9  300A               	movlw	10
  6589     00BA  00A0               	movwf	___awdiv@divisor
  6590     00BB  3000               	movlw	0
  6591     00BC  00A1               	movwf	___awdiv@divisor+1
  6592     00BD  0836               	movf	vfpfcnvrt@convarg+1,w
  6593     00BE  00A3               	movwf	___awdiv@dividend+1
  6594     00BF  0835               	movf	vfpfcnvrt@convarg,w
  6595     00C0  00A2               	movwf	___awdiv@dividend
  6596     00C1  3181  2128  3180   	fcall	___awdiv
  6597     00C4  0020               	movlb	0	; select bank0
  6598     00C5  0821               	movf	?___awdiv+1,w
  6599     00C6  00B6               	movwf	vfpfcnvrt@convarg+1
  6600     00C7  0820               	movf	?___awdiv,w
  6601     00C8  00B5               	movwf	vfpfcnvrt@convarg
  6602     00C9                     l3563:
  6603                           
  6604                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1416:    } while (convarg.sin
      +                          t != 0 && c != 0);
  6605     00C9  0835               	movf	vfpfcnvrt@convarg,w
  6606     00CA  0436               	iorwf	vfpfcnvrt@convarg+1,w
  6607     00CB  1903               	btfsc	3,2
  6608     00CC  28CE               	goto	u1381
  6609     00CD  28CF               	goto	u1380
  6610     00CE                     u1381:
  6611     00CE  28D4               	goto	l3567
  6612     00CF                     u1380:
  6613     00CF                     l3565:
  6614     00CF  0839               	movf	vfpfcnvrt@c,w
  6615     00D0  1D03               	btfss	3,2
  6616     00D1  28D3               	goto	u1391
  6617     00D2  28D4               	goto	u1390
  6618     00D3                     u1391:
  6619     00D3  289C               	goto	l3559
  6620     00D4                     u1390:
  6621     00D4                     l3567:
  6622                           
  6623                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1417:    if (c != 0 && done) 
      +                          {
  6624     00D4  0839               	movf	vfpfcnvrt@c,w
  6625     00D5  1903               	btfsc	3,2
  6626     00D6  28D8               	goto	u1401
  6627     00D7  28D9               	goto	u1400
  6628     00D8                     u1401:
  6629     00D8  28FC               	goto	l3577
  6630     00D9                     u1400:
  6631     00D9                     l3569:
  6632     00D9  0832               	movf	vfpfcnvrt@done,w
  6633     00DA  1903               	btfsc	3,2
  6634     00DB  28DD               	goto	u1411
  6635     00DC  28DE               	goto	u1410
  6636     00DD                     u1411:
  6637     00DD  28FC               	goto	l3577
  6638     00DE                     u1410:
  6639     00DE                     l3571:
  6640                           
  6641                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1418:     dbuf[--c] = '-';
  6642     00DE  3001               	movlw	1
  6643     00DF  02B9               	subwf	vfpfcnvrt@c,f
  6644     00E0  0839               	movf	vfpfcnvrt@c,w
  6645     00E1  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  6646     00E2  0086               	movwf	6
  6647     00E3  0187               	clrf	7
  6648     00E4  302D               	movlw	45
  6649     00E5  0081               	movwf	1
  6650     00E6  28FC               	goto	l3577
  6651     00E7                     l3573:
  6652                           
  6653                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1424:     fputc(dbuf[c++], fp
      +                          );
  6654     00E7  0839               	movf	vfpfcnvrt@c,w
  6655     00E8  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  6656     00E9  0086               	movwf	6
  6657     00EA  0187               	clrf	7
  6658     00EB  0801               	movf	1,w
  6659     00EC  00AE               	movwf	??_vfpfcnvrt
  6660     00ED  01AF               	clrf	??_vfpfcnvrt+1
  6661     00EE  082E               	movf	??_vfpfcnvrt,w
  6662     00EF  00A0               	movwf	fputc@c
  6663     00F0  082F               	movf	??_vfpfcnvrt+1,w
  6664     00F1  00A1               	movwf	fputc@c+1
  6665     00F2  082B               	movf	vfpfcnvrt@fp+1,w
  6666     00F3  00A3               	movwf	fputc@fp+1
  6667     00F4  082A               	movf	vfpfcnvrt@fp,w
  6668     00F5  00A2               	movwf	fputc@fp
  6669     00F6  3181  2184  3180   	fcall	_fputc
  6670     00F9                     l3575:
  6671     00F9  3001               	movlw	1
  6672     00FA  0020               	movlb	0	; select bank0
  6673     00FB  07B9               	addwf	vfpfcnvrt@c,f
  6674     00FC                     l3577:
  6675                           
  6676                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1423:    while (c != sizeof(d
      +                          buf)) {
  6677     00FC  3020               	movlw	32
  6678     00FD  0639               	xorwf	vfpfcnvrt@c,w
  6679     00FE  1D03               	btfss	3,2
  6680     00FF  2901               	goto	u1421
  6681     0100  2902               	goto	u1420
  6682     0101                     u1421:
  6683     0101  28E7               	goto	l3573
  6684     0102                     u1420:
  6685     0102  2927               	goto	l1637
  6686     0103                     l3579:
  6687                           
  6688                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
  6689     0103  0020               	movlb	0	; select bank0
  6690     0104  082C               	movf	vfpfcnvrt@fmt,w
  6691     0105  0086               	movwf	6
  6692     0106  0187               	clrf	7
  6693     0107  3001               	movlw	1
  6694     0108  0781               	addwf	1,f
  6695     0109  3141               	addfsr 1,1
  6696     010A  1803               	skipnc
  6697     010B  0A81               	incf	1,f
  6698     010C  2927               	goto	l1637
  6699     010D                     l3583:
  6700                           
  6701                           ;/opt/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
  6702     010D  082C               	movf	vfpfcnvrt@fmt,w
  6703     010E  0086               	movwf	6
  6704     010F  0187               	clrf	7
  6705     0110  3F40               	moviw [0]fsr1
  6706     0111  00AE               	movwf	??_vfpfcnvrt
  6707     0112  3F41               	moviw [1]fsr1
  6708     0113  00AF               	movwf	??_vfpfcnvrt+1
  6709     0114  082E               	movf	??_vfpfcnvrt,w
  6710     0115  0084               	movwf	4
  6711     0116  082F               	movf	??_vfpfcnvrt+1,w
  6712     0117  0085               	movwf	5
  6713     0118  0800               	movf	0,w	;code access
  6714     0119  00B0               	movwf	??_vfpfcnvrt+2
  6715     011A  01B1               	clrf	??_vfpfcnvrt+3
  6716     011B  0830               	movf	??_vfpfcnvrt+2,w
  6717     011C  00A0               	movwf	fputc@c
  6718     011D  0831               	movf	??_vfpfcnvrt+3,w
  6719     011E  00A1               	movwf	fputc@c+1
  6720     011F  082B               	movf	vfpfcnvrt@fp+1,w
  6721     0120  00A3               	movwf	fputc@fp+1
  6722     0121  082A               	movf	vfpfcnvrt@fp,w
  6723     0122  00A2               	movwf	fputc@fp
  6724     0123  3181  2184  3180   	fcall	_fputc
  6725     0126  2903               	goto	l3579
  6726     0127                     l1637:
  6727     0127  0008               	return
  6728     0128                     __end_of_vfpfcnvrt:
  6729                           
  6730                           	psect	text4
  6731     0184                     __ptext4:	
  6732 ;; *************** function _fputc *****************
  6733 ;; Defined at:
  6734 ;;		line 8 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/nf_fputc.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  c               2    0[BANK0 ] int 
  6737 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  6738 ;;		 -> sprintf@f(11), 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;		None
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  2    0[BANK0 ] int 
  6743 ;; Registers used:
  6744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6750 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6752 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6753 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6754 ;;Total ram usage:        9 bytes
  6755 ;; Hardware stack levels used: 1
  6756 ;; Hardware stack levels required when called: 8
  6757 ;; This function calls:
  6758 ;;		_putch
  6759 ;; This function is called by:
  6760 ;;		_vfpfcnvrt
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764     0184                     _fputc:	
  6765                           ;psect for function _fputc
  6766                           
  6767     0184                     l3337:	
  6768                           ;incstack = 0
  6769                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6770                           
  6771     0184  0020               	movlb	0	; select bank0
  6772     0185  0822               	movf	fputc@fp,w
  6773     0186  0423               	iorwf	fputc@fp+1,w
  6774     0187  1903               	btfsc	3,2
  6775     0188  298A               	goto	u1241
  6776     0189  298B               	goto	u1240
  6777     018A                     u1241:
  6778     018A  2991               	goto	l3341
  6779     018B                     u1240:
  6780     018B                     l3339:
  6781     018B  0822               	movf	fputc@fp,w
  6782     018C  0423               	iorwf	fputc@fp+1,w
  6783     018D  1D03               	btfss	3,2
  6784     018E  2990               	goto	u1251
  6785     018F  2991               	goto	u1250
  6786     0190                     u1251:
  6787     0190  2996               	goto	l3343
  6788     0191                     u1250:
  6789     0191                     l3341:
  6790     0191  0820               	movf	fputc@c,w
  6791     0192  3187  27FF  3181   	fcall	_putch
  6792     0195  29DC               	goto	l1662
  6793     0196                     l3343:
  6794     0196  0822               	movf	fputc@fp,w
  6795     0197  0086               	movwf	6
  6796     0198  0187               	clrf	7
  6797     0199  3149               	addfsr 1,9
  6798     019A  0016               	moviw fsr1++
  6799     019B  0401               	iorwf	1,w
  6800     019C  1903               	btfsc	3,2
  6801     019D  299F               	goto	u1261
  6802     019E  29A0               	goto	u1260
  6803     019F                     u1261:
  6804     019F  29BE               	goto	l3347
  6805     01A0                     u1260:
  6806     01A0                     l3345:
  6807     01A0  0822               	movf	fputc@fp,w
  6808     01A1  0086               	movwf	6
  6809     01A2  0187               	clrf	7
  6810     01A3  3149               	addfsr 1,9
  6811     01A4  3F40               	moviw [0]fsr1
  6812     01A5  00A4               	movwf	??_fputc
  6813     01A6  3F41               	moviw [1]fsr1
  6814     01A7  00A5               	movwf	??_fputc+1
  6815     01A8  0822               	movf	fputc@fp,w
  6816     01A9  0086               	movwf	6
  6817     01AA  0187               	clrf	7
  6818     01AB  3142               	addfsr 1,2
  6819     01AC  3F40               	moviw [0]fsr1
  6820     01AD  00A6               	movwf	??_fputc+2
  6821     01AE  3F41               	moviw [1]fsr1
  6822     01AF  00A7               	movwf	??_fputc+3
  6823     01B0  0827               	movf	??_fputc+3,w
  6824     01B1  3A80               	xorlw	128
  6825     01B2  00A8               	movwf	??_fputc+4
  6826     01B3  0825               	movf	??_fputc+1,w
  6827     01B4  3A80               	xorlw	128
  6828     01B5  0228               	subwf	??_fputc+4,w
  6829     01B6  1D03               	skipz
  6830     01B7  29BA               	goto	u1275
  6831     01B8  0824               	movf	??_fputc,w
  6832     01B9  0226               	subwf	??_fputc+2,w
  6833     01BA                     u1275:
  6834     01BA  1803               	skipnc
  6835     01BB  29BD               	goto	u1271
  6836     01BC  29BE               	goto	u1270
  6837     01BD                     u1271:
  6838     01BD  29DC               	goto	l1662
  6839     01BE                     u1270:
  6840     01BE                     l3347:
  6841     01BE  0020               	movlb	0	; select bank0
  6842     01BF  0822               	movf	fputc@fp,w
  6843     01C0  0086               	movwf	6
  6844     01C1  0187               	clrf	7
  6845     01C2  3142               	addfsr 1,2
  6846     01C3  0822               	movf	fputc@fp,w
  6847     01C4  0084               	movwf	4
  6848     01C5  0823               	movf	fputc@fp+1,w
  6849     01C6  0085               	movwf	5
  6850     01C7  3F00               	moviw [0]fsr0
  6851     01C8  00A4               	movwf	??_fputc
  6852     01C9  3F01               	moviw [1]fsr0
  6853     01CA  00A5               	movwf	??_fputc+1
  6854     01CB  3F40               	moviw [0]fsr1
  6855     01CC  0724               	addwf	??_fputc,w
  6856     01CD  0084               	movwf	4
  6857     01CE  3F41               	moviw [1]fsr1
  6858     01CF  3D25               	addwfc	??_fputc+1,w
  6859     01D0  0085               	movwf	5
  6860     01D1  0820               	movf	fputc@c,w
  6861     01D2  0080               	movwf	0
  6862     01D3                     l3349:
  6863     01D3  0822               	movf	fputc@fp,w
  6864     01D4  0086               	movwf	6
  6865     01D5  0187               	clrf	7
  6866     01D6  3142               	addfsr 1,2
  6867     01D7  3001               	movlw	1
  6868     01D8  0781               	addwf	1,f
  6869     01D9  3141               	addfsr 1,1
  6870     01DA  1803               	skipnc
  6871     01DB  0A81               	incf	1,f
  6872     01DC                     l1662:
  6873     01DC  0008               	return
  6874     01DD                     __end_of_fputc:
  6875                           
  6876                           	psect	text5
  6877     07FF                     __ptext5:	
  6878 ;; *************** function _putch *****************
  6879 ;; Defined at:
  6880 ;;		line 7 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/putch.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;  c               1    wreg     unsigned char 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  c               1    0[COMMON] unsigned char 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  1    wreg      void 
  6887 ;; Registers used:
  6888 ;;		wreg
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6898 ;;Total ram usage:        0 bytes
  6899 ;; Hardware stack levels used: 1
  6900 ;; Hardware stack levels required when called: 7
  6901 ;; This function calls:
  6902 ;;		Nothing
  6903 ;; This function is called by:
  6904 ;;		_fputc
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908     07FF                     _putch:	
  6909                           ;psect for function _putch
  6910                           
  6911     07FF                     l1673:	
  6912                           ;incstack = 0
  6913                           ; Regs used in _putch: [wreg]
  6914                           
  6915     07FF  0008               	return
  6916     0800                     __end_of_putch:
  6917                           
  6918                           	psect	text6
  6919     0752                     __ptext6:	
  6920 ;; *************** function _abs *****************
  6921 ;; Defined at:
  6922 ;;		line 1 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/abs.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;  a               2    6[BANK0 ] int 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;		None
  6927 ;; Return value:  Size  Location     Type
  6928 ;;                  2    6[BANK0 ] int 
  6929 ;; Registers used:
  6930 ;;		wreg, status,2, status,0
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6936 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;Total ram usage:        4 bytes
  6941 ;; Hardware stack levels used: 1
  6942 ;; Hardware stack levels required when called: 7
  6943 ;; This function calls:
  6944 ;;		Nothing
  6945 ;; This function is called by:
  6946 ;;		_vfpfcnvrt
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950     0752                     _abs:	
  6951                           ;psect for function _abs
  6952                           
  6953     0752                     l3353:	
  6954                           ;incstack = 0
  6955                           ; Regs used in _abs: [wreg+status,2+status,0]
  6956                           
  6957     0752  0020               	movlb	0	; select bank0
  6958     0753  1BA7               	btfsc	abs@a+1,7
  6959     0754  2F56               	goto	u1281
  6960     0755  2F57               	goto	u1280
  6961     0756                     u1281:
  6962     0756  2F58               	goto	l3357
  6963     0757                     u1280:
  6964     0757                     l3355:
  6965     0757  2F63               	goto	l1650
  6966     0758                     l3357:
  6967     0758  0926               	comf	abs@a,w
  6968     0759  00A8               	movwf	??_abs
  6969     075A  0927               	comf	abs@a+1,w
  6970     075B  00A9               	movwf	??_abs+1
  6971     075C  0AA8               	incf	??_abs,f
  6972     075D  1903               	skipnz
  6973     075E  0AA9               	incf	??_abs+1,f
  6974     075F  0828               	movf	??_abs,w
  6975     0760  00A6               	movwf	?_abs
  6976     0761  0829               	movf	??_abs+1,w
  6977     0762  00A7               	movwf	?_abs+1
  6978     0763                     l1650:
  6979     0763  0008               	return
  6980     0764                     __end_of_abs:
  6981                           
  6982                           	psect	text7
  6983     0230                     __ptext7:	
  6984 ;; *************** function ___awmod *****************
  6985 ;; Defined at:
  6986 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/awmod.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  divisor         2    0[BANK0 ] int 
  6989 ;;  dividend        2    2[BANK0 ] int 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  sign            1    5[BANK0 ] unsigned char 
  6992 ;;  counter         1    4[BANK0 ] unsigned char 
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  2    0[BANK0 ] int 
  6995 ;; Registers used:
  6996 ;;		wreg, status,2, status,0
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7002 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;Total ram usage:        6 bytes
  7007 ;; Hardware stack levels used: 1
  7008 ;; Hardware stack levels required when called: 7
  7009 ;; This function calls:
  7010 ;;		Nothing
  7011 ;; This function is called by:
  7012 ;;		_vfpfcnvrt
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016     0230                     ___awmod:	
  7017                           ;psect for function ___awmod
  7018                           
  7019     0230                     l3299:	
  7020                           ;incstack = 0
  7021                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7022                           
  7023     0230  0020               	movlb	0	; select bank0
  7024     0231  01A5               	clrf	___awmod@sign
  7025     0232                     l3301:
  7026     0232  1FA3               	btfss	___awmod@dividend+1,7
  7027     0233  2A35               	goto	u1151
  7028     0234  2A36               	goto	u1150
  7029     0235                     u1151:
  7030     0235  2A3D               	goto	l3307
  7031     0236                     u1150:
  7032     0236                     l3303:
  7033     0236  09A2               	comf	___awmod@dividend,f
  7034     0237  09A3               	comf	___awmod@dividend+1,f
  7035     0238  0AA2               	incf	___awmod@dividend,f
  7036     0239  1903               	skipnz
  7037     023A  0AA3               	incf	___awmod@dividend+1,f
  7038     023B                     l3305:
  7039     023B  3001               	movlw	1
  7040     023C  00A5               	movwf	___awmod@sign
  7041     023D                     l3307:
  7042     023D  1FA1               	btfss	___awmod@divisor+1,7
  7043     023E  2A40               	goto	u1161
  7044     023F  2A41               	goto	u1160
  7045     0240                     u1161:
  7046     0240  2A46               	goto	l3311
  7047     0241                     u1160:
  7048     0241                     l3309:
  7049     0241  09A0               	comf	___awmod@divisor,f
  7050     0242  09A1               	comf	___awmod@divisor+1,f
  7051     0243  0AA0               	incf	___awmod@divisor,f
  7052     0244  1903               	skipnz
  7053     0245  0AA1               	incf	___awmod@divisor+1,f
  7054     0246                     l3311:
  7055     0246  0820               	movf	___awmod@divisor,w
  7056     0247  0421               	iorwf	___awmod@divisor+1,w
  7057     0248  1903               	btfsc	3,2
  7058     0249  2A4B               	goto	u1171
  7059     024A  2A4C               	goto	u1170
  7060     024B                     u1171:
  7061     024B  2A73               	goto	l3329
  7062     024C                     u1170:
  7063     024C                     l3313:
  7064     024C  3001               	movlw	1
  7065     024D  00A4               	movwf	___awmod@counter
  7066     024E  2A56               	goto	l3319
  7067     024F                     l3315:
  7068     024F  3001               	movlw	1
  7069     0250                     u1185:
  7070     0250  35A0               	lslf	___awmod@divisor,f
  7071     0251  0DA1               	rlf	___awmod@divisor+1,f
  7072     0252  0B89               	decfsz	9,f
  7073     0253  2A50               	goto	u1185
  7074     0254                     l3317:
  7075     0254  3001               	movlw	1
  7076     0255  07A4               	addwf	___awmod@counter,f
  7077     0256                     l3319:
  7078     0256  1FA1               	btfss	___awmod@divisor+1,7
  7079     0257  2A59               	goto	u1191
  7080     0258  2A5A               	goto	u1190
  7081     0259                     u1191:
  7082     0259  2A4F               	goto	l3315
  7083     025A                     u1190:
  7084     025A                     l3321:
  7085     025A  0821               	movf	___awmod@divisor+1,w
  7086     025B  0223               	subwf	___awmod@dividend+1,w
  7087     025C  1D03               	skipz
  7088     025D  2A60               	goto	u1205
  7089     025E  0820               	movf	___awmod@divisor,w
  7090     025F  0222               	subwf	___awmod@dividend,w
  7091     0260                     u1205:
  7092     0260  1C03               	skipc
  7093     0261  2A63               	goto	u1201
  7094     0262  2A64               	goto	u1200
  7095     0263                     u1201:
  7096     0263  2A68               	goto	l3325
  7097     0264                     u1200:
  7098     0264                     l3323:
  7099     0264  0820               	movf	___awmod@divisor,w
  7100     0265  02A2               	subwf	___awmod@dividend,f
  7101     0266  0821               	movf	___awmod@divisor+1,w
  7102     0267  3BA3               	subwfb	___awmod@dividend+1,f
  7103     0268                     l3325:
  7104     0268  3001               	movlw	1
  7105     0269                     u1215:
  7106     0269  36A1               	lsrf	___awmod@divisor+1,f
  7107     026A  0CA0               	rrf	___awmod@divisor,f
  7108     026B  0B89               	decfsz	9,f
  7109     026C  2A69               	goto	u1215
  7110     026D                     l3327:
  7111     026D  3001               	movlw	1
  7112     026E  02A4               	subwf	___awmod@counter,f
  7113     026F  1D03               	btfss	3,2
  7114     0270  2A72               	goto	u1221
  7115     0271  2A73               	goto	u1220
  7116     0272                     u1221:
  7117     0272  2A5A               	goto	l3321
  7118     0273                     u1220:
  7119     0273                     l3329:
  7120     0273  0825               	movf	___awmod@sign,w
  7121     0274  1903               	btfsc	3,2
  7122     0275  2A77               	goto	u1231
  7123     0276  2A78               	goto	u1230
  7124     0277                     u1231:
  7125     0277  2A7D               	goto	l3333
  7126     0278                     u1230:
  7127     0278                     l3331:
  7128     0278  09A2               	comf	___awmod@dividend,f
  7129     0279  09A3               	comf	___awmod@dividend+1,f
  7130     027A  0AA2               	incf	___awmod@dividend,f
  7131     027B  1903               	skipnz
  7132     027C  0AA3               	incf	___awmod@dividend+1,f
  7133     027D                     l3333:
  7134     027D  0823               	movf	___awmod@dividend+1,w
  7135     027E  00A1               	movwf	?___awmod+1
  7136     027F  0822               	movf	___awmod@dividend,w
  7137     0280  00A0               	movwf	?___awmod
  7138     0281                     l1302:
  7139     0281  0008               	return
  7140     0282                     __end_of___awmod:
  7141                           
  7142                           	psect	text8
  7143     0128                     __ptext8:	
  7144 ;; *************** function ___awdiv *****************
  7145 ;; Defined at:
  7146 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/awdiv.c"
  7147 ;; Parameters:    Size  Location     Type
  7148 ;;  divisor         2    0[BANK0 ] int 
  7149 ;;  dividend        2    2[BANK0 ] int 
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;  quotient        2    6[BANK0 ] int 
  7152 ;;  sign            1    5[BANK0 ] unsigned char 
  7153 ;;  counter         1    4[BANK0 ] unsigned char 
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  2    0[BANK0 ] int 
  7156 ;; Registers used:
  7157 ;;		wreg, status,2, status,0
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7164 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;Total ram usage:        8 bytes
  7168 ;; Hardware stack levels used: 1
  7169 ;; Hardware stack levels required when called: 7
  7170 ;; This function calls:
  7171 ;;		Nothing
  7172 ;; This function is called by:
  7173 ;;		_vfpfcnvrt
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177     0128                     ___awdiv:	
  7178                           ;psect for function ___awdiv
  7179                           
  7180     0128                     l3255:	
  7181                           ;incstack = 0
  7182                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7183                           
  7184     0128  0020               	movlb	0	; select bank0
  7185     0129  01A5               	clrf	___awdiv@sign
  7186     012A                     l3257:
  7187     012A  1FA1               	btfss	___awdiv@divisor+1,7
  7188     012B  292D               	goto	u1051
  7189     012C  292E               	goto	u1050
  7190     012D                     u1051:
  7191     012D  2935               	goto	l3263
  7192     012E                     u1050:
  7193     012E                     l3259:
  7194     012E  09A0               	comf	___awdiv@divisor,f
  7195     012F  09A1               	comf	___awdiv@divisor+1,f
  7196     0130  0AA0               	incf	___awdiv@divisor,f
  7197     0131  1903               	skipnz
  7198     0132  0AA1               	incf	___awdiv@divisor+1,f
  7199     0133                     l3261:
  7200     0133  3001               	movlw	1
  7201     0134  00A5               	movwf	___awdiv@sign
  7202     0135                     l3263:
  7203     0135  1FA3               	btfss	___awdiv@dividend+1,7
  7204     0136  2938               	goto	u1061
  7205     0137  2939               	goto	u1060
  7206     0138                     u1061:
  7207     0138  2940               	goto	l3269
  7208     0139                     u1060:
  7209     0139                     l3265:
  7210     0139  09A2               	comf	___awdiv@dividend,f
  7211     013A  09A3               	comf	___awdiv@dividend+1,f
  7212     013B  0AA2               	incf	___awdiv@dividend,f
  7213     013C  1903               	skipnz
  7214     013D  0AA3               	incf	___awdiv@dividend+1,f
  7215     013E                     l3267:
  7216     013E  3001               	movlw	1
  7217     013F  06A5               	xorwf	___awdiv@sign,f
  7218     0140                     l3269:
  7219     0140  01A6               	clrf	___awdiv@quotient
  7220     0141  01A7               	clrf	___awdiv@quotient+1
  7221     0142                     l3271:
  7222     0142  0820               	movf	___awdiv@divisor,w
  7223     0143  0421               	iorwf	___awdiv@divisor+1,w
  7224     0144  1903               	btfsc	3,2
  7225     0145  2947               	goto	u1071
  7226     0146  2948               	goto	u1070
  7227     0147                     u1071:
  7228     0147  2975               	goto	l3291
  7229     0148                     u1070:
  7230     0148                     l3273:
  7231     0148  3001               	movlw	1
  7232     0149  00A4               	movwf	___awdiv@counter
  7233     014A  2952               	goto	l3279
  7234     014B                     l3275:
  7235     014B  3001               	movlw	1
  7236     014C                     u1085:
  7237     014C  35A0               	lslf	___awdiv@divisor,f
  7238     014D  0DA1               	rlf	___awdiv@divisor+1,f
  7239     014E  0B89               	decfsz	9,f
  7240     014F  294C               	goto	u1085
  7241     0150                     l3277:
  7242     0150  3001               	movlw	1
  7243     0151  07A4               	addwf	___awdiv@counter,f
  7244     0152                     l3279:
  7245     0152  1FA1               	btfss	___awdiv@divisor+1,7
  7246     0153  2955               	goto	u1091
  7247     0154  2956               	goto	u1090
  7248     0155                     u1091:
  7249     0155  294B               	goto	l3275
  7250     0156                     u1090:
  7251     0156                     l3281:
  7252     0156  3001               	movlw	1
  7253     0157                     u1105:
  7254     0157  35A6               	lslf	___awdiv@quotient,f
  7255     0158  0DA7               	rlf	___awdiv@quotient+1,f
  7256     0159  0B89               	decfsz	9,f
  7257     015A  2957               	goto	u1105
  7258     015B  0821               	movf	___awdiv@divisor+1,w
  7259     015C  0223               	subwf	___awdiv@dividend+1,w
  7260     015D  1D03               	skipz
  7261     015E  2961               	goto	u1115
  7262     015F  0820               	movf	___awdiv@divisor,w
  7263     0160  0222               	subwf	___awdiv@dividend,w
  7264     0161                     u1115:
  7265     0161  1C03               	skipc
  7266     0162  2964               	goto	u1111
  7267     0163  2965               	goto	u1110
  7268     0164                     u1111:
  7269     0164  296A               	goto	l3287
  7270     0165                     u1110:
  7271     0165                     l3283:
  7272     0165  0820               	movf	___awdiv@divisor,w
  7273     0166  02A2               	subwf	___awdiv@dividend,f
  7274     0167  0821               	movf	___awdiv@divisor+1,w
  7275     0168  3BA3               	subwfb	___awdiv@dividend+1,f
  7276     0169                     l3285:
  7277     0169  1426               	bsf	___awdiv@quotient,0
  7278     016A                     l3287:
  7279     016A  3001               	movlw	1
  7280     016B                     u1125:
  7281     016B  36A1               	lsrf	___awdiv@divisor+1,f
  7282     016C  0CA0               	rrf	___awdiv@divisor,f
  7283     016D  0B89               	decfsz	9,f
  7284     016E  296B               	goto	u1125
  7285     016F                     l3289:
  7286     016F  3001               	movlw	1
  7287     0170  02A4               	subwf	___awdiv@counter,f
  7288     0171  1D03               	btfss	3,2
  7289     0172  2974               	goto	u1131
  7290     0173  2975               	goto	u1130
  7291     0174                     u1131:
  7292     0174  2956               	goto	l3281
  7293     0175                     u1130:
  7294     0175                     l3291:
  7295     0175  0825               	movf	___awdiv@sign,w
  7296     0176  1903               	btfsc	3,2
  7297     0177  2979               	goto	u1141
  7298     0178  297A               	goto	u1140
  7299     0179                     u1141:
  7300     0179  297F               	goto	l3295
  7301     017A                     u1140:
  7302     017A                     l3293:
  7303     017A  09A6               	comf	___awdiv@quotient,f
  7304     017B  09A7               	comf	___awdiv@quotient+1,f
  7305     017C  0AA6               	incf	___awdiv@quotient,f
  7306     017D  1903               	skipnz
  7307     017E  0AA7               	incf	___awdiv@quotient+1,f
  7308     017F                     l3295:
  7309     017F  0827               	movf	___awdiv@quotient+1,w
  7310     0180  00A1               	movwf	?___awdiv+1
  7311     0181  0826               	movf	___awdiv@quotient,w
  7312     0182  00A0               	movwf	?___awdiv
  7313     0183                     l1289:
  7314     0183  0008               	return
  7315     0184                     __end_of___awdiv:
  7316                           
  7317                           	psect	text9
  7318     05F4                     __ptext9:	
  7319 ;; *************** function _lcd_writemessage *****************
  7320 ;; Defined at:
  7321 ;;		line 146 in file "seri_lcd.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  line            1    wreg     unsigned char 
  7324 ;;  column          1   22[BANK0 ] unsigned char 
  7325 ;;  message         1   23[BANK0 ] PTR const unsigned char 
  7326 ;;		 -> main@buffer(17), 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  line            1   24[BANK0 ] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;Total ram usage:        3 bytes
  7343 ;; Hardware stack levels used: 1
  7344 ;; Hardware stack levels required when called: 14
  7345 ;; This function calls:
  7346 ;;		_lcd_go
  7347 ;;		_lcd_writeletter
  7348 ;; This function is called by:
  7349 ;;		_main
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353     05F4                     _lcd_writemessage:	
  7354                           ;psect for function _lcd_writemessage
  7355                           
  7356                           
  7357                           ;incstack = 0
  7358                           ; Regs used in _lcd_writemessage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7359                           ;lcd_writemessage@line stored from wreg
  7360     05F4  0020               	movlb	0	; select bank0
  7361     05F5  00B8               	movwf	lcd_writemessage@line
  7362     05F6                     l3773:
  7363                           
  7364                           ;seri_lcd.c: 147:     lcd_go(line, column);
  7365     05F6  0836               	movf	lcd_writemessage@column,w
  7366     05F7  00B3               	movwf	lcd_go@column
  7367     05F8  0838               	movf	lcd_writemessage@line,w
  7368     05F9  3184  24FC  3185   	fcall	_lcd_go
  7369     05FC                     l3775:
  7370                           
  7371                           ;seri_lcd.c: 149:         lcd_writeletter(*message++);
  7372     05FC  0020               	movlb	0	; select bank0
  7373     05FD  0837               	movf	lcd_writemessage@message,w
  7374     05FE  0086               	movwf	6
  7375     05FF  0187               	clrf	7
  7376     0600  0801               	movf	1,w
  7377     0601  3184  2474  3185   	fcall	_lcd_writeletter
  7378     0604                     l3777:
  7379     0604  3001               	movlw	1
  7380     0605  0020               	movlb	0	; select bank0
  7381     0606  07B7               	addwf	lcd_writemessage@message,f
  7382     0607                     l3779:
  7383                           
  7384                           ;seri_lcd.c: 150:     } while (*message);
  7385     0607  0837               	movf	lcd_writemessage@message,w
  7386     0608  0086               	movwf	6
  7387     0609  0187               	clrf	7
  7388     060A  0801               	movf	1,w
  7389     060B  1D03               	btfss	3,2
  7390     060C  2E0E               	goto	u1481
  7391     060D  2E0F               	goto	u1480
  7392     060E                     u1481:
  7393     060E  2DFC               	goto	l3775
  7394     060F                     u1480:
  7395     060F                     l759:
  7396     060F  0008               	return
  7397     0610                     __end_of_lcd_writemessage:
  7398                           
  7399                           	psect	text10
  7400     0474                     __ptext10:	
  7401 ;; *************** function _lcd_writeletter *****************
  7402 ;; Defined at:
  7403 ;;		line 175 in file "seri_lcd.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  letter          1    wreg     unsigned char 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;  letter          1   18[BANK0 ] unsigned char 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      void 
  7410 ;; Registers used:
  7411 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;Total ram usage:        2 bytes
  7422 ;; Hardware stack levels used: 1
  7423 ;; Hardware stack levels required when called: 12
  7424 ;; This function calls:
  7425 ;;		_lcd_busy
  7426 ;;		_pcf8574_write_wEnable
  7427 ;; This function is called by:
  7428 ;;		_lcd_writemessage
  7429 ;;		_lcd_writemessage_cp
  7430 ;;		_lcd_specialcharacter
  7431 ;; This function uses a non-reentrant model
  7432 ;;
  7433                           
  7434     0474                     _lcd_writeletter:	
  7435                           ;psect for function _lcd_writeletter
  7436                           
  7437                           
  7438                           ;incstack = 0
  7439                           ; Regs used in _lcd_writeletter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7440                           ;lcd_writeletter@letter stored from wreg
  7441     0474  0020               	movlb	0	; select bank0
  7442     0475  00B2               	movwf	lcd_writeletter@letter
  7443     0476                     l3697:
  7444                           
  7445                           ;seri_lcd.c: 176:     lcd_busy();
  7446     0476  318F  27F1  3184   	fcall	_lcd_busy
  7447     0479                     l3699:
  7448                           
  7449                           ;seri_lcd.c: 177:     pcf_port.lcd.RS = 1;
  7450     0479  0020               	movlb	0	; select bank0
  7451     047A  146E               	bsf	_pcf_port,0
  7452     047B                     l3701:
  7453                           
  7454                           ;seri_lcd.c: 179:     pcf_port.port = (pcf_port.port & 0x0f) | (letter & 0xf0);
  7455     047B  30F0               	movlw	240
  7456     047C  0532               	andwf	lcd_writeletter@letter,w
  7457     047D  00B1               	movwf	??_lcd_writeletter
  7458     047E  086E               	movf	_pcf_port,w
  7459     047F  390F               	andlw	15
  7460     0480  0431               	iorwf	??_lcd_writeletter,w
  7461     0481  00EE               	movwf	_pcf_port
  7462     0482                     l3703:
  7463                           
  7464                           ;seri_lcd.c: 180:     pcf8574_write_wEnable();
  7465     0482  3186  26A6  3184   	fcall	_pcf8574_write_wEnable
  7466     0485                     l3705:
  7467                           
  7468                           ;seri_lcd.c: 181:     _delay((unsigned long)((200)*(32000000/4000000.0)));
  7469     0485  30E4               	movlw	228
  7470     0486                     u1887:
  7471     0486  3200               	nop2
  7472     0487  3200               	nop2
  7473     0488  0B89               	decfsz	9,f
  7474     0489  2C86               	goto	u1887
  7475     048A  3200               	nop2
  7476     048B  3200               	nop2
  7477     048C                     l3707:
  7478                           
  7479                           ;seri_lcd.c: 183:     pcf_port.port = (pcf_port.port & 0x0f) | (letter << 4);
  7480     048C  0020               	movlb	0	; select bank0
  7481     048D  0832               	movf	lcd_writeletter@letter,w
  7482     048E  00B1               	movwf	??_lcd_writeletter
  7483     048F  3004               	movlw	4
  7484     0490                     u1455:
  7485     0490  35B1               	lslf	??_lcd_writeletter,f
  7486     0491  0B89               	decfsz	9,f
  7487     0492  2C90               	goto	u1455
  7488     0493  086E               	movf	_pcf_port,w
  7489     0494  390F               	andlw	15
  7490     0495  0431               	iorwf	??_lcd_writeletter,w
  7491     0496  00EE               	movwf	_pcf_port
  7492     0497                     l3709:
  7493                           
  7494                           ;seri_lcd.c: 184:     pcf8574_write_wEnable();
  7495     0497  3186  26A6  3184   	fcall	_pcf8574_write_wEnable
  7496     049A                     l3711:
  7497                           
  7498                           ;seri_lcd.c: 185:     _delay((unsigned long)((200)*(32000000/4000000.0)));
  7499     049A  30E4               	movlw	228
  7500     049B                     u1897:
  7501     049B  3200               	nop2
  7502     049C  3200               	nop2
  7503     049D  0B89               	decfsz	9,f
  7504     049E  2C9B               	goto	u1897
  7505     049F  3200               	nop2
  7506     04A0  3200               	nop2
  7507     04A1                     l770:
  7508     04A1  0008               	return
  7509     04A2                     __end_of_lcd_writeletter:
  7510                           
  7511                           	psect	text11
  7512     04FC                     __ptext11:	
  7513 ;; *************** function _lcd_go *****************
  7514 ;; Defined at:
  7515 ;;		line 122 in file "seri_lcd.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  line            1    wreg     unsigned char 
  7518 ;;  column          1   19[BANK0 ] unsigned char 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;  line            1   20[BANK0 ] unsigned char 
  7521 ;;  temp            1   21[BANK0 ] unsigned char 
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  1    wreg      void 
  7524 ;; Registers used:
  7525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7531 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7532 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7534 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7535 ;;Total ram usage:        3 bytes
  7536 ;; Hardware stack levels used: 1
  7537 ;; Hardware stack levels required when called: 13
  7538 ;; This function calls:
  7539 ;;		_lcd_command
  7540 ;; This function is called by:
  7541 ;;		_lcd_writemessage
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545     04FC                     _lcd_go:	
  7546                           ;psect for function _lcd_go
  7547                           
  7548                           
  7549                           ;incstack = 0
  7550                           ; Regs used in _lcd_go: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7551                           ;lcd_go@line stored from wreg
  7552     04FC  0020               	movlb	0	; select bank0
  7553     04FD  00B4               	movwf	lcd_go@line
  7554     04FE                     l3679:
  7555                           
  7556                           ;seri_lcd.c: 123:     char temp;;seri_lcd.c: 124:     switch (line) {
  7557     04FE  2D0F               	goto	l3691
  7558     04FF                     l3681:
  7559                           
  7560                           ;seri_lcd.c: 126:             temp = column - 1 + 0x80;
  7561     04FF  0833               	movf	lcd_go@column,w
  7562     0500  3E7F               	addlw	127
  7563     0501  00B5               	movwf	lcd_go@temp
  7564                           
  7565                           ;seri_lcd.c: 127:             break;
  7566     0502  2D1D               	goto	l3693
  7567     0503                     l3683:
  7568                           
  7569                           ;seri_lcd.c: 129:             temp = column - 1 + 0xc0;
  7570     0503  0833               	movf	lcd_go@column,w
  7571     0504  3EBF               	addlw	191
  7572     0505  00B5               	movwf	lcd_go@temp
  7573                           
  7574                           ;seri_lcd.c: 130:             break;
  7575     0506  2D1D               	goto	l3693
  7576     0507                     l3685:
  7577                           
  7578                           ;seri_lcd.c: 132:             temp = (column - 1 + 0x94);
  7579     0507  0833               	movf	lcd_go@column,w
  7580     0508  3E93               	addlw	147
  7581     0509  00B5               	movwf	lcd_go@temp
  7582                           
  7583                           ;seri_lcd.c: 133:             break;
  7584     050A  2D1D               	goto	l3693
  7585     050B                     l3687:
  7586                           
  7587                           ;seri_lcd.c: 135:             temp = (column - 1 + 0xd4);
  7588     050B  0833               	movf	lcd_go@column,w
  7589     050C  3ED3               	addlw	211
  7590     050D  00B5               	movwf	lcd_go@temp
  7591                           
  7592                           ;seri_lcd.c: 136:             break;
  7593     050E  2D1D               	goto	l3693
  7594     050F                     l3691:
  7595     050F  0834               	movf	lcd_go@line,w
  7596                           
  7597                           ; Switch size 1, requested type "simple"
  7598                           ; Number of cases is 4, Range of values is 1 to 4
  7599                           ; switch strategies available:
  7600                           ; Name         Instructions Cycles
  7601                           ; simple_byte           13     7 (average)
  7602                           ; direct_byte           17     9 (fixed)
  7603                           ; jumptable            263     9 (fixed)
  7604                           ;	Chosen strategy is simple_byte
  7605     0510  3A01               	xorlw	1	; case 1
  7606     0511  1903               	skipnz
  7607     0512  2CFF               	goto	l3681
  7608     0513  3A03               	xorlw	3	; case 2
  7609     0514  1903               	skipnz
  7610     0515  2D03               	goto	l3683
  7611     0516  3A01               	xorlw	1	; case 3
  7612     0517  1903               	skipnz
  7613     0518  2D07               	goto	l3685
  7614     0519  3A07               	xorlw	7	; case 4
  7615     051A  1903               	skipnz
  7616     051B  2D0B               	goto	l3687
  7617     051C  2D1D               	goto	l3693
  7618     051D                     l3693:
  7619                           
  7620                           ;seri_lcd.c: 138:     lcd_command(temp);
  7621     051D  0835               	movf	lcd_go@temp,w
  7622     051E  3184  2442  3184   	fcall	_lcd_command
  7623     0521                     l3695:
  7624                           
  7625                           ;seri_lcd.c: 139:     _delay((unsigned long)((100)*(32000000/4000000.0)));
  7626     0521  30A0               	movlw	160
  7627     0522                     u1907:
  7628     0522  3200               	nop2
  7629     0523  0B89               	decfsz	9,f
  7630     0524  2D22               	goto	u1907
  7631     0525                     l754:
  7632     0525  0008               	return
  7633     0526                     __end_of_lcd_go:
  7634                           
  7635                           	psect	text12
  7636     0397                     __ptext12:	
  7637 ;; *************** function _lcd_start *****************
  7638 ;; Defined at:
  7639 ;;		line 96 in file "seri_lcd.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;		None
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;		None
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;Total ram usage:        1 bytes
  7658 ;; Hardware stack levels used: 1
  7659 ;; Hardware stack levels required when called: 14
  7660 ;; This function calls:
  7661 ;;		_lcd_command
  7662 ;;		_lcd_delete
  7663 ;;		_lcd_lighting_ac
  7664 ;;		_pcf8574_write
  7665 ;;		_pcf8574_write_wEnable
  7666 ;; This function is called by:
  7667 ;;		_main
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671     0397                     _lcd_start:	
  7672                           ;psect for function _lcd_start
  7673                           
  7674     0397                     l3727:	
  7675                           ;incstack = 0
  7676                           ; Regs used in _lcd_start: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7677                           
  7678                           
  7679                           ;seri_lcd.c: 98:     pcf8574_write(0x00);
  7680     0397  3000               	movlw	0
  7681     0398  3187  2783  3183   	fcall	_pcf8574_write
  7682     039B                     l3729:
  7683                           
  7684                           ;seri_lcd.c: 99:     pcf_port.port=0x00;
  7685     039B  0020               	movlb	0	; select bank0
  7686     039C  01EE               	clrf	_pcf_port
  7687     039D                     l3731:
  7688                           
  7689                           ;seri_lcd.c: 101:     pcf_port.port = 0x20 | (pcf_port.port & 0x0f);
  7690     039D  086E               	movf	_pcf_port,w
  7691     039E  390F               	andlw	15
  7692     039F  3820               	iorlw	32
  7693     03A0  00EE               	movwf	_pcf_port
  7694     03A1                     l3733:
  7695                           
  7696                           ;seri_lcd.c: 103:     pcf8574_write_wEnable();
  7697     03A1  3186  26A6  3183   	fcall	_pcf8574_write_wEnable
  7698                           
  7699                           ;seri_lcd.c: 104:     _delay((unsigned long)((5)*(32000000/4000.0)));
  7700     03A4  3034               	movlw	52
  7701     03A5  0020               	movlb	0	; select bank0
  7702     03A6  00B3               	movwf	??_lcd_start
  7703     03A7  30F1               	movlw	241
  7704     03A8                     u1917:
  7705     03A8  0B89               	decfsz	9,f
  7706     03A9  2BA8               	goto	u1917
  7707     03AA  0BB3               	decfsz	??_lcd_start,f
  7708     03AB  2BA8               	goto	u1917
  7709     03AC  3200               	nop2
  7710     03AD                     l3735:
  7711                           
  7712                           ;seri_lcd.c: 106:     lcd_command(0x28);
  7713     03AD  3028               	movlw	40
  7714     03AE  3184  2442  3183   	fcall	_lcd_command
  7715     03B1                     l3737:
  7716                           
  7717                           ;seri_lcd.c: 107:     _delay((unsigned long)((40)*(32000000/4000000.0)));
  7718     03B1  306A               	movlw	106
  7719     03B2                     u1927:
  7720     03B2  0B89               	decfsz	9,f
  7721     03B3  2BB2               	goto	u1927
  7722     03B4  3200               	nop2
  7723                           
  7724                           ;seri_lcd.c: 108:     lcd_command(0x0C);
  7725     03B5  300C               	movlw	12
  7726     03B6  3184  2442  3183   	fcall	_lcd_command
  7727     03B9                     l3739:
  7728                           
  7729                           ;seri_lcd.c: 109:     _delay((unsigned long)((40)*(32000000/4000000.0)));
  7730     03B9  306A               	movlw	106
  7731     03BA                     u1937:
  7732     03BA  0B89               	decfsz	9,f
  7733     03BB  2BBA               	goto	u1937
  7734     03BC  3200               	nop2
  7735     03BD                     l3741:
  7736                           
  7737                           ;seri_lcd.c: 110:     lcd_command(0x06);
  7738     03BD  3006               	movlw	6
  7739     03BE  3184  2442  3183   	fcall	_lcd_command
  7740                           
  7741                           ;seri_lcd.c: 111:     _delay((unsigned long)((2)*(32000000/4000.0)));
  7742     03C1  3015               	movlw	21
  7743     03C2  0020               	movlb	0	; select bank0
  7744     03C3  00B3               	movwf	??_lcd_start
  7745     03C4  30C6               	movlw	198
  7746     03C5                     u1947:
  7747     03C5  0B89               	decfsz	9,f
  7748     03C6  2BC5               	goto	u1947
  7749     03C7  0BB3               	decfsz	??_lcd_start,f
  7750     03C8  2BC5               	goto	u1947
  7751     03C9  0000               	nop
  7752     03CA                     l3743:
  7753                           
  7754                           ;seri_lcd.c: 113:     lcd_delete();
  7755     03CA  318F  27FB  3183   	fcall	_lcd_delete
  7756     03CD                     l3745:
  7757                           
  7758                           ;seri_lcd.c: 114:     lcd_lighting_ac();
  7759     03CD  3187  27DF  3183   	fcall	_lcd_lighting_ac
  7760     03D0                     l745:
  7761     03D0  0008               	return
  7762     03D1                     __end_of_lcd_start:
  7763                           
  7764                           	psect	text13
  7765     07DF                     __ptext13:	
  7766 ;; *************** function _lcd_lighting_ac *****************
  7767 ;; Defined at:
  7768 ;;		line 351 in file "seri_lcd.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;		None
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      void 
  7775 ;; Registers used:
  7776 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;Total ram usage:        0 bytes
  7787 ;; Hardware stack levels used: 1
  7788 ;; Hardware stack levels required when called: 12
  7789 ;; This function calls:
  7790 ;;		_pcf8574_write
  7791 ;; This function is called by:
  7792 ;;		_lcd_start
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796     07DF                     _lcd_lighting_ac:	
  7797                           ;psect for function _lcd_lighting_ac
  7798                           
  7799     07DF                     l3675:	
  7800                           ;incstack = 0
  7801                           ; Regs used in _lcd_lighting_ac: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7802                           
  7803                           
  7804                           ;seri_lcd.c: 353:     pcf_port.lcd.LED=1;
  7805     07DF  0020               	movlb	0	; select bank0
  7806     07E0  15EE               	bsf	_pcf_port,3
  7807     07E1                     l3677:
  7808                           
  7809                           ;seri_lcd.c: 354:     pcf8574_write(pcf_port.port);
  7810     07E1  086E               	movf	_pcf_port,w
  7811     07E2  3187  2783  3187   	fcall	_pcf8574_write
  7812     07E5                     l823:
  7813     07E5  0008               	return
  7814     07E6                     __end_of_lcd_lighting_ac:
  7815                           
  7816                           	psect	text14
  7817     0783                     __ptext14:	
  7818 ;; *************** function _pcf8574_write *****************
  7819 ;; Defined at:
  7820 ;;		line 28 in file "pcf8574.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;  data            1    wreg     unsigned char 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  data            1   14[BANK0 ] unsigned char 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      void 
  7827 ;; Registers used:
  7828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7837 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7838 ;;Total ram usage:        1 bytes
  7839 ;; Hardware stack levels used: 1
  7840 ;; Hardware stack levels required when called: 11
  7841 ;; This function calls:
  7842 ;;		_i2c_writeNBytes
  7843 ;; This function is called by:
  7844 ;;		_lcd_start
  7845 ;;		_lcd_lighting_ac
  7846 ;;		_lcd_lighting_close
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850     0783                     _pcf8574_write:	
  7851                           ;psect for function _pcf8574_write
  7852                           
  7853                           
  7854                           ;incstack = 0
  7855                           ; Regs used in _pcf8574_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7856                           ;pcf8574_write@data stored from wreg
  7857     0783  0020               	movlb	0	; select bank0
  7858     0784  00AE               	movwf	pcf8574_write@data
  7859     0785                     l3519:
  7860                           
  7861                           ;pcf8574.c: 40: i2c_writeNBytes(0x3F, &data, 1);
  7862     0785  302E               	movlw	(low (pcf8574_write@data| 0))& (0+255)
  7863     0786  00AA               	movwf	i2c_writeNBytes@data
  7864     0787  3001               	movlw	1
  7865     0788  00AB               	movwf	i2c_writeNBytes@len
  7866     0789  3000               	movlw	0
  7867     078A  00AC               	movwf	i2c_writeNBytes@len+1
  7868     078B  303F               	movlw	63
  7869     078C  3184  24A2  3187   	fcall	_i2c_writeNBytes
  7870     078F                     l717:
  7871     078F  0008               	return
  7872     0790                     __end_of_pcf8574_write:
  7873                           
  7874                           	psect	text15
  7875     0FFB                     __ptext15:	
  7876 ;; *************** function _lcd_delete *****************
  7877 ;; Defined at:
  7878 ;;		line 235 in file "seri_lcd.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;		None
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;		None
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  1    wreg      void 
  7885 ;; Registers used:
  7886 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7896 ;;Total ram usage:        0 bytes
  7897 ;; Hardware stack levels used: 1
  7898 ;; Hardware stack levels required when called: 13
  7899 ;; This function calls:
  7900 ;;		_lcd_command
  7901 ;; This function is called by:
  7902 ;;		_main
  7903 ;;		_lcd_start
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907     0FFB                     _lcd_delete:	
  7908                           ;psect for function _lcd_delete
  7909                           
  7910     0FFB                     l3673:	
  7911                           ;incstack = 0
  7912                           ; Regs used in _lcd_delete: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7913                           
  7914                           
  7915                           ;seri_lcd.c: 236:     lcd_command(0x01);
  7916     0FFB  3001               	movlw	1
  7917     0FFC  3184  2442  318F   	fcall	_lcd_command
  7918     0FFF                     l781:
  7919     0FFF  0008               	return
  7920     1000                     __end_of_lcd_delete:
  7921                           
  7922                           	psect	text16
  7923     0442                     __ptext16:	
  7924 ;; *************** function _lcd_command *****************
  7925 ;; Defined at:
  7926 ;;		line 192 in file "seri_lcd.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  command         1    wreg     unsigned char 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  command         1   18[BANK0 ] unsigned char 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  1    wreg      void 
  7933 ;; Registers used:
  7934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7942 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7943 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7944 ;;Total ram usage:        2 bytes
  7945 ;; Hardware stack levels used: 1
  7946 ;; Hardware stack levels required when called: 12
  7947 ;; This function calls:
  7948 ;;		_lcd_busy
  7949 ;;		_pcf8574_write_wEnable
  7950 ;; This function is called by:
  7951 ;;		_lcd_start
  7952 ;;		_lcd_go
  7953 ;;		_lcd_delete
  7954 ;;		_lcd_specialcharacter
  7955 ;;		_lcd_carriageret
  7956 ;;		_lcd_cursor_ac
  7957 ;;		_lcd_cursor_close
  7958 ;;		_lcd_display_ac
  7959 ;;		_lcd_display_close
  7960 ;;		_lcd_blink_ac
  7961 ;;		_lcd_blink_close
  7962 ;;		_lcd_left_record
  7963 ;;		_lcd_right_record
  7964 ;;		_lcd_line1
  7965 ;;		_lcd_line2
  7966 ;;		_lcd_line3
  7967 ;;		_lcd_line4
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971     0442                     _lcd_command:	
  7972                           ;psect for function _lcd_command
  7973                           
  7974                           
  7975                           ;incstack = 0
  7976                           ; Regs used in _lcd_command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7977                           ;lcd_command@command stored from wreg
  7978     0442  0020               	movlb	0	; select bank0
  7979     0443  00B2               	movwf	lcd_command@command
  7980     0444                     l3521:
  7981                           
  7982                           ;seri_lcd.c: 193:     lcd_busy();
  7983     0444  318F  27F1  3184   	fcall	_lcd_busy
  7984     0447                     l3523:
  7985                           
  7986                           ;seri_lcd.c: 194:     pcf_port.lcd.RS = 0;
  7987     0447  0020               	movlb	0	; select bank0
  7988     0448  106E               	bcf	_pcf_port,0
  7989     0449                     l3525:
  7990                           
  7991                           ;seri_lcd.c: 196:     pcf_port.port = (pcf_port.port & 0x0f) | (command & 0xf0);
  7992     0449  30F0               	movlw	240
  7993     044A  0532               	andwf	lcd_command@command,w
  7994     044B  00B1               	movwf	??_lcd_command
  7995     044C  086E               	movf	_pcf_port,w
  7996     044D  390F               	andlw	15
  7997     044E  0431               	iorwf	??_lcd_command,w
  7998     044F  00EE               	movwf	_pcf_port
  7999     0450                     l3527:
  8000                           
  8001                           ;seri_lcd.c: 197:     pcf8574_write_wEnable();
  8002     0450  3186  26A6  3184   	fcall	_pcf8574_write_wEnable
  8003     0453                     l3529:
  8004                           
  8005                           ;seri_lcd.c: 198:     _delay((unsigned long)((5)*(32000000/4000.0)));
  8006     0453  3034               	movlw	52
  8007     0454  0020               	movlb	0	; select bank0
  8008     0455  00B1               	movwf	??_lcd_command
  8009     0456  30F1               	movlw	241
  8010     0457                     u1957:
  8011     0457  0B89               	decfsz	9,f
  8012     0458  2C57               	goto	u1957
  8013     0459  0BB1               	decfsz	??_lcd_command,f
  8014     045A  2C57               	goto	u1957
  8015     045B  3200               	nop2
  8016     045C                     l3531:
  8017                           
  8018                           ;seri_lcd.c: 200:     pcf_port.port = (pcf_port.port & 0x0f) | (command << 4);
  8019     045C  0020               	movlb	0	; select bank0
  8020     045D  0832               	movf	lcd_command@command,w
  8021     045E  00B1               	movwf	??_lcd_command
  8022     045F  3004               	movlw	4
  8023     0460                     u1325:
  8024     0460  35B1               	lslf	??_lcd_command,f
  8025     0461  0B89               	decfsz	9,f
  8026     0462  2C60               	goto	u1325
  8027     0463  086E               	movf	_pcf_port,w
  8028     0464  390F               	andlw	15
  8029     0465  0431               	iorwf	??_lcd_command,w
  8030     0466  00EE               	movwf	_pcf_port
  8031     0467                     l3533:
  8032                           
  8033                           ;seri_lcd.c: 201:     pcf8574_write_wEnable();
  8034     0467  3186  26A6  3184   	fcall	_pcf8574_write_wEnable
  8035     046A                     l3535:
  8036                           
  8037                           ;seri_lcd.c: 202:     _delay((unsigned long)((5)*(32000000/4000.0)));
  8038     046A  3034               	movlw	52
  8039     046B  0020               	movlb	0	; select bank0
  8040     046C  00B1               	movwf	??_lcd_command
  8041     046D  30F1               	movlw	241
  8042     046E                     u1967:
  8043     046E  0B89               	decfsz	9,f
  8044     046F  2C6E               	goto	u1967
  8045     0470  0BB1               	decfsz	??_lcd_command,f
  8046     0471  2C6E               	goto	u1967
  8047     0472  3200               	nop2
  8048     0473                     l773:
  8049     0473  0008               	return
  8050     0474                     __end_of_lcd_command:
  8051                           
  8052                           	psect	text17
  8053     06A6                     __ptext17:	
  8054 ;; *************** function _pcf8574_write_wEnable *****************
  8055 ;; Defined at:
  8056 ;;		line 59 in file "seri_lcd.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;		None
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;  writeBuffer     3   14[BANK0 ] unsigned char [3]
  8061 ;;  timeOut         2    0        unsigned short 
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  1    wreg      void 
  8064 ;; Registers used:
  8065 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8072 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;Total ram usage:        3 bytes
  8076 ;; Hardware stack levels used: 1
  8077 ;; Hardware stack levels required when called: 11
  8078 ;; This function calls:
  8079 ;;		_i2c_writeNBytes
  8080 ;; This function is called by:
  8081 ;;		_lcd_start
  8082 ;;		_lcd_writeletter
  8083 ;;		_lcd_command
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087     06A6                     _pcf8574_write_wEnable:	
  8088                           ;psect for function _pcf8574_write_wEnable
  8089                           
  8090     06A6                     l3245:	
  8091                           ;incstack = 0
  8092                           ; Regs used in _pcf8574_write_wEnable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8093                           
  8094                           
  8095                           ;seri_lcd.c: 75:     uint8_t writeBuffer[3];;seri_lcd.c: 76:     uint16_t timeOut;;seri_
      +                          lcd.c: 78:     writeBuffer[0] = pcf_port.port;
  8096     06A6  0020               	movlb	0	; select bank0
  8097     06A7  086E               	movf	_pcf_port,w
  8098     06A8  00AE               	movwf	pcf8574_write_wEnable@writeBuffer
  8099     06A9                     l3247:
  8100                           
  8101                           ;seri_lcd.c: 79:     pcf_port.lcd.E = 1;
  8102     06A9  156E               	bsf	_pcf_port,2
  8103                           
  8104                           ;seri_lcd.c: 80:     writeBuffer[1] = pcf_port.port;
  8105     06AA  086E               	movf	_pcf_port,w
  8106     06AB  00AF               	movwf	pcf8574_write_wEnable@writeBuffer+1
  8107     06AC                     l3249:
  8108                           
  8109                           ;seri_lcd.c: 81:     pcf_port.lcd.E = 0;
  8110     06AC  116E               	bcf	_pcf_port,2
  8111                           
  8112                           ;seri_lcd.c: 82:     writeBuffer[2] = pcf_port.port;
  8113     06AD  086E               	movf	_pcf_port,w
  8114     06AE  00B0               	movwf	pcf8574_write_wEnable@writeBuffer+2
  8115     06AF                     l3251:
  8116                           
  8117                           ;seri_lcd.c: 84: i2c_writeNBytes(0x3F, writeBuffer, 3);
  8118     06AF  302E               	movlw	(low (pcf8574_write_wEnable@writeBuffer| 0))& (0+255)
  8119     06B0  00AA               	movwf	i2c_writeNBytes@data
  8120     06B1  3003               	movlw	3
  8121     06B2  00AB               	movwf	i2c_writeNBytes@len
  8122     06B3  3000               	movlw	0
  8123     06B4  00AC               	movwf	i2c_writeNBytes@len+1
  8124     06B5  303F               	movlw	63
  8125     06B6  3184  24A2  3186   	fcall	_i2c_writeNBytes
  8126     06B9                     l742:
  8127     06B9  0008               	return
  8128     06BA                     __end_of_pcf8574_write_wEnable:
  8129                           
  8130                           	psect	text18
  8131     04A2                     __ptext18:	
  8132 ;; *************** function _i2c_writeNBytes *****************
  8133 ;; Defined at:
  8134 ;;		line 71 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  address         1    wreg     unsigned char 
  8137 ;;  data            1   10[BANK0 ] PTR void 
  8138 ;;		 -> pcf8574_write_wEnable@writeBuffer(3), pcf8574_write@data(1), 
  8139 ;;  len             2   11[BANK0 ] unsigned int 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;  address         1   13[BANK0 ] unsigned char 
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  1    wreg      void 
  8144 ;; Registers used:
  8145 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8151 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;Total ram usage:        4 bytes
  8156 ;; Hardware stack levels used: 1
  8157 ;; Hardware stack levels required when called: 10
  8158 ;; This function calls:
  8159 ;;		_I2C1_Close
  8160 ;;		_I2C1_MasterWrite
  8161 ;;		_I2C1_Open
  8162 ;;		_I2C1_SetAddressNackCallback
  8163 ;;		_I2C1_SetBuffer
  8164 ;; This function is called by:
  8165 ;;		_pcf8574_write
  8166 ;;		_pcf8574_write_wEnable
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170     04A2                     _i2c_writeNBytes:	
  8171                           ;psect for function _i2c_writeNBytes
  8172                           
  8173                           
  8174                           ;incstack = 0
  8175                           ; Regs used in _i2c_writeNBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8176                           ;i2c_writeNBytes@address stored from wreg
  8177     04A2  0020               	movlb	0	; select bank0
  8178     04A3  00AD               	movwf	i2c_writeNBytes@address
  8179     04A4                     l3085:
  8180     04A4                     l3087:	
  8181                           ;mcc_generated_files/drivers/i2c_simple_master.c: 71: void i2c_writeNBytes(i2c1_address_
      +                          t address, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_master.c: 72: 
      +                          {;mcc_generated_files/drivers/i2c_simple_master.c: 73:     while(!I2C1_Open(address));
  8182                           
  8183     04A4  0020               	movlb	0	; select bank0
  8184     04A5  082D               	movf	i2c_writeNBytes@address,w
  8185     04A6  3182  22C8  3184   	fcall	_I2C1_Open
  8186     04A9  3A00               	xorlw	0
  8187     04AA  1903               	skipnz
  8188     04AB  2CAD               	goto	u1021
  8189     04AC  2CAE               	goto	u1020
  8190     04AD                     u1021:
  8191     04AD  2CA4               	goto	l3087
  8192     04AE                     u1020:
  8193     04AE                     l3089:
  8194                           
  8195                           ;mcc_generated_files/drivers/i2c_simple_master.c: 74:     I2C1_SetBuffer(data,len);
  8196     04AE  0020               	movlb	0	; select bank0
  8197     04AF  082A               	movf	i2c_writeNBytes@data,w
  8198     04B0  00A0               	movwf	I2C1_SetBuffer@buffer
  8199     04B1  01A1               	clrf	I2C1_SetBuffer@buffer+1
  8200     04B2  082C               	movf	i2c_writeNBytes@len+1,w
  8201     04B3  00A3               	movwf	I2C1_SetBuffer@bufferSize+1
  8202     04B4  082B               	movf	i2c_writeNBytes@len,w
  8203     04B5  00A2               	movwf	I2C1_SetBuffer@bufferSize
  8204     04B6  3186  2679  3184   	fcall	_I2C1_SetBuffer
  8205     04B9                     l3091:
  8206                           
  8207                           ;mcc_generated_files/drivers/i2c_simple_master.c: 75:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
  8208     04B9  3000               	movlw	0
  8209     04BA  0020               	movlb	0	; select bank0
  8210     04BB  00A6               	movwf	I2C1_SetAddressNackCallback@cb
  8211     04BC  00A7               	movwf	I2C1_SetAddressNackCallback@cb+1
  8212     04BD  3000               	movlw	0
  8213     04BE  00A8               	movwf	I2C1_SetAddressNackCallback@ptr
  8214     04BF  00A9               	movwf	I2C1_SetAddressNackCallback@ptr+1
  8215     04C0  3187  279D  3184   	fcall	_I2C1_SetAddressNackCallback
  8216     04C3                     l3093:
  8217                           
  8218                           ;mcc_generated_files/drivers/i2c_simple_master.c: 76:     I2C1_MasterWrite();
  8219     04C3  318F  27F6  3184   	fcall	_I2C1_MasterWrite
  8220     04C6                     l3095:	
  8221                           ;mcc_generated_files/drivers/i2c_simple_master.c: 77:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
  8222                           
  8223     04C6  3186  2610  3184   	fcall	_I2C1_Close
  8224     04C9  3A01               	xorlw	1
  8225     04CA  1903               	skipnz
  8226     04CB  2CCD               	goto	u1031
  8227     04CC  2CCE               	goto	u1030
  8228     04CD                     u1031:
  8229     04CD  2CC6               	goto	l3095
  8230     04CE                     u1030:
  8231     04CE                     l37:
  8232     04CE  0008               	return
  8233     04CF                     __end_of_i2c_writeNBytes:
  8234                           
  8235                           	psect	text19
  8236     0679                     __ptext19:	
  8237 ;; *************** function _I2C1_SetBuffer *****************
  8238 ;; Defined at:
  8239 ;;		line 264 in file "mcc_generated_files/i2c1_master.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;  buffer          2    0[BANK0 ] PTR void 
  8242 ;;		 -> pcf8574_write_wEnable@writeBuffer(3), pcf8574_write@data(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@buffe
      +rBlock(4), 
  8243 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
  8244 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
  8245 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
  8246 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
  8247 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
  8248 ;;  bufferSize      2    2[BANK0 ] unsigned int 
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;		None
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  1    wreg      void 
  8253 ;; Registers used:
  8254 ;;		wreg
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8260 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;Total ram usage:        4 bytes
  8265 ;; Hardware stack levels used: 1
  8266 ;; Hardware stack levels required when called: 7
  8267 ;; This function calls:
  8268 ;;		Nothing
  8269 ;; This function is called by:
  8270 ;;		_i2c_writeNBytes
  8271 ;;		_i2c_write1ByteRegister
  8272 ;;		_i2c_read1ByteRegister
  8273 ;;		_i2c_read2ByteRegister
  8274 ;;		_i2c_write2ByteRegister
  8275 ;;		_i2c_readDataBlock
  8276 ;;		_i2c_readNBytes
  8277 ;;		_I2C1_Read1ByteRegister
  8278 ;;		_I2C1_Read2ByteRegister
  8279 ;;		_I2C1_Write1ByteRegister
  8280 ;;		_I2C1_Write2ByteRegister
  8281 ;;		_I2C1_WriteNBytes
  8282 ;;		_I2C1_ReadNBytes
  8283 ;;		_I2C1_ReadDataBlock
  8284 ;; This function uses a non-reentrant model
  8285 ;;
  8286                           
  8287     0679                     _I2C1_SetBuffer:	
  8288                           ;psect for function _I2C1_SetBuffer
  8289                           
  8290     0679                     l3013:	
  8291                           ;incstack = 0
  8292                           ; Regs used in _I2C1_SetBuffer: [wreg]
  8293                           
  8294                           
  8295                           ;mcc_generated_files/i2c1_master.c: 264: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 265: {;mcc_generated_files/i2c1_master.c: 266: 
      +                              if(I2C1_Status.bufferFree)
  8296     0679  0021               	movlb	1	; select bank1
  8297     067A  1DDD               	btfss	(_I2C1_Status^(0+128)+29),3
  8298     067B  2E7D               	goto	u981
  8299     067C  2E7E               	goto	u980
  8300     067D                     u981:
  8301     067D  2E8F               	goto	l335
  8302     067E                     u980:
  8303     067E                     l3015:
  8304                           
  8305                           ;mcc_generated_files/i2c1_master.c: 267:     {;mcc_generated_files/i2c1_master.c: 268:  
      +                                 I2C1_Status.data_ptr = buffer;
  8306     067E  0020               	movlb	0	; select bank0
  8307     067F  0821               	movf	I2C1_SetBuffer@buffer+1,w
  8308     0680  0021               	movlb	1	; select bank1
  8309     0681  00D8               	movwf	((_I2C1_Status+1)^(0+128)+23)
  8310     0682  0020               	movlb	0	; select bank0
  8311     0683  0820               	movf	I2C1_SetBuffer@buffer,w
  8312     0684  0021               	movlb	1	; select bank1
  8313     0685  00D7               	movwf	(_I2C1_Status^(0+128)+23)
  8314                           
  8315                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.data_length = bufferSize;
  8316     0686  0020               	movlb	0	; select bank0
  8317     0687  0823               	movf	I2C1_SetBuffer@bufferSize+1,w
  8318     0688  0021               	movlb	1	; select bank1
  8319     0689  00DA               	movwf	((_I2C1_Status+1)^(0+128)+25)
  8320     068A  0020               	movlb	0	; select bank0
  8321     068B  0822               	movf	I2C1_SetBuffer@bufferSize,w
  8322     068C  0021               	movlb	1	; select bank1
  8323     068D  00D9               	movwf	(_I2C1_Status^(0+128)+25)
  8324     068E                     l3017:
  8325                           
  8326                           ;mcc_generated_files/i2c1_master.c: 270:         I2C1_Status.bufferFree = 0;
  8327     068E  11DD               	bcf	(_I2C1_Status^(0+128)+29),3
  8328     068F                     l335:
  8329     068F  0008               	return
  8330     0690                     __end_of_I2C1_SetBuffer:
  8331                           
  8332                           	psect	text20
  8333     079D                     __ptext20:	
  8334 ;; *************** function _I2C1_SetAddressNackCallback *****************
  8335 ;; Defined at:
  8336 ;;		line 284 in file "mcc_generated_files/i2c1_master.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  cb              2    6[BANK0 ] PTR FTN(PTR void ,)enum 
  8339 ;;		 -> NULL(1), 
  8340 ;;  ptr             2    8[BANK0 ] PTR void 
  8341 ;;		 -> NULL(0), 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;		None
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  1    wreg      void 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;Total ram usage:        4 bytes
  8358 ;; Hardware stack levels used: 1
  8359 ;; Hardware stack levels required when called: 8
  8360 ;; This function calls:
  8361 ;;		_I2C1_SetCallback
  8362 ;; This function is called by:
  8363 ;;		_i2c_writeNBytes
  8364 ;;		_i2c_write1ByteRegister
  8365 ;;		_i2c_read1ByteRegister
  8366 ;;		_i2c_read2ByteRegister
  8367 ;;		_i2c_write2ByteRegister
  8368 ;;		_i2c_readDataBlock
  8369 ;;		_I2C1_Read1ByteRegister
  8370 ;;		_I2C1_Read2ByteRegister
  8371 ;;		_I2C1_Write1ByteRegister
  8372 ;;		_I2C1_Write2ByteRegister
  8373 ;;		_I2C1_WriteNBytes
  8374 ;;		_I2C1_ReadDataBlock
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378     079D                     _I2C1_SetAddressNackCallback:	
  8379                           ;psect for function _I2C1_SetAddressNackCallback
  8380                           
  8381     079D                     l3059:	
  8382                           ;incstack = 0
  8383                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  8384                           
  8385                           
  8386                           ;mcc_generated_files/i2c1_master.c: 284: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 285: {;mcc_generated_files/i2c1_mast
      +                          er.c: 286:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
  8387     079D  0020               	movlb	0	; select bank0
  8388     079E  0827               	movf	I2C1_SetAddressNackCallback@cb+1,w
  8389     079F  00A1               	movwf	I2C1_SetCallback@cb+1
  8390     07A0  0826               	movf	I2C1_SetAddressNackCallback@cb,w
  8391     07A1  00A0               	movwf	I2C1_SetCallback@cb
  8392     07A2  0828               	movf	I2C1_SetAddressNackCallback@ptr,w
  8393     07A3  00A2               	movwf	I2C1_SetCallback@ptr
  8394     07A4  3002               	movlw	2
  8395     07A5  3183  23D1  3187   	fcall	_I2C1_SetCallback
  8396     07A8                     l344:
  8397     07A8  0008               	return
  8398     07A9                     __end_of_I2C1_SetAddressNackCallback:
  8399                           
  8400                           	psect	text21
  8401     03D1                     __ptext21:	
  8402 ;; *************** function _I2C1_SetCallback *****************
  8403 ;; Defined at:
  8404 ;;		line 304 in file "mcc_generated_files/i2c1_master.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  idx             1    wreg     enum E12641
  8407 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  8408 ;;		 -> NULL(1), rdBlkRegCompleteHandler@i2c1_master_example$F180(1), wr2RegCompleteHandler@i2c1_master_example$F169(1),
      + wr1RegCompleteHandler@i2c1_master_example$F163(1), 
  8409 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F157(1), rd1RegCompleteHandler@i2c1_master_example$F146(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
  8410 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  8411 ;;  ptr             1    2[BANK0 ] PTR void 
  8412 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
  8413 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
  8414 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;  idx             1    5[BANK0 ] enum E12641
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1    wreg      void 
  8419 ;; Registers used:
  8420 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8426 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8430 ;;Total ram usage:        6 bytes
  8431 ;; Hardware stack levels used: 1
  8432 ;; Hardware stack levels required when called: 7
  8433 ;; This function calls:
  8434 ;;		Nothing
  8435 ;; This function is called by:
  8436 ;;		_I2C1_SetAddressNackCallback
  8437 ;;		_I2C1_SetWriteCollisionCallback
  8438 ;;		_I2C1_SetDataNackCallback
  8439 ;;		_I2C1_SetTimeoutCallback
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443     03D1                     _I2C1_SetCallback:	
  8444                           ;psect for function _I2C1_SetCallback
  8445                           
  8446                           
  8447                           ;incstack = 0
  8448                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  8449                           ;I2C1_SetCallback@idx stored from wreg
  8450     03D1  0020               	movlb	0	; select bank0
  8451     03D2  00A5               	movwf	I2C1_SetCallback@idx
  8452     03D3                     l3007:
  8453                           
  8454                           ;mcc_generated_files/i2c1_master.c: 304: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 305: {;mcc_gen
      +                          erated_files/i2c1_master.c: 306:     if(cb)
  8455     03D3  0820               	movf	I2C1_SetCallback@cb,w
  8456     03D4  0421               	iorwf	I2C1_SetCallback@cb+1,w
  8457     03D5  1903               	btfsc	3,2
  8458     03D6  2BD8               	goto	u971
  8459     03D7  2BD9               	goto	u970
  8460     03D8                     u971:
  8461     03D8  2BF2               	goto	l3011
  8462     03D9                     u970:
  8463     03D9                     l3009:
  8464                           
  8465                           ;mcc_generated_files/i2c1_master.c: 307:     {;mcc_generated_files/i2c1_master.c: 308:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
  8466     03D9  3525               	lslf	I2C1_SetCallback@idx,w
  8467     03DA  3EC0               	addlw	low _I2C1_Status
  8468     03DB  0086               	movwf	6
  8469     03DC  3000               	movlw	high _I2C1_Status
  8470     03DD  3D87               	addwfc	7,f
  8471     03DE  3525               	lslf	I2C1_SetCallback@idx,w
  8472     03DF  3000               	movlw	0
  8473     03E0  3D87               	addwfc	7,f
  8474     03E1  0820               	movf	I2C1_SetCallback@cb,w
  8475     03E2  3FC0               	movwi [0]fsr1
  8476     03E3  0821               	movf	I2C1_SetCallback@cb+1,w
  8477     03E4  3FC1               	movwi [1]fsr1
  8478                           
  8479                           ;mcc_generated_files/i2c1_master.c: 309:         I2C1_Status.callbackPayload[idx] = ptr;
  8480     03E5  30CC               	movlw	low (_I2C1_Status+12)
  8481     03E6  00A3               	movwf	??_I2C1_SetCallback
  8482     03E7  3000               	movlw	high (_I2C1_Status+12)
  8483     03E8  00A4               	movwf	??_I2C1_SetCallback+1
  8484     03E9  0825               	movf	I2C1_SetCallback@idx,w
  8485     03EA  0723               	addwf	??_I2C1_SetCallback,w
  8486     03EB  0086               	movwf	6
  8487     03EC  3000               	movlw	0
  8488     03ED  3D24               	addwfc	??_I2C1_SetCallback+1,w
  8489     03EE  0087               	movwf	7
  8490     03EF  0822               	movf	I2C1_SetCallback@ptr,w
  8491     03F0  0081               	movwf	1
  8492                           
  8493                           ;mcc_generated_files/i2c1_master.c: 310:     }
  8494     03F1  2C09               	goto	l358
  8495     03F2                     l3011:
  8496                           
  8497                           ;mcc_generated_files/i2c1_master.c: 312:     {;mcc_generated_files/i2c1_master.c: 313:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
  8498     03F2  3525               	lslf	I2C1_SetCallback@idx,w
  8499     03F3  3EC0               	addlw	low _I2C1_Status
  8500     03F4  0086               	movwf	6
  8501     03F5  3000               	movlw	high _I2C1_Status
  8502     03F6  3D87               	addwfc	7,f
  8503     03F7  3525               	lslf	I2C1_SetCallback@idx,w
  8504     03F8  3000               	movlw	0
  8505     03F9  3D87               	addwfc	7,f
  8506     03FA  3090               	movlw	low (low _I2C1_CallbackReturnStop)
  8507     03FB  3FC0               	movwi [0]fsr1
  8508     03FC  3000               	movlw	high (low _I2C1_CallbackReturnStop)
  8509     03FD  3FC1               	movwi [1]fsr1
  8510                           
  8511                           ;mcc_generated_files/i2c1_master.c: 314:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
  8512     03FE  30CC               	movlw	low (_I2C1_Status+12)
  8513     03FF  00A3               	movwf	??_I2C1_SetCallback
  8514     0400  3000               	movlw	high (_I2C1_Status+12)
  8515     0401  00A4               	movwf	??_I2C1_SetCallback+1
  8516     0402  0825               	movf	I2C1_SetCallback@idx,w
  8517     0403  0723               	addwf	??_I2C1_SetCallback,w
  8518     0404  0086               	movwf	6
  8519     0405  3000               	movlw	0
  8520     0406  3D24               	addwfc	??_I2C1_SetCallback+1,w
  8521     0407  0087               	movwf	7
  8522     0408  0181               	clrf	1
  8523     0409                     l358:
  8524     0409  0008               	return
  8525     040A                     __end_of_I2C1_SetCallback:
  8526                           
  8527                           	psect	text22
  8528     02C8                     __ptext22:	
  8529 ;; *************** function _I2C1_Open *****************
  8530 ;; Defined at:
  8531 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  address         1    wreg     unsigned char 
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;  address         1    2[BANK0 ] unsigned char 
  8536 ;;  returnValue     1    3[BANK0 ] enum E358
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      enum E358
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0, pclath, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;Total ram usage:        2 bytes
  8551 ;; Hardware stack levels used: 1
  8552 ;; Hardware stack levels required when called: 8
  8553 ;; This function calls:
  8554 ;;		_I2C1_MasterClearIrq
  8555 ;;		_I2C1_MasterEnableIrq
  8556 ;;		_I2C1_MasterOpen
  8557 ;;		_I2C1_SetInterruptHandler
  8558 ;; This function is called by:
  8559 ;;		_i2c_writeNBytes
  8560 ;;		_i2c_write1ByteRegister
  8561 ;;		_i2c_read1ByteRegister
  8562 ;;		_i2c_read2ByteRegister
  8563 ;;		_i2c_write2ByteRegister
  8564 ;;		_i2c_readDataBlock
  8565 ;;		_i2c_readNBytes
  8566 ;;		_I2C1_Read1ByteRegister
  8567 ;;		_I2C1_Read2ByteRegister
  8568 ;;		_I2C1_Write1ByteRegister
  8569 ;;		_I2C1_Write2ByteRegister
  8570 ;;		_I2C1_WriteNBytes
  8571 ;;		_I2C1_ReadNBytes
  8572 ;;		_I2C1_ReadDataBlock
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576     02C8                     _I2C1_Open:	
  8577                           ;psect for function _I2C1_Open
  8578                           
  8579                           
  8580                           ;incstack = 0
  8581                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
  8582                           ;I2C1_Open@address stored from wreg
  8583     02C8  0020               	movlb	0	; select bank0
  8584     02C9  00A2               	movwf	I2C1_Open@address
  8585     02CA                     l3019:
  8586                           
  8587                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
  8588     02CA  3001               	movlw	1
  8589     02CB  00A3               	movwf	I2C1_Open@returnValue
  8590                           
  8591                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
  8592     02CC  0021               	movlb	1	; select bank1
  8593     02CD  195D               	btfsc	(_I2C1_Status^(0+128)+29),2
  8594     02CE  2AD0               	goto	u991
  8595     02CF  2AD1               	goto	u990
  8596     02D0                     u991:
  8597     02D0  2B0B               	goto	l311
  8598     02D1                     u990:
  8599     02D1                     l3021:
  8600                           
  8601                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
  8602     02D1  0020               	movlb	0	; select bank0
  8603     02D2  0822               	movf	I2C1_Open@address,w
  8604     02D3  0021               	movlb	1	; select bank1
  8605     02D4  00D6               	movwf	(_I2C1_Status^(0+128)+22)
  8606     02D5                     l3023:
  8607                           
  8608                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
  8609     02D5  10DD               	bcf	(_I2C1_Status^(0+128)+29),1
  8610     02D6                     l3025:
  8611                           
  8612                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
  8613     02D6  155D               	bsf	(_I2C1_Status^(0+128)+29),2
  8614     02D7                     l3027:
  8615                           
  8616                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
  8617     02D7  105D               	bcf	(_I2C1_Status^(0+128)+29),0
  8618     02D8                     l3029:
  8619                           
  8620                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
  8621     02D8  300E               	movlw	14
  8622     02D9  00DB               	movwf	(_I2C1_Status^(0+128)+27)
  8623     02DA                     l3031:
  8624                           
  8625                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
  8626     02DA  30F4               	movlw	244
  8627     02DB  00D4               	movwf	(_I2C1_Status^(0+128)+20)
  8628     02DC  3001               	movlw	1
  8629     02DD  00D5               	movwf	(_I2C1_Status^(0+128)+21)
  8630     02DE                     l3033:
  8631                           
  8632                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
  8633     02DE  15DD               	bsf	(_I2C1_Status^(0+128)+29),3
  8634                           
  8635                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
  8636     02DF  3090               	movlw	low _I2C1_CallbackReturnStop
  8637     02E0  00C0               	movwf	_I2C1_Status^(0+128)
  8638     02E1  300F               	movlw	high _I2C1_CallbackReturnStop
  8639     02E2  00C1               	movwf	(_I2C1_Status^(0+128)+1)
  8640     02E3                     l3035:
  8641                           
  8642                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
  8643     02E3  01CC               	clrf	(_I2C1_Status^(0+128)+12)
  8644     02E4                     l3037:
  8645                           
  8646                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
  8647     02E4  3090               	movlw	low _I2C1_CallbackReturnStop
  8648     02E5  00C2               	movwf	(_I2C1_Status^(0+128)+2)
  8649     02E6  300F               	movlw	high _I2C1_CallbackReturnStop
  8650     02E7  00C3               	movwf	(_I2C1_Status^(0+128)+3)
  8651                           
  8652                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
  8653     02E8  01CD               	clrf	(_I2C1_Status^(0+128)+13)
  8654     02E9                     l3039:
  8655                           
  8656                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
  8657     02E9  3090               	movlw	low _I2C1_CallbackReturnStop
  8658     02EA  00C4               	movwf	(_I2C1_Status^(0+128)+4)
  8659     02EB  300F               	movlw	high _I2C1_CallbackReturnStop
  8660     02EC  00C5               	movwf	(_I2C1_Status^(0+128)+5)
  8661     02ED                     l3041:
  8662                           
  8663                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
  8664     02ED  01CE               	clrf	(_I2C1_Status^(0+128)+14)
  8665                           
  8666                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
  8667     02EE  3090               	movlw	low _I2C1_CallbackReturnStop
  8668     02EF  00C6               	movwf	(_I2C1_Status^(0+128)+6)
  8669     02F0  300F               	movlw	high _I2C1_CallbackReturnStop
  8670     02F1  00C7               	movwf	(_I2C1_Status^(0+128)+7)
  8671     02F2                     l3043:
  8672                           
  8673                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
  8674     02F2  01CF               	clrf	(_I2C1_Status^(0+128)+15)
  8675     02F3                     l3045:
  8676                           
  8677                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
  8678     02F3  3002               	movlw	low _I2C1_CallbackReturnReset
  8679     02F4  00C8               	movwf	(_I2C1_Status^(0+128)+8)
  8680     02F5  3000               	movlw	high _I2C1_CallbackReturnReset
  8681     02F6  00C9               	movwf	(_I2C1_Status^(0+128)+9)
  8682                           
  8683                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
  8684     02F7  01D0               	clrf	(_I2C1_Status^(0+128)+16)
  8685     02F8                     l3047:
  8686                           
  8687                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_SetInterruptHandler(I2C1_MasterIsr
      +                          );
  8688     02F8  30BB               	movlw	low _I2C1_MasterIsr
  8689     02F9  0020               	movlb	0	; select bank0
  8690     02FA  00A0               	movwf	I2C1_SetInterruptHandler@InterruptHandler
  8691     02FB  300F               	movlw	high _I2C1_MasterIsr
  8692     02FC  00A1               	movwf	I2C1_SetInterruptHandler@InterruptHandler+1
  8693     02FD  3187  27F3  3182   	fcall	_I2C1_SetInterruptHandler
  8694     0300                     l3049:
  8695                           
  8696                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterClearIrq();
  8697     0300  318F  27A4  3182   	fcall	_I2C1_MasterClearIrq
  8698     0303                     l3051:
  8699                           
  8700                           ;mcc_generated_files/i2c1_master.c: 204:         I2C1_MasterOpen();
  8701     0303  3187  2790  3182   	fcall	_I2C1_MasterOpen
  8702     0306                     l3053:
  8703                           
  8704                           ;mcc_generated_files/i2c1_master.c: 205:         I2C1_MasterEnableIrq();
  8705     0306  318F  27B0  3182   	fcall	_I2C1_MasterEnableIrq
  8706     0309                     l3055:
  8707                           
  8708                           ;mcc_generated_files/i2c1_master.c: 206:         returnValue = I2C1_NOERR;
  8709     0309  0020               	movlb	0	; select bank0
  8710     030A  01A3               	clrf	I2C1_Open@returnValue
  8711     030B                     l311:	
  8712                           ;mcc_generated_files/i2c1_master.c: 207:     }
  8713                           
  8714                           
  8715                           ;mcc_generated_files/i2c1_master.c: 208:     return returnValue;
  8716     030B  0020               	movlb	0	; select bank0
  8717     030C  0823               	movf	I2C1_Open@returnValue,w
  8718     030D                     l312:
  8719     030D  0008               	return
  8720     030E                     __end_of_I2C1_Open:
  8721                           
  8722                           	psect	text23
  8723     07F3                     __ptext23:	
  8724 ;; *************** function _I2C1_SetInterruptHandler *****************
  8725 ;; Defined at:
  8726 ;;		line 299 in file "mcc_generated_files/i2c1_master.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8729 ;;		 -> I2C1_MasterIsr(1), 
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;		None
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      void 
  8734 ;; Registers used:
  8735 ;;		wreg
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8741 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;Total ram usage:        2 bytes
  8746 ;; Hardware stack levels used: 1
  8747 ;; Hardware stack levels required when called: 7
  8748 ;; This function calls:
  8749 ;;		Nothing
  8750 ;; This function is called by:
  8751 ;;		_I2C1_Open
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755     07F3                     _I2C1_SetInterruptHandler:	
  8756                           ;psect for function _I2C1_SetInterruptHandler
  8757                           
  8758     07F3                     l2969:	
  8759                           ;incstack = 0
  8760                           ; Regs used in _I2C1_SetInterruptHandler: [wreg]
  8761                           
  8762                           
  8763                           ;mcc_generated_files/i2c1_master.c: 299: void I2C1_SetInterruptHandler(void (* Interrupt
      +                          Handler)(void));mcc_generated_files/i2c1_master.c: 300: {;mcc_generated_files/i2c1_maste
      +                          r.c: 301:     MSSP1_InterruptHandler = InterruptHandler;
  8764     07F3  0020               	movlb	0	; select bank0
  8765     07F4  0821               	movf	I2C1_SetInterruptHandler@InterruptHandler+1,w
  8766     07F5  00EB               	movwf	_MSSP1_InterruptHandler+1
  8767     07F6  0820               	movf	I2C1_SetInterruptHandler@InterruptHandler,w
  8768     07F7  00EA               	movwf	_MSSP1_InterruptHandler
  8769     07F8                     l353:
  8770     07F8  0008               	return
  8771     07F9                     __end_of_I2C1_SetInterruptHandler:
  8772                           
  8773                           	psect	text24
  8774     0790                     __ptext24:	
  8775 ;; *************** function _I2C1_MasterOpen *****************
  8776 ;; Defined at:
  8777 ;;		line 544 in file "mcc_generated_files/i2c1_master.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;		None
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;		None
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  1    wreg      _Bool 
  8784 ;; Registers used:
  8785 ;;		status,2
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;Total ram usage:        0 bytes
  8796 ;; Hardware stack levels used: 1
  8797 ;; Hardware stack levels required when called: 7
  8798 ;; This function calls:
  8799 ;;		Nothing
  8800 ;; This function is called by:
  8801 ;;		_I2C1_Open
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805     0790                     _I2C1_MasterOpen:	
  8806                           ;psect for function _I2C1_MasterOpen
  8807                           
  8808     0790                     l2973:	
  8809                           ;incstack = 0
  8810                           ; Regs used in _I2C1_MasterOpen: [status,2]
  8811                           
  8812                           
  8813                           ;mcc_generated_files/i2c1_master.c: 546:     if(!SSP1CON1bits.SSPEN)
  8814     0790  0023               	movlb	3	; select bank3
  8815     0791  1A90               	btfsc	16,5	;volatile
  8816     0792  2F94               	goto	u941
  8817     0793  2F95               	goto	u940
  8818     0794                     u941:
  8819     0794  2F9C               	goto	l477
  8820     0795                     u940:
  8821     0795                     l2975:
  8822                           
  8823                           ;mcc_generated_files/i2c1_master.c: 547:     {;mcc_generated_files/i2c1_master.c: 548:  
      +                                 SSP1STAT = 0x00;
  8824     0795  018F               	clrf	15	;volatile
  8825     0796                     l2977:
  8826                           
  8827                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON1 = 0x08;
  8828     0796  3008               	movlw	8
  8829     0797  0090               	movwf	16	;volatile
  8830                           
  8831                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1CON2 = 0x00;
  8832     0798  0191               	clrf	17	;volatile
  8833     0799                     l2979:
  8834                           
  8835                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1ADD = 0x4F;
  8836     0799  304F               	movlw	79
  8837     079A  008D               	movwf	13	;volatile
  8838     079B                     l2981:
  8839                           
  8840                           ;mcc_generated_files/i2c1_master.c: 552:         SSP1CON1bits.SSPEN = 1;
  8841     079B  1690               	bsf	16,5	;volatile
  8842     079C                     l477:
  8843     079C  0008               	return
  8844     079D                     __end_of_I2C1_MasterOpen:
  8845                           
  8846                           	psect	text25
  8847     0FB0                     __ptext25:	
  8848 ;; *************** function _I2C1_MasterEnableIrq *****************
  8849 ;; Defined at:
  8850 ;;		line 627 in file "mcc_generated_files/i2c1_master.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;		None
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;		None
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  1    wreg      void 
  8857 ;; Registers used:
  8858 ;;		None
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;Total ram usage:        0 bytes
  8869 ;; Hardware stack levels used: 1
  8870 ;; Hardware stack levels required when called: 7
  8871 ;; This function calls:
  8872 ;;		Nothing
  8873 ;; This function is called by:
  8874 ;;		_I2C1_Open
  8875 ;;		_I2C1_SetTimeOut
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879     0FB0                     _I2C1_MasterEnableIrq:	
  8880                           ;psect for function _I2C1_MasterEnableIrq
  8881                           
  8882     0FB0                     l2985:	
  8883                           ;incstack = 0
  8884                           ; Regs used in _I2C1_MasterEnableIrq: []
  8885                           
  8886                           
  8887                           ;mcc_generated_files/i2c1_master.c: 629:     PIE3bits.SSP1IE = 1;
  8888     0FB0  002E               	movlb	14	; select bank14
  8889     0FB1  1419               	bsf	25,0	;volatile
  8890     0FB2                     l519:
  8891     0FB2  0008               	return
  8892     0FB3                     __end_of_I2C1_MasterEnableIrq:
  8893                           
  8894                           	psect	text26
  8895     0FF6                     __ptext26:	
  8896 ;; *************** function _I2C1_MasterWrite *****************
  8897 ;; Defined at:
  8898 ;;		line 252 in file "mcc_generated_files/i2c1_master.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;		None
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;		None
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      enum E358
  8905 ;; Registers used:
  8906 ;;		wreg, status,2, status,0, pclath, cstack
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;Total ram usage:        0 bytes
  8917 ;; Hardware stack levels used: 1
  8918 ;; Hardware stack levels required when called: 9
  8919 ;; This function calls:
  8920 ;;		_I2C1_MasterOperation
  8921 ;; This function is called by:
  8922 ;;		_i2c_writeNBytes
  8923 ;;		_i2c_write1ByteRegister
  8924 ;;		_i2c_read1ByteRegister
  8925 ;;		_i2c_read2ByteRegister
  8926 ;;		_i2c_write2ByteRegister
  8927 ;;		_i2c_readDataBlock
  8928 ;;		_I2C1_Read1ByteRegister
  8929 ;;		_I2C1_Read2ByteRegister
  8930 ;;		_I2C1_Write1ByteRegister
  8931 ;;		_I2C1_Write2ByteRegister
  8932 ;;		_I2C1_WriteNBytes
  8933 ;;		_I2C1_ReadDataBlock
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937     0FF6                     _I2C1_MasterWrite:	
  8938                           ;psect for function _I2C1_MasterWrite
  8939                           
  8940     0FF6                     l3061:	
  8941                           ;incstack = 0
  8942                           ; Regs used in _I2C1_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
  8943                           
  8944                           
  8945                           ;mcc_generated_files/i2c1_master.c: 254:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
  8946     0FF6  3000               	movlw	0
  8947     0FF7  3185  25D6  318F   	fcall	_I2C1_MasterOperation
  8948     0FFA                     l328:
  8949     0FFA  0008               	return
  8950     0FFB                     __end_of_I2C1_MasterWrite:
  8951                           
  8952                           	psect	text27
  8953     05D6                     __ptext27:	
  8954 ;; *************** function _I2C1_MasterOperation *****************
  8955 ;; Defined at:
  8956 ;;		line 226 in file "mcc_generated_files/i2c1_master.c"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;  read            1    wreg     _Bool 
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;  read            1    0[BANK0 ] _Bool 
  8961 ;;  returnValue     1    1[BANK0 ] enum E358
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      enum E358
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0, pclath, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8974 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8975 ;;Total ram usage:        2 bytes
  8976 ;; Hardware stack levels used: 1
  8977 ;; Hardware stack levels required when called: 8
  8978 ;; This function calls:
  8979 ;;		_I2C1_MasterStart
  8980 ;; This function is called by:
  8981 ;;		_I2C1_MasterWrite
  8982 ;;		_I2C1_MasterRead
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986     05D6                     _I2C1_MasterOperation:	
  8987                           ;psect for function _I2C1_MasterOperation
  8988                           
  8989                           
  8990                           ;incstack = 0
  8991                           ; Regs used in _I2C1_MasterOperation: [wreg+status,2+status,0+pclath+cstack]
  8992                           ;I2C1_MasterOperation@read stored from wreg
  8993     05D6  0020               	movlb	0	; select bank0
  8994     05D7  00A0               	movwf	I2C1_MasterOperation@read
  8995     05D8                     l2991:
  8996                           
  8997                           ;mcc_generated_files/i2c1_master.c: 226: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 227: {;mcc_generated_files/i2c1_master.c: 228:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
  8998     05D8  3001               	movlw	1
  8999     05D9  00A1               	movwf	I2C1_MasterOperation@returnValue
  9000                           
  9001                           ;mcc_generated_files/i2c1_master.c: 229:     if(!I2C1_Status.busy)
  9002     05DA  0021               	movlb	1	; select bank1
  9003     05DB  18DD               	btfsc	(_I2C1_Status^(0+128)+29),1
  9004     05DC  2DDE               	goto	u951
  9005     05DD  2DDF               	goto	u950
  9006     05DE                     u951:
  9007     05DE  2DF1               	goto	l3003
  9008     05DF                     u950:
  9009     05DF                     l2993:
  9010                           
  9011                           ;mcc_generated_files/i2c1_master.c: 230:     {;mcc_generated_files/i2c1_master.c: 231:  
      +                                 I2C1_Status.busy = 1;
  9012     05DF  14DD               	bsf	(_I2C1_Status^(0+128)+29),1
  9013     05E0                     l2995:
  9014                           
  9015                           ;mcc_generated_files/i2c1_master.c: 232:         returnValue = I2C1_NOERR;
  9016     05E0  0020               	movlb	0	; select bank0
  9017     05E1  01A1               	clrf	I2C1_MasterOperation@returnValue
  9018     05E2                     l2997:
  9019                           
  9020                           ;mcc_generated_files/i2c1_master.c: 234:         if(read)
  9021     05E2  0820               	movf	I2C1_MasterOperation@read,w
  9022     05E3  1903               	btfsc	3,2
  9023     05E4  2DE6               	goto	u961
  9024     05E5  2DE7               	goto	u960
  9025     05E6                     u961:
  9026     05E6  2DEB               	goto	l320
  9027     05E7                     u960:
  9028     05E7                     l2999:
  9029                           
  9030                           ;mcc_generated_files/i2c1_master.c: 235:         {;mcc_generated_files/i2c1_master.c: 23
      +                          6:             I2C1_Status.state = I2C1_SEND_ADR_READ;
  9031     05E7  3001               	movlw	1
  9032     05E8  0021               	movlb	1	; select bank1
  9033     05E9  00DB               	movwf	(_I2C1_Status^(0+128)+27)
  9034                           
  9035                           ;mcc_generated_files/i2c1_master.c: 237:         }
  9036     05EA  2DEE               	goto	l3001
  9037     05EB                     l320:	
  9038                           ;mcc_generated_files/i2c1_master.c: 238:         else
  9039                           
  9040                           
  9041                           ;mcc_generated_files/i2c1_master.c: 239:         {;mcc_generated_files/i2c1_master.c: 24
      +                          0:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
  9042     05EB  3002               	movlw	2
  9043     05EC  0021               	movlb	1	; select bank1
  9044     05ED  00DB               	movwf	(_I2C1_Status^(0+128)+27)
  9045     05EE                     l3001:
  9046                           
  9047                           ;mcc_generated_files/i2c1_master.c: 242:         I2C1_MasterStart();
  9048     05EE  318F  27AD  3185   	fcall	_I2C1_MasterStart
  9049     05F1                     l3003:
  9050                           
  9051                           ;mcc_generated_files/i2c1_master.c: 244:     return returnValue;
  9052     05F1  0020               	movlb	0	; select bank0
  9053     05F2  0821               	movf	I2C1_MasterOperation@returnValue,w
  9054     05F3                     l322:
  9055     05F3  0008               	return
  9056     05F4                     __end_of_I2C1_MasterOperation:
  9057                           
  9058                           	psect	text28
  9059     0FAD                     __ptext28:	
  9060 ;; *************** function _I2C1_MasterStart *****************
  9061 ;; Defined at:
  9062 ;;		line 589 in file "mcc_generated_files/i2c1_master.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;		None
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;		None
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      void 
  9069 ;; Registers used:
  9070 ;;		None
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;Total ram usage:        0 bytes
  9081 ;; Hardware stack levels used: 1
  9082 ;; Hardware stack levels required when called: 7
  9083 ;; This function calls:
  9084 ;;		Nothing
  9085 ;; This function is called by:
  9086 ;;		_I2C1_MasterOperation
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090     0FAD                     _I2C1_MasterStart:	
  9091                           ;psect for function _I2C1_MasterStart
  9092                           
  9093     0FAD                     l2967:	
  9094                           ;incstack = 0
  9095                           ; Regs used in _I2C1_MasterStart: []
  9096                           
  9097                           
  9098                           ;mcc_generated_files/i2c1_master.c: 591:     SSP1CON2bits.SEN = 1;
  9099     0FAD  0023               	movlb	3	; select bank3
  9100     0FAE  1411               	bsf	17,0	;volatile
  9101     0FAF                     l498:
  9102     0FAF  0008               	return
  9103     0FB0                     __end_of_I2C1_MasterStart:
  9104                           
  9105                           	psect	text29
  9106     0610                     __ptext29:	
  9107 ;; *************** function _I2C1_Close *****************
  9108 ;; Defined at:
  9109 ;;		line 211 in file "mcc_generated_files/i2c1_master.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;		None
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;  returnValue     1    0[BANK0 ] enum E358
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      enum E358
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0, pclath, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9124 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9126 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;Total ram usage:        1 bytes
  9128 ;; Hardware stack levels used: 1
  9129 ;; Hardware stack levels required when called: 8
  9130 ;; This function calls:
  9131 ;;		_I2C1_MasterClearIrq
  9132 ;;		_I2C1_MasterClose
  9133 ;;		_I2C1_MasterDisableIrq
  9134 ;; This function is called by:
  9135 ;;		_i2c_writeNBytes
  9136 ;;		_i2c_write1ByteRegister
  9137 ;;		_i2c_read1ByteRegister
  9138 ;;		_i2c_read2ByteRegister
  9139 ;;		_i2c_write2ByteRegister
  9140 ;;		_i2c_readDataBlock
  9141 ;;		_i2c_readNBytes
  9142 ;;		_I2C1_Read1ByteRegister
  9143 ;;		_I2C1_Read2ByteRegister
  9144 ;;		_I2C1_Write1ByteRegister
  9145 ;;		_I2C1_Write2ByteRegister
  9146 ;;		_I2C1_WriteNBytes
  9147 ;;		_I2C1_ReadNBytes
  9148 ;;		_I2C1_ReadDataBlock
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152     0610                     _I2C1_Close:	
  9153                           ;psect for function _I2C1_Close
  9154                           
  9155     0610                     l3065:	
  9156                           ;incstack = 0
  9157                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
  9158                           
  9159                           
  9160                           ;mcc_generated_files/i2c1_master.c: 213:     i2c1_error_t returnValue = I2C1_BUSY;
  9161     0610  3001               	movlw	1
  9162     0611  0020               	movlb	0	; select bank0
  9163     0612  00A0               	movwf	I2C1_Close@returnValue
  9164                           
  9165                           ;mcc_generated_files/i2c1_master.c: 214:     if(!I2C1_Status.busy)
  9166     0613  0021               	movlb	1	; select bank1
  9167     0614  18DD               	btfsc	(_I2C1_Status^(0+128)+29),1
  9168     0615  2E17               	goto	u1001
  9169     0616  2E18               	goto	u1000
  9170     0617                     u1001:
  9171     0617  2E28               	goto	l3073
  9172     0618                     u1000:
  9173     0618                     l3067:
  9174                           
  9175                           ;mcc_generated_files/i2c1_master.c: 215:     {;mcc_generated_files/i2c1_master.c: 216:  
      +                                 I2C1_Status.inUse = 0;
  9176     0618  115D               	bcf	(_I2C1_Status^(0+128)+29),2
  9177                           
  9178                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_Status.address = 0xff;
  9179     0619  30FF               	movlw	255
  9180     061A  00D6               	movwf	(_I2C1_Status^(0+128)+22)
  9181     061B                     l3069:
  9182                           
  9183                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClearIrq();
  9184     061B  318F  27A4  3186   	fcall	_I2C1_MasterClearIrq
  9185                           
  9186                           ;mcc_generated_files/i2c1_master.c: 219:         I2C1_MasterDisableIrq();
  9187     061E  318F  27AA  3186   	fcall	_I2C1_MasterDisableIrq
  9188                           
  9189                           ;mcc_generated_files/i2c1_master.c: 220:         I2C1_MasterClose();
  9190     0621  318F  27A7  3186   	fcall	_I2C1_MasterClose
  9191     0624                     l3071:
  9192                           
  9193                           ;mcc_generated_files/i2c1_master.c: 221:         returnValue = I2C1_Status.error;
  9194     0624  0021               	movlb	1	; select bank1
  9195     0625  085C               	movf	(_I2C1_Status^(0+128)+28),w
  9196     0626  0020               	movlb	0	; select bank0
  9197     0627  00A0               	movwf	I2C1_Close@returnValue
  9198     0628                     l3073:
  9199                           
  9200                           ;mcc_generated_files/i2c1_master.c: 223:     return returnValue;
  9201     0628  0020               	movlb	0	; select bank0
  9202     0629  0820               	movf	I2C1_Close@returnValue,w
  9203     062A                     l316:
  9204     062A  0008               	return
  9205     062B                     __end_of_I2C1_Close:
  9206                           
  9207                           	psect	text30
  9208     0FAA                     __ptext30:	
  9209 ;; *************** function _I2C1_MasterDisableIrq *****************
  9210 ;; Defined at:
  9211 ;;		line 637 in file "mcc_generated_files/i2c1_master.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;		None
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;		None
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1    wreg      void 
  9218 ;; Registers used:
  9219 ;;		None
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;Total ram usage:        0 bytes
  9230 ;; Hardware stack levels used: 1
  9231 ;; Hardware stack levels required when called: 7
  9232 ;; This function calls:
  9233 ;;		Nothing
  9234 ;; This function is called by:
  9235 ;;		_I2C1_Close
  9236 ;;		_I2C1_SetTimeOut
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240     0FAA                     _I2C1_MasterDisableIrq:	
  9241                           ;psect for function _I2C1_MasterDisableIrq
  9242                           
  9243     0FAA                     l2987:	
  9244                           ;incstack = 0
  9245                           ; Regs used in _I2C1_MasterDisableIrq: []
  9246                           
  9247                           
  9248                           ;mcc_generated_files/i2c1_master.c: 639:     PIE3bits.SSP1IE = 0;
  9249     0FAA  002E               	movlb	14	; select bank14
  9250     0FAB  1019               	bcf	25,0	;volatile
  9251     0FAC                     l525:
  9252     0FAC  0008               	return
  9253     0FAD                     __end_of_I2C1_MasterDisableIrq:
  9254                           
  9255                           	psect	text31
  9256     0FA7                     __ptext31:	
  9257 ;; *************** function _I2C1_MasterClose *****************
  9258 ;; Defined at:
  9259 ;;		line 558 in file "mcc_generated_files/i2c1_master.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;		None
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      void 
  9266 ;; Registers used:
  9267 ;;		None
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9277 ;;Total ram usage:        0 bytes
  9278 ;; Hardware stack levels used: 1
  9279 ;; Hardware stack levels required when called: 7
  9280 ;; This function calls:
  9281 ;;		Nothing
  9282 ;; This function is called by:
  9283 ;;		_I2C1_Close
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287     0FA7                     _I2C1_MasterClose:	
  9288                           ;psect for function _I2C1_MasterClose
  9289                           
  9290     0FA7                     l2989:	
  9291                           ;incstack = 0
  9292                           ; Regs used in _I2C1_MasterClose: []
  9293                           
  9294                           
  9295                           ;mcc_generated_files/i2c1_master.c: 561:     SSP1CON1bits.SSPEN = 0;
  9296     0FA7  0023               	movlb	3	; select bank3
  9297     0FA8  1290               	bcf	16,5	;volatile
  9298     0FA9                     l480:
  9299     0FA9  0008               	return
  9300     0FAA                     __end_of_I2C1_MasterClose:
  9301                           
  9302                           	psect	text32
  9303     0FA4                     __ptext32:	
  9304 ;; *************** function _I2C1_MasterClearIrq *****************
  9305 ;; Defined at:
  9306 ;;		line 642 in file "mcc_generated_files/i2c1_master.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;		None
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;		None
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  1    wreg      void 
  9313 ;; Registers used:
  9314 ;;		None
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9324 ;;Total ram usage:        0 bytes
  9325 ;; Hardware stack levels used: 1
  9326 ;; Hardware stack levels required when called: 7
  9327 ;; This function calls:
  9328 ;;		Nothing
  9329 ;; This function is called by:
  9330 ;;		_I2C1_Open
  9331 ;;		_I2C1_Close
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335     0FA4                     _I2C1_MasterClearIrq:	
  9336                           ;psect for function _I2C1_MasterClearIrq
  9337                           
  9338     0FA4                     l2971:	
  9339                           ;incstack = 0
  9340                           ; Regs used in _I2C1_MasterClearIrq: []
  9341                           
  9342                           
  9343                           ;mcc_generated_files/i2c1_master.c: 644:     PIR3bits.SSP1IF = 0;
  9344     0FA4  002E               	movlb	14	; select bank14
  9345     0FA5  100F               	bcf	15,0	;volatile
  9346     0FA6                     l528:
  9347     0FA6  0008               	return
  9348     0FA7                     __end_of_I2C1_MasterClearIrq:
  9349                           
  9350                           	psect	text33
  9351     0FF1                     __ptext33:	
  9352 ;; *************** function _lcd_busy *****************
  9353 ;; Defined at:
  9354 ;;		line 167 in file "seri_lcd.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;		None
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;		None
  9359 ;; Return value:  Size  Location     Type
  9360 ;;                  1    wreg      void 
  9361 ;; Registers used:
  9362 ;;		wreg
  9363 ;; Tracked objects:
  9364 ;;		On entry : 0/0
  9365 ;;		On exit  : 0/0
  9366 ;;		Unchanged: 0/0
  9367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9372 ;;Total ram usage:        0 bytes
  9373 ;; Hardware stack levels used: 1
  9374 ;; Hardware stack levels required when called: 7
  9375 ;; This function calls:
  9376 ;;		Nothing
  9377 ;; This function is called by:
  9378 ;;		_lcd_writeletter
  9379 ;;		_lcd_command
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383     0FF1                     _lcd_busy:	
  9384                           ;psect for function _lcd_busy
  9385                           
  9386     0FF1                     l3253:	
  9387                           ;incstack = 0
  9388                           ; Regs used in _lcd_busy: [wreg]
  9389                           
  9390                           
  9391                           ;seri_lcd.c: 168:     _delay((unsigned long)((100)*(32000000/4000000.0)));
  9392     0FF1  30A0               	movlw	160
  9393     0FF2                     u1977:
  9394     0FF2  3200               	nop2
  9395     0FF3  0B89               	decfsz	9,f
  9396     0FF4  2FF2               	goto	u1977
  9397     0FF5                     l767:
  9398     0FF5  0008               	return
  9399     0FF6                     __end_of_lcd_busy:
  9400                           
  9401                           	psect	text34
  9402     0764                     __ptext34:	
  9403 ;; *************** function _SYSTEM_Initialize *****************
  9404 ;; Defined at:
  9405 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;		None
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;		None
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  1    wreg      void 
  9412 ;; Registers used:
  9413 ;;		status,2, status,0, pclath, cstack
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9423 ;;Total ram usage:        0 bytes
  9424 ;; Hardware stack levels used: 1
  9425 ;; Hardware stack levels required when called: 8
  9426 ;; This function calls:
  9427 ;;		_ADCC_Initialize
  9428 ;;		_I2C1_Initialize
  9429 ;;		_OSCILLATOR_Initialize
  9430 ;;		_PIN_MANAGER_Initialize
  9431 ;;		_PMD_Initialize
  9432 ;; This function is called by:
  9433 ;;		_main
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437     0764                     _SYSTEM_Initialize:	
  9438                           ;psect for function _SYSTEM_Initialize
  9439                           
  9440     0764                     l3725:	
  9441                           ;incstack = 0
  9442                           ; Regs used in _SYSTEM_Initialize: [status,2+status,0+pclath+cstack]
  9443                           
  9444                           
  9445                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  9446     0764  3187  27CF  3187   	fcall	_PMD_Initialize
  9447                           
  9448                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  9449     0767  3187  27BD  3187   	fcall	_I2C1_Initialize
  9450                           
  9451                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  9452     076A  3183  230E  3187   	fcall	_PIN_MANAGER_Initialize
  9453                           
  9454                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  9455     076D  3187  27B4  3187   	fcall	_OSCILLATOR_Initialize
  9456                           
  9457                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  9458     0770  3186  2661  3187   	fcall	_ADCC_Initialize
  9459     0773                     l678:
  9460     0773  0008               	return
  9461     0774                     __end_of_SYSTEM_Initialize:
  9462                           
  9463                           	psect	text35
  9464     07CF                     __ptext35:	
  9465 ;; *************** function _PMD_Initialize *****************
  9466 ;; Defined at:
  9467 ;;		line 73 in file "mcc_generated_files/mcc.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;		None
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;		None
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  1    wreg      void 
  9474 ;; Registers used:
  9475 ;;		status,2
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9485 ;;Total ram usage:        0 bytes
  9486 ;; Hardware stack levels used: 1
  9487 ;; Hardware stack levels required when called: 7
  9488 ;; This function calls:
  9489 ;;		Nothing
  9490 ;; This function is called by:
  9491 ;;		_SYSTEM_Initialize
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495     07CF                     _PMD_Initialize:	
  9496                           ;psect for function _PMD_Initialize
  9497                           
  9498     07CF                     l3659:	
  9499                           ;incstack = 0
  9500                           ; Regs used in _PMD_Initialize: [status,2]
  9501                           
  9502                           
  9503                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
  9504     07CF  002F               	movlb	15	; select bank15
  9505     07D0  0196               	clrf	22	;volatile
  9506                           
  9507                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
  9508     07D1  0197               	clrf	23	;volatile
  9509                           
  9510                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
  9511     07D2  0198               	clrf	24	;volatile
  9512                           
  9513                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
  9514     07D3  0199               	clrf	25	;volatile
  9515                           
  9516                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
  9517     07D4  019A               	clrf	26	;volatile
  9518                           
  9519                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
  9520     07D5  019B               	clrf	27	;volatile
  9521     07D6                     l684:
  9522     07D6  0008               	return
  9523     07D7                     __end_of_PMD_Initialize:
  9524                           
  9525                           	psect	text36
  9526     030E                     __ptext36:	
  9527 ;; *************** function _PIN_MANAGER_Initialize *****************
  9528 ;; Defined at:
  9529 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;		None
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;		None
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1    wreg      void 
  9536 ;; Registers used:
  9537 ;;		status,2
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/0
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;Total ram usage:        0 bytes
  9548 ;; Hardware stack levels used: 1
  9549 ;; Hardware stack levels required when called: 7
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_SYSTEM_Initialize
  9554 ;; This function uses a non-reentrant model
  9555 ;;
  9556                           
  9557     030E                     _PIN_MANAGER_Initialize:	
  9558                           ;psect for function _PIN_MANAGER_Initialize
  9559                           
  9560     030E                     l3609:	
  9561                           ;incstack = 0
  9562                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  9563                           
  9564                           
  9565                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9566     030E  0020               	movlb	0	; select bank0
  9567     030F  019A               	clrf	26	;volatile
  9568                           
  9569                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9570     0310  0199               	clrf	25	;volatile
  9571                           
  9572                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  9573     0311  0196               	clrf	22	;volatile
  9574                           
  9575                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9576     0312  0197               	clrf	23	;volatile
  9577                           
  9578                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9579     0313  0198               	clrf	24	;volatile
  9580     0314                     l3611:
  9581                           
  9582                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9583     0314  3007               	movlw	7
  9584     0315  0095               	movwf	21	;volatile
  9585     0316                     l3613:
  9586                           
  9587                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  9588     0316  30FF               	movlw	255
  9589     0317  0091               	movwf	17	;volatile
  9590     0318                     l3615:
  9591                           
  9592                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  9593     0318  30FF               	movlw	255
  9594     0319  0092               	movwf	18	;volatile
  9595     031A                     l3617:
  9596                           
  9597                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  9598     031A  30FF               	movlw	255
  9599     031B  0093               	movwf	19	;volatile
  9600     031C                     l3619:
  9601                           
  9602                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  9603     031C  30FF               	movlw	255
  9604     031D  0094               	movwf	20	;volatile
  9605     031E                     l3621:
  9606                           
  9607                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  9608     031E  30FF               	movlw	255
  9609     031F  003E               	movlb	30	; select bank30
  9610     0320  00D9               	movwf	89	;volatile
  9611     0321                     l3623:
  9612                           
  9613                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xE7;
  9614     0321  30E7               	movlw	231
  9615     0322  00CE               	movwf	78	;volatile
  9616     0323                     l3625:
  9617                           
  9618                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  9619     0323  30FF               	movlw	255
  9620     0324  00C3               	movwf	67	;volatile
  9621     0325                     l3627:
  9622                           
  9623                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  9624     0325  3007               	movlw	7
  9625     0326  00E4               	movwf	100	;volatile
  9626     0327                     l3629:
  9627                           
  9628                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  9629     0327  30FF               	movlw	255
  9630     0328  00B8               	movwf	56	;volatile
  9631                           
  9632                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  9633     0329  01DA               	clrf	90	;volatile
  9634                           
  9635                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  9636     032A  01E5               	clrf	101	;volatile
  9637                           
  9638                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  9639     032B  01C4               	clrf	68	;volatile
  9640                           
  9641                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  9642     032C  01B9               	clrf	57	;volatile
  9643                           
  9644                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  9645     032D  01CF               	clrf	79	;volatile
  9646                           
  9647                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  9648     032E  01E6               	clrf	102	;volatile
  9649                           
  9650                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  9651     032F  01BA               	clrf	58	;volatile
  9652                           
  9653                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  9654     0330  01C5               	clrf	69	;volatile
  9655                           
  9656                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  9657     0331  01D0               	clrf	80	;volatile
  9658                           
  9659                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  9660     0332  01DB               	clrf	91	;volatile
  9661     0333                     l3631:
  9662                           
  9663                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  9664     0333  30FF               	movlw	255
  9665     0334  00BB               	movwf	59	;volatile
  9666     0335                     l3633:
  9667                           
  9668                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  9669     0335  30FF               	movlw	255
  9670     0336  00C6               	movwf	70	;volatile
  9671     0337                     l3635:
  9672                           
  9673                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  9674     0337  30FF               	movlw	255
  9675     0338  00D1               	movwf	81	;volatile
  9676     0339                     l3637:
  9677                           
  9678                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  9679     0339  30FF               	movlw	255
  9680     033A  00DC               	movwf	92	;volatile
  9681     033B                     l3639:
  9682                           
  9683                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  9684     033B  3007               	movlw	7
  9685     033C  00E7               	movwf	103	;volatile
  9686     033D                     l3641:
  9687                           
  9688                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  9689     033D  30FF               	movlw	255
  9690     033E  00BC               	movwf	60	;volatile
  9691     033F                     l3643:
  9692                           
  9693                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  9694     033F  30FF               	movlw	255
  9695     0340  00C7               	movwf	71	;volatile
  9696     0341                     l3645:
  9697                           
  9698                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  9699     0341  30FF               	movlw	255
  9700     0342  00D2               	movwf	82	;volatile
  9701     0343                     l3647:
  9702                           
  9703                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  9704     0343  30FF               	movlw	255
  9705     0344  00DD               	movwf	93	;volatile
  9706     0345                     l3649:
  9707                           
  9708                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
  9709     0345  3007               	movlw	7
  9710     0346  00E8               	movwf	104	;volatile
  9711     0347                     l3651:
  9712                           
  9713                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
  9714     0347  3013               	movlw	19
  9715     0348  003D               	movlb	29	; select bank29
  9716     0349  00C5               	movwf	69	;volatile
  9717     034A                     l3653:
  9718                           
  9719                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
  9720     034A  3014               	movlw	20
  9721     034B  003E               	movlb	30	; select bank30
  9722     034C  00A3               	movwf	35	;volatile
  9723     034D                     l3655:
  9724                           
  9725                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
  9726     034D  3015               	movlw	21
  9727     034E  00A4               	movwf	36	;volatile
  9728     034F                     l3657:
  9729                           
  9730                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
  9731     034F  3014               	movlw	20
  9732     0350  003D               	movlb	29	; select bank29
  9733     0351  00C6               	movwf	70	;volatile
  9734     0352                     l619:
  9735     0352  0008               	return
  9736     0353                     __end_of_PIN_MANAGER_Initialize:
  9737                           
  9738                           	psect	text37
  9739     07B4                     __ptext37:	
  9740 ;; *************** function _OSCILLATOR_Initialize *****************
  9741 ;; Defined at:
  9742 ;;		line 59 in file "mcc_generated_files/mcc.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;		None
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;		None
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		status,2
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;Total ram usage:        0 bytes
  9761 ;; Hardware stack levels used: 1
  9762 ;; Hardware stack levels required when called: 7
  9763 ;; This function calls:
  9764 ;;		Nothing
  9765 ;; This function is called by:
  9766 ;;		_SYSTEM_Initialize
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770     07B4                     _OSCILLATOR_Initialize:	
  9771                           ;psect for function _OSCILLATOR_Initialize
  9772                           
  9773     07B4                     l3661:	
  9774                           ;incstack = 0
  9775                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  9776                           
  9777                           
  9778                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x60;
  9779     07B4  3060               	movlw	96
  9780     07B5  0031               	movlb	17	; select bank17
  9781     07B6  008D               	movwf	13	;volatile
  9782     07B7                     l3663:
  9783                           
  9784                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  9785     07B7  018F               	clrf	15	;volatile
  9786                           
  9787                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  9788     07B8  0191               	clrf	17	;volatile
  9789     07B9                     l3665:
  9790                           
  9791                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x06;
  9792     07B9  3006               	movlw	6
  9793     07BA  0093               	movwf	19	;volatile
  9794                           
  9795                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  9796     07BB  0192               	clrf	18	;volatile
  9797     07BC                     l681:
  9798     07BC  0008               	return
  9799     07BD                     __end_of_OSCILLATOR_Initialize:
  9800                           
  9801                           	psect	text38
  9802     07BD                     __ptext38:	
  9803 ;; *************** function _I2C1_Initialize *****************
  9804 ;; Defined at:
  9805 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;		None
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		status,2
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;Total ram usage:        0 bytes
  9824 ;; Hardware stack levels used: 1
  9825 ;; Hardware stack levels required when called: 7
  9826 ;; This function calls:
  9827 ;;		Nothing
  9828 ;; This function is called by:
  9829 ;;		_SYSTEM_Initialize
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833     07BD                     _I2C1_Initialize:	
  9834                           ;psect for function _I2C1_Initialize
  9835                           
  9836     07BD                     l3591:	
  9837                           ;incstack = 0
  9838                           ; Regs used in _I2C1_Initialize: [status,2]
  9839                           
  9840                           
  9841                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
  9842     07BD  0023               	movlb	3	; select bank3
  9843     07BE  018F               	clrf	15	;volatile
  9844     07BF                     l3593:
  9845                           
  9846                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
  9847     07BF  3008               	movlw	8
  9848     07C0  0090               	movwf	16	;volatile
  9849                           
  9850                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
  9851     07C1  0191               	clrf	17	;volatile
  9852     07C2                     l3595:
  9853                           
  9854                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
  9855     07C2  304F               	movlw	79
  9856     07C3  008D               	movwf	13	;volatile
  9857     07C4                     l3597:
  9858                           
  9859                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  9860     07C4  1290               	bcf	16,5	;volatile
  9861     07C5                     l308:
  9862     07C5  0008               	return
  9863     07C6                     __end_of_I2C1_Initialize:
  9864                           
  9865                           	psect	text39
  9866     0661                     __ptext39:	
  9867 ;; *************** function _ADCC_Initialize *****************
  9868 ;; Defined at:
  9869 ;;		line 63 in file "mcc_generated_files/adcc.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;		None
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;		None
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1    wreg      void 
  9876 ;; Registers used:
  9877 ;;		status,2
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;Total ram usage:        0 bytes
  9888 ;; Hardware stack levels used: 1
  9889 ;; Hardware stack levels required when called: 7
  9890 ;; This function calls:
  9891 ;;		Nothing
  9892 ;; This function is called by:
  9893 ;;		_SYSTEM_Initialize
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897     0661                     _ADCC_Initialize:	
  9898                           ;psect for function _ADCC_Initialize
  9899                           
  9900     0661                     l3667:	
  9901                           ;incstack = 0
  9902                           ; Regs used in _ADCC_Initialize: [status,2]
  9903                           
  9904                           
  9905                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  9906     0661  0022               	movlb	2	; select bank2
  9907     0662  018E               	clrf	14	;volatile
  9908                           
  9909                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  9910     0663  018F               	clrf	15	;volatile
  9911                           
  9912                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  9913     0664  0190               	clrf	16	;volatile
  9914                           
  9915                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  9916     0665  0191               	clrf	17	;volatile
  9917                           
  9918                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  9919     0666  0192               	clrf	18	;volatile
  9920                           
  9921                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  9922     0667  0193               	clrf	19	;volatile
  9923                           
  9924                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  9925     0668  018D               	clrf	13	;volatile
  9926                           
  9927                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  9928     0669  0021               	movlb	1	; select bank1
  9929     066A  019E               	clrf	30	;volatile
  9930                           
  9931                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  9932     066B  019B               	clrf	27	;volatile
  9933                           
  9934                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
  9935     066C  019C               	clrf	28	;volatile
  9936                           
  9937                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
  9938     066D  0194               	clrf	20	;volatile
  9939                           
  9940                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
  9941     066E  0195               	clrf	21	;volatile
  9942                           
  9943                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
  9944     066F  0196               	clrf	22	;volatile
  9945                           
  9946                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
  9947     0670  0197               	clrf	23	;volatile
  9948                           
  9949                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
  9950     0671  019A               	clrf	26	;volatile
  9951                           
  9952                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
  9953     0672  0199               	clrf	25	;volatile
  9954                           
  9955                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
  9956     0673  0198               	clrf	24	;volatile
  9957     0674                     l3669:
  9958                           
  9959                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0xD4;
  9960     0674  30D4               	movlw	212
  9961     0675  0093               	movwf	19	;volatile
  9962     0676                     l3671:
  9963                           
  9964                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0xC8;
  9965     0676  30C8               	movlw	200
  9966     0677  009D               	movwf	29	;volatile
  9967     0678                     l903:
  9968     0678  0008               	return
  9969     0679                     __end_of_ADCC_Initialize:
  9970                           
  9971                           	psect	text40
  9972     0690                     __ptext40:	
  9973 ;; *************** function _ADCC_GetSingleConversion *****************
  9974 ;; Defined at:
  9975 ;;		line 132 in file "mcc_generated_files/adcc.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;  channel         1    wreg     enum E12225
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;  channel         1    2[BANK0 ] enum E12225
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  2    0[BANK0 ] unsigned short 
  9982 ;; Registers used:
  9983 ;;		wreg
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9992 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9993 ;;Total ram usage:        3 bytes
  9994 ;; Hardware stack levels used: 1
  9995 ;; Hardware stack levels required when called: 7
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_main
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003     0690                     _ADCC_GetSingleConversion:	
 10004                           ;psect for function _ADCC_GetSingleConversion
 10005                           
 10006                           
 10007                           ;incstack = 0
 10008                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 10009                           ;ADCC_GetSingleConversion@channel stored from wreg
 10010     0690  0020               	movlb	0	; select bank0
 10011     0691  00A2               	movwf	ADCC_GetSingleConversion@channel
 10012     0692                     l3747:
 10013                           
 10014                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 10015     0692  0822               	movf	ADCC_GetSingleConversion@channel,w
 10016     0693  0021               	movlb	1	; select bank1
 10017     0694  009E               	movwf	30	;volatile
 10018     0695                     l3749:
 10019                           
 10020                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 10021     0695  1793               	bsf	19,7	;volatile
 10022     0696                     l3751:
 10023                           
 10024                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 10025     0696  1313               	bcf	19,6	;volatile
 10026     0697                     l3753:
 10027                           
 10028                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 10029     0697  1413               	bsf	19,0	;volatile
 10030     0698                     l3755:
 10031                           
 10032                           ;mcc_generated_files/adcc.c: 147:     __nop();
 10033     0698  0000               	nop
 10034     0699                     l915:	
 10035                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 10036                           
 10037                           
 10038                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 10039     0699  0021               	movlb	1	; select bank1
 10040     069A  1813               	btfsc	19,0	;volatile
 10041     069B  2E9D               	goto	u1471
 10042     069C  2E9E               	goto	u1470
 10043     069D                     u1471:
 10044     069D  2E99               	goto	l915
 10045     069E                     u1470:
 10046     069E                     l3757:
 10047                           
 10048                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10049     069E  080D               	movf	13,w	;volatile
 10050     069F  0020               	movlb	0	; select bank0
 10051     06A0  00A1               	movwf	?_ADCC_GetSingleConversion+1
 10052     06A1  0021               	movlb	1	; select bank1
 10053     06A2  080C               	movf	12,w	;volatile
 10054     06A3  0020               	movlb	0	; select bank0
 10055     06A4  00A0               	movwf	?_ADCC_GetSingleConversion
 10056     06A5                     l918:
 10057     06A5  0008               	return
 10058     06A6                     __end_of_ADCC_GetSingleConversion:
 10059                           
 10060                           	psect	intentry
 10061     0004                     __pintentry:	
 10062 ;; *************** function _INTERRUPT_InterruptManager *****************
 10063 ;; Defined at:
 10064 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;		None
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;Total ram usage:        0 bytes
 10083 ;; Hardware stack levels used: 1
 10084 ;; Hardware stack levels required when called: 6
 10085 ;; This function calls:
 10086 ;;		NULL
 10087 ;;		_I2C1_MasterIsr
 10088 ;; This function is called by:
 10089 ;;		Interrupt level 1
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093     0004                     _INTERRUPT_InterruptManager:
 10094                           
 10095                           ;incstack = 0
 10096     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 10097                           
 10098                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10099     0005  3180               	pagesel	$
 10100     0006                     i1l3991:
 10101                           
 10102                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 10103     0006  1F0B               	btfss	11,6	;volatile
 10104     0007  2809               	goto	u178_21
 10105     0008  280A               	goto	u178_20
 10106     0009                     u178_21:
 10107     0009  2823               	goto	i1l641
 10108     000A                     u178_20:
 10109     000A                     i1l3993:
 10110                           
 10111                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 10112     000A  002E               	movlb	14	; select bank14
 10113     000B  1C99               	btfss	25,1	;volatile
 10114     000C  280E               	goto	u179_21
 10115     000D  280F               	goto	u179_20
 10116     000E                     u179_21:
 10117     000E  281A               	goto	i1l636
 10118     000F                     u179_20:
 10119     000F                     i1l3995:
 10120     000F  1C8F               	btfss	15,1	;volatile
 10121     0010  2812               	goto	u180_21
 10122     0011  2813               	goto	u180_20
 10123     0012                     u180_21:
 10124     0012  281A               	goto	i1l636
 10125     0013                     u180_20:
 10126     0013                     i1l3997:
 10127                           
 10128                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             MSSP1_InterruptHandler();
 10129     0013  0020               	movlb	0	; select bank0
 10130     0014  086B               	movf	_MSSP1_InterruptHandler+1,w
 10131     0015  008A               	movwf	10
 10132     0016  086A               	movf	_MSSP1_InterruptHandler,w
 10133     0017  000A               	callw
 10134     0018  3180               	pagesel	$
 10135                           
 10136                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 10137     0019  2823               	goto	i1l641
 10138     001A                     i1l636:	
 10139                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 10140                           
 10141     001A  1C19               	btfss	25,0	;volatile
 10142     001B  281D               	goto	u181_21
 10143     001C  281E               	goto	u181_20
 10144     001D                     u181_21:
 10145     001D  2823               	goto	i1l637
 10146     001E                     u181_20:
 10147     001E                     i1l3999:
 10148     001E  1C0F               	btfss	15,0	;volatile
 10149     001F  2821               	goto	u182_21
 10150     0020  2822               	goto	u182_20
 10151     0021                     u182_21:
 10152     0021  2823               	goto	i1l637
 10153     0022                     u182_20:
 10154     0022  2813               	goto	i1l3997
 10155     0023                     i1l637:
 10156     0023                     i1l641:	
 10157                           ;mcc_generated_files/interrupt_manager.c: 69:     }
 10158                           
 10159     0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10160     0024  0009               	retfie
 10161     0025                     __end_of_INTERRUPT_InterruptManager:
 10162                           
 10163                           	psect	text42
 10164     0FBB                     __ptext42:	
 10165 ;; *************** function _I2C1_MasterIsr *****************
 10166 ;; Defined at:
 10167 ;;		line 318 in file "mcc_generated_files/i2c1_master.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;		None
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;		None
 10172 ;; Return value:  Size  Location     Type
 10173 ;;                  1    wreg      void 
 10174 ;; Registers used:
 10175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10176 ;; Tracked objects:
 10177 ;;		On entry : 0/0
 10178 ;;		On exit  : 0/0
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10185 ;;Total ram usage:        0 bytes
 10186 ;; Hardware stack levels used: 1
 10187 ;; Hardware stack levels required when called: 5
 10188 ;; This function calls:
 10189 ;;		_I2C1_MasterFsm
 10190 ;; This function is called by:
 10191 ;;		_I2C1_Open
 10192 ;;		_INTERRUPT_InterruptManager
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196     0FBB                     _I2C1_MasterIsr:	
 10197                           ;psect for function _I2C1_MasterIsr
 10198                           
 10199     0FBB                     i1l3723:	
 10200                           ;incstack = 0
 10201                           ; Regs used in _I2C1_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10202                           
 10203                           
 10204                           ;mcc_generated_files/i2c1_master.c: 320:     I2C1_MasterFsm();
 10205     0FBB  3185  254F  318F   	fcall	_I2C1_MasterFsm
 10206     0FBE                     i1l361:
 10207     0FBE  0008               	return
 10208     0FBF                     __end_of_I2C1_MasterIsr:
 10209                           
 10210                           	psect	text43
 10211     054F                     __ptext43:	
 10212 ;; *************** function _I2C1_MasterFsm *****************
 10213 ;; Defined at:
 10214 ;;		line 323 in file "mcc_generated_files/i2c1_master.c"
 10215 ;; Parameters:    Size  Location     Type
 10216 ;;		None
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;		None
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  1    wreg      void 
 10221 ;; Registers used:
 10222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10230 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10231 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10232 ;;Total ram usage:        2 bytes
 10233 ;; Hardware stack levels used: 1
 10234 ;; Hardware stack levels required when called: 4
 10235 ;; This function calls:
 10236 ;;		_I2C1_DO_ADDRESS_NACK
 10237 ;;		_I2C1_DO_IDLE
 10238 ;;		_I2C1_DO_RCEN
 10239 ;;		_I2C1_DO_RESET
 10240 ;;		_I2C1_DO_RX
 10241 ;;		_I2C1_DO_RX_ACK
 10242 ;;		_I2C1_DO_RX_NACK_RESTART
 10243 ;;		_I2C1_DO_RX_NACK_STOP
 10244 ;;		_I2C1_DO_SEND_ADR_READ
 10245 ;;		_I2C1_DO_SEND_ADR_WRITE
 10246 ;;		_I2C1_DO_SEND_RESTART
 10247 ;;		_I2C1_DO_SEND_RESTART_READ
 10248 ;;		_I2C1_DO_SEND_RESTART_WRITE
 10249 ;;		_I2C1_DO_SEND_STOP
 10250 ;;		_I2C1_DO_TX
 10251 ;;		_I2C1_DO_TX_EMPTY
 10252 ;;		_I2C1_MasterIsNack
 10253 ;;		i1_I2C1_MasterClearIrq
 10254 ;; This function is called by:
 10255 ;;		_I2C1_MasterIsr
 10256 ;; This function uses a non-reentrant model
 10257 ;;
 10258                           
 10259     054F                     _I2C1_MasterFsm:	
 10260                           ;psect for function _I2C1_MasterFsm
 10261                           
 10262     054F                     i1l3599:	
 10263                           ;incstack = 0
 10264                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10265                           
 10266                           
 10267                           ;mcc_generated_files/i2c1_master.c: 325:     I2C1_MasterClearIrq();
 10268     054F  318F  27A1  3185   	fcall	i1_I2C1_MasterClearIrq
 10269     0552                     i1l3601:
 10270                           
 10271                           ;mcc_generated_files/i2c1_master.c: 327:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 10272     0552  0021               	movlb	1	; select bank1
 10273     0553  1C5D               	btfss	(_I2C1_Status^(0+128)+29),0
 10274     0554  2D56               	goto	u143_21
 10275     0555  2D57               	goto	u143_20
 10276     0556                     u143_21:
 10277     0556  2D62               	goto	i1l3607
 10278     0557                     u143_20:
 10279     0557                     i1l3603:
 10280     0557  3187  27F9  3185   	fcall	_I2C1_MasterIsNack
 10281     055A  3A00               	xorlw	0
 10282     055B  1903               	skipnz
 10283     055C  2D5E               	goto	u144_21
 10284     055D  2D5F               	goto	u144_20
 10285     055E                     u144_21:
 10286     055E  2D62               	goto	i1l3607
 10287     055F                     u144_20:
 10288     055F                     i1l3605:
 10289                           
 10290                           ;mcc_generated_files/i2c1_master.c: 328:     {;mcc_generated_files/i2c1_master.c: 329:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 10291     055F  300F               	movlw	15
 10292     0560  0021               	movlb	1	; select bank1
 10293     0561  00DB               	movwf	(_I2C1_Status^(0+128)+27)
 10294     0562                     i1l3607:
 10295                           
 10296                           ;mcc_generated_files/i2c1_master.c: 331:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 10297     0562  0021               	movlb	1	; select bank1
 10298     0563  085B               	movf	(_I2C1_Status^(0+128)+27),w
 10299     0564  00FC               	movwf	??_I2C1_MasterFsm
 10300     0565  01FD               	clrf	??_I2C1_MasterFsm+1
 10301     0566  35FC               	lslf	??_I2C1_MasterFsm,f
 10302     0567  0DFD               	rlf	??_I2C1_MasterFsm+1,f
 10303     0568  3077               	movlw	low _i2c1_fsmStateTable
 10304     0569  077C               	addwf	??_I2C1_MasterFsm,w
 10305     056A  0084               	movwf	4
 10306     056B  3005               	movlw	high _i2c1_fsmStateTable
 10307     056C  3D7D               	addwfc	??_I2C1_MasterFsm+1,w
 10308     056D  3880               	iorlw	128
 10309     056E  0085               	movwf	5
 10310     056F  3F01               	moviw [1]fsr0
 10311     0570  008A               	movwf	10
 10312     0571  3F00               	moviw [0]fsr0
 10313     0572  000A               	callw
 10314     0573  3185               	pagesel	$
 10315     0574  0021               	movlb	1	; select bank1
 10316     0575  00DB               	movwf	(_I2C1_Status^(0+128)+27)
 10317     0576                     i1l365:
 10318     0576  0008               	return
 10319     0577                     __end_of_I2C1_MasterFsm:
 10320                           
 10321                           	psect	text44
 10322     0FA1                     __ptext44:	
 10323 ;; *************** function i1_I2C1_MasterClearIrq *****************
 10324 ;; Defined at:
 10325 ;;		line 642 in file "mcc_generated_files/i2c1_master.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;		None
 10328 ;; Auto vars:     Size  Location     Type
 10329 ;;		None
 10330 ;; Return value:  Size  Location     Type
 10331 ;;                  1    wreg      void 
 10332 ;; Registers used:
 10333 ;;		None
 10334 ;; Tracked objects:
 10335 ;;		On entry : 0/0
 10336 ;;		On exit  : 0/0
 10337 ;;		Unchanged: 0/0
 10338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;Total ram usage:        0 bytes
 10344 ;; Hardware stack levels used: 1
 10345 ;; This function calls:
 10346 ;;		Nothing
 10347 ;; This function is called by:
 10348 ;;		_I2C1_MasterFsm
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352     0FA1                     i1_I2C1_MasterClearIrq:	
 10353                           ;psect for function i1_I2C1_MasterClearIrq
 10354                           
 10355     0FA1                     i1l3589:	
 10356                           ;incstack = 0
 10357                           ; Regs used in i1_I2C1_MasterClearIrq: []
 10358                           
 10359                           
 10360                           ;mcc_generated_files/i2c1_master.c: 644:     PIR3bits.SSP1IF = 0;
 10361     0FA1  002E               	movlb	14	; select bank14
 10362     0FA2  100F               	bcf	15,0	;volatile
 10363     0FA3                     i1l528:
 10364     0FA3  0008               	return
 10365     0FA4                     __end_ofi1_I2C1_MasterClearIrq:
 10366                           
 10367                           	psect	text45
 10368     0526                     __ptext45:	
 10369 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 10370 ;; Defined at:
 10371 ;;		line 501 in file "mcc_generated_files/i2c1_master.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;		None
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;		None
 10376 ;; Return value:  Size  Location     Type
 10377 ;;                  1    wreg      enum E12623
 10378 ;; Registers used:
 10379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10380 ;; Tracked objects:
 10381 ;;		On entry : 0/0
 10382 ;;		On exit  : 0/0
 10383 ;;		Unchanged: 0/0
 10384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10389 ;;Total ram usage:        2 bytes
 10390 ;; Hardware stack levels used: 1
 10391 ;; Hardware stack levels required when called: 3
 10392 ;; This function calls:
 10393 ;;		NULL
 10394 ;;		_I2C1_CallbackReturnReset
 10395 ;;		_I2C1_CallbackReturnStop
 10396 ;;		_I2C1_DO_SEND_RESTART
 10397 ;;		_I2C1_DO_SEND_STOP
 10398 ;;		_rd1RegCompleteHandler
 10399 ;;		_rd1RegCompleteHandler@i2c1_master_example$F146
 10400 ;;		_rd2RegCompleteHandler
 10401 ;;		_rd2RegCompleteHandler@i2c1_master_example$F157
 10402 ;;		_rdBlkRegCompleteHandler
 10403 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F180
 10404 ;;		_wr1RegCompleteHandler
 10405 ;;		_wr1RegCompleteHandler@i2c1_master_example$F163
 10406 ;;		_wr2RegCompleteHandler
 10407 ;;		_wr2RegCompleteHandler@i2c1_master_example$F169
 10408 ;; This function is called by:
 10409 ;;		_I2C1_MasterFsm
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           
 10413     0526                     _I2C1_DO_ADDRESS_NACK:	
 10414                           ;psect for function _I2C1_DO_ADDRESS_NACK
 10415                           
 10416     0526                     i1l3499:	
 10417                           ;incstack = 0
 10418                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10419                           
 10420                           
 10421                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.addressNackCheck = 0;
 10422     0526  0021               	movlb	1	; select bank1
 10423     0527  105D               	bcf	(_I2C1_Status^(0+128)+29),0
 10424                           
 10425                           ;mcc_generated_files/i2c1_master.c: 504:     I2C1_Status.error = I2C1_FAIL;
 10426     0528  3002               	movlw	2
 10427     0529  00DC               	movwf	(_I2C1_Status^(0+128)+28)
 10428                           
 10429                           ;mcc_generated_files/i2c1_master.c: 505:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 10430     052A  2D33               	goto	i1l3511
 10431     052B                     i1l3501:
 10432                           
 10433                           ;mcc_generated_files/i2c1_master.c: 509:             return I2C1_DO_SEND_RESTART();
 10434     052B  318F  27D3  3185   	fcall	_I2C1_DO_SEND_RESTART
 10435     052E  2D4E               	goto	i1l456
 10436     052F                     i1l3505:
 10437                           
 10438                           ;mcc_generated_files/i2c1_master.c: 511:             return I2C1_DO_SEND_STOP();
 10439     052F  318F  27D8  3185   	fcall	_I2C1_DO_SEND_STOP
 10440     0532  2D4E               	goto	i1l456
 10441     0533                     i1l3511:
 10442     0533  084E               	movf	(_I2C1_Status^(0+128)+14),w
 10443     0534  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 10444     0535  30C0               	movlw	low _I2C1_Status
 10445     0536  0086               	movwf	6
 10446     0537  3000               	movlw	high _I2C1_Status
 10447     0538  0087               	movwf	7
 10448     0539  3144               	addfsr 1,4
 10449     053A  3F41               	moviw [1]fsr1
 10450     053B  008A               	movwf	10
 10451     053C  3F40               	moviw [0]fsr1
 10452     053D  000A               	callw
 10453     053E  3185               	pagesel	$
 10454     053F  00FA               	movwf	??_I2C1_DO_ADDRESS_NACK
 10455     0540  01FB               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 10456                           
 10457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10458                           ; Switch size 1, requested type "simple"
 10459                           ; Number of cases is 1, Range of values is 0 to 0
 10460                           ; switch strategies available:
 10461                           ; Name         Instructions Cycles
 10462                           ; simple_byte            4     3 (average)
 10463                           ; direct_byte            8     6 (fixed)
 10464                           ; jumptable            260     6 (fixed)
 10465                           ;	Chosen strategy is simple_byte
 10466     0541  087B               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 10467     0542  3A00               	xorlw	0	; case 0
 10468     0543  1903               	skipnz
 10469     0544  2D46               	goto	i1l4199
 10470     0545  2D2F               	goto	i1l3505
 10471     0546                     i1l4199:
 10472                           
 10473                           ; Switch size 1, requested type "simple"
 10474                           ; Number of cases is 2, Range of values is 2 to 3
 10475                           ; switch strategies available:
 10476                           ; Name         Instructions Cycles
 10477                           ; simple_byte            7     4 (average)
 10478                           ; direct_byte           13     9 (fixed)
 10479                           ; jumptable            263     9 (fixed)
 10480                           ;	Chosen strategy is simple_byte
 10481     0546  087A               	movf	??_I2C1_DO_ADDRESS_NACK,w
 10482     0547  3A02               	xorlw	2	; case 2
 10483     0548  1903               	skipnz
 10484     0549  2D2B               	goto	i1l3501
 10485     054A  3A01               	xorlw	1	; case 3
 10486     054B  1903               	skipnz
 10487     054C  2D2B               	goto	i1l3501
 10488     054D  2D2F               	goto	i1l3505
 10489     054E                     i1l456:
 10490     054E  0008               	return
 10491     054F                     __end_of_I2C1_DO_ADDRESS_NACK:
 10492                           
 10493                           	psect	text46
 10494     0FEC                     __ptext46:	
 10495 ;; *************** function _I2C1_DO_RESET *****************
 10496 ;; Defined at:
 10497 ;;		line 495 in file "mcc_generated_files/i2c1_master.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;		None
 10500 ;; Auto vars:     Size  Location     Type
 10501 ;;		None
 10502 ;; Return value:  Size  Location     Type
 10503 ;;                  1    wreg      enum E12623
 10504 ;; Registers used:
 10505 ;;		wreg, status,2
 10506 ;; Tracked objects:
 10507 ;;		On entry : 0/0
 10508 ;;		On exit  : 0/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10515 ;;Total ram usage:        0 bytes
 10516 ;; Hardware stack levels used: 1
 10517 ;; This function calls:
 10518 ;;		Nothing
 10519 ;; This function is called by:
 10520 ;;		_I2C1_MasterFsm
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524     0FEC                     _I2C1_DO_RESET:	
 10525                           ;psect for function _I2C1_DO_RESET
 10526                           
 10527     0FEC                     i1l3491:	
 10528                           ;incstack = 0
 10529                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 10530                           
 10531                           
 10532                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.busy = 0;
 10533     0FEC  0021               	movlb	1	; select bank1
 10534     0FED  10DD               	bcf	(_I2C1_Status^(0+128)+29),1
 10535     0FEE                     i1l3493:
 10536                           
 10537                           ;mcc_generated_files/i2c1_master.c: 498:     I2C1_Status.error = I2C1_NOERR;
 10538     0FEE  01DC               	clrf	(_I2C1_Status^(0+128)+28)
 10539     0FEF                     i1l3495:
 10540                           
 10541                           ;mcc_generated_files/i2c1_master.c: 499:     return I2C1_RESET;
 10542     0FEF  300E               	movlw	14
 10543     0FF0                     i1l450:
 10544     0FF0  0008               	return
 10545     0FF1                     __end_of_I2C1_DO_RESET:
 10546                           
 10547                           	psect	text47
 10548     0FE7                     __ptext47:	
 10549 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 10550 ;; Defined at:
 10551 ;;		line 489 in file "mcc_generated_files/i2c1_master.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;		None
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;		None
 10556 ;; Return value:  Size  Location     Type
 10557 ;;                  1    wreg      enum E12623
 10558 ;; Registers used:
 10559 ;;		wreg, status,2, status,0, pclath, cstack
 10560 ;; Tracked objects:
 10561 ;;		On entry : 0/0
 10562 ;;		On exit  : 0/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10569 ;;Total ram usage:        0 bytes
 10570 ;; Hardware stack levels used: 1
 10571 ;; Hardware stack levels required when called: 1
 10572 ;; This function calls:
 10573 ;;		_I2C1_MasterSendNack
 10574 ;; This function is called by:
 10575 ;;		_I2C1_DO_RX
 10576 ;;		_I2C1_MasterFsm
 10577 ;; This function uses a non-reentrant model
 10578 ;;
 10579                           
 10580     0FE7                     _I2C1_DO_RX_NACK_RESTART:	
 10581                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 10582                           
 10583     0FE7                     i1l3215:	
 10584                           ;incstack = 0
 10585                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 10586                           
 10587                           
 10588                           ;mcc_generated_files/i2c1_master.c: 491:     I2C1_MasterSendNack();
 10589     0FE7  318F  27B3  318F   	fcall	_I2C1_MasterSendNack
 10590     0FEA                     i1l3217:
 10591                           
 10592                           ;mcc_generated_files/i2c1_master.c: 492:     return I2C1_SEND_RESTART;
 10593     0FEA  3009               	movlw	9
 10594     0FEB                     i1l447:
 10595     0FEB  0008               	return
 10596     0FEC                     __end_of_I2C1_DO_RX_NACK_RESTART:
 10597                           
 10598                           	psect	text48
 10599     0FE2                     __ptext48:	
 10600 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 10601 ;; Defined at:
 10602 ;;		line 483 in file "mcc_generated_files/i2c1_master.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;		None
 10605 ;; Auto vars:     Size  Location     Type
 10606 ;;		None
 10607 ;; Return value:  Size  Location     Type
 10608 ;;                  1    wreg      enum E12623
 10609 ;; Registers used:
 10610 ;;		wreg, status,2, status,0, pclath, cstack
 10611 ;; Tracked objects:
 10612 ;;		On entry : 0/0
 10613 ;;		On exit  : 0/0
 10614 ;;		Unchanged: 0/0
 10615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;Total ram usage:        0 bytes
 10621 ;; Hardware stack levels used: 1
 10622 ;; Hardware stack levels required when called: 1
 10623 ;; This function calls:
 10624 ;;		_I2C1_MasterSendNack
 10625 ;; This function is called by:
 10626 ;;		_I2C1_DO_RX
 10627 ;;		_I2C1_MasterFsm
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631     0FE2                     _I2C1_DO_RX_NACK_STOP:	
 10632                           ;psect for function _I2C1_DO_RX_NACK_STOP
 10633                           
 10634     0FE2                     i1l3221:	
 10635                           ;incstack = 0
 10636                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 10637                           
 10638                           
 10639                           ;mcc_generated_files/i2c1_master.c: 485:     I2C1_MasterSendNack();
 10640     0FE2  318F  27B3  318F   	fcall	_I2C1_MasterSendNack
 10641     0FE5                     i1l3223:
 10642                           
 10643                           ;mcc_generated_files/i2c1_master.c: 486:     return I2C1_SEND_STOP;
 10644     0FE5  300A               	movlw	10
 10645     0FE6                     i1l444:
 10646     0FE6  0008               	return
 10647     0FE7                     __end_of_I2C1_DO_RX_NACK_STOP:
 10648                           
 10649                           	psect	text49
 10650     0FDD                     __ptext49:	
 10651 ;; *************** function _I2C1_DO_RX_ACK *****************
 10652 ;; Defined at:
 10653 ;;		line 476 in file "mcc_generated_files/i2c1_master.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;		None
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;		None
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      enum E12623
 10660 ;; Registers used:
 10661 ;;		wreg, status,2, status,0, pclath, cstack
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10671 ;;Total ram usage:        0 bytes
 10672 ;; Hardware stack levels used: 1
 10673 ;; Hardware stack levels required when called: 1
 10674 ;; This function calls:
 10675 ;;		_I2C1_MasterSendAck
 10676 ;; This function is called by:
 10677 ;;		_I2C1_MasterFsm
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681     0FDD                     _I2C1_DO_RX_ACK:	
 10682                           ;psect for function _I2C1_DO_RX_ACK
 10683                           
 10684     0FDD                     i1l3485:	
 10685                           ;incstack = 0
 10686                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 10687                           
 10688                           
 10689                           ;mcc_generated_files/i2c1_master.c: 478:     I2C1_MasterSendAck();
 10690     0FDD  318F  27B7  318F   	fcall	_I2C1_MasterSendAck
 10691     0FE0                     i1l3487:
 10692                           
 10693                           ;mcc_generated_files/i2c1_master.c: 479:     return I2C1_RCEN;
 10694     0FE0  3005               	movlw	5
 10695     0FE1                     i1l441:
 10696     0FE1  0008               	return
 10697     0FE2                     __end_of_I2C1_DO_RX_ACK:
 10698                           
 10699                           	psect	text50
 10700     0FD8                     __ptext50:	
 10701 ;; *************** function _I2C1_DO_SEND_STOP *****************
 10702 ;; Defined at:
 10703 ;;		line 470 in file "mcc_generated_files/i2c1_master.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;		None
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;		None
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  1    wreg      enum E12623
 10710 ;; Registers used:
 10711 ;;		wreg, status,2, status,0, pclath, cstack
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;Total ram usage:        0 bytes
 10722 ;; Hardware stack levels used: 1
 10723 ;; Hardware stack levels required when called: 1
 10724 ;; This function calls:
 10725 ;;		_I2C1_MasterStop
 10726 ;; This function is called by:
 10727 ;;		_I2C1_DO_TX
 10728 ;;		_I2C1_DO_TX_EMPTY
 10729 ;;		_I2C1_DO_ADDRESS_NACK
 10730 ;;		_I2C1_MasterFsm
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734     0FD8                     _I2C1_DO_SEND_STOP:	
 10735                           ;psect for function _I2C1_DO_SEND_STOP
 10736                           
 10737     0FD8                     i1l3203:	
 10738                           ;incstack = 0
 10739                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 10740                           
 10741                           
 10742                           ;mcc_generated_files/i2c1_master.c: 472:     I2C1_MasterStop();
 10743     0FD8  318F  2795  318F   	fcall	_I2C1_MasterStop
 10744     0FDB                     i1l3205:
 10745                           
 10746                           ;mcc_generated_files/i2c1_master.c: 473:     return I2C1_IDLE;
 10747     0FDB  3000               	movlw	0
 10748     0FDC                     i1l438:
 10749     0FDC  0008               	return
 10750     0FDD                     __end_of_I2C1_DO_SEND_STOP:
 10751                           
 10752                           	psect	text51
 10753     0FD3                     __ptext51:	
 10754 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 10755 ;; Defined at:
 10756 ;;		line 464 in file "mcc_generated_files/i2c1_master.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;		None
 10759 ;; Auto vars:     Size  Location     Type
 10760 ;;		None
 10761 ;; Return value:  Size  Location     Type
 10762 ;;                  1    wreg      enum E12623
 10763 ;; Registers used:
 10764 ;;		wreg, status,2, status,0, pclath, cstack
 10765 ;; Tracked objects:
 10766 ;;		On entry : 0/0
 10767 ;;		On exit  : 0/0
 10768 ;;		Unchanged: 0/0
 10769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;Total ram usage:        0 bytes
 10775 ;; Hardware stack levels used: 1
 10776 ;; Hardware stack levels required when called: 1
 10777 ;; This function calls:
 10778 ;;		_I2C1_MasterEnableRestart
 10779 ;; This function is called by:
 10780 ;;		_I2C1_DO_TX_EMPTY
 10781 ;;		_I2C1_DO_ADDRESS_NACK
 10782 ;;		_I2C1_MasterFsm
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           
 10786     0FD3                     _I2C1_DO_SEND_RESTART:	
 10787                           ;psect for function _I2C1_DO_SEND_RESTART
 10788                           
 10789     0FD3                     i1l3229:	
 10790                           ;incstack = 0
 10791                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 10792                           
 10793                           
 10794                           ;mcc_generated_files/i2c1_master.c: 466:     I2C1_MasterEnableRestart();
 10795     0FD3  318F  2792  318F   	fcall	_I2C1_MasterEnableRestart
 10796     0FD6                     i1l3231:
 10797                           
 10798                           ;mcc_generated_files/i2c1_master.c: 467:     return I2C1_SEND_ADR_READ;
 10799     0FD6  3001               	movlw	1
 10800     0FD7                     i1l435:
 10801     0FD7  0008               	return
 10802     0FD8                     __end_of_I2C1_DO_SEND_RESTART:
 10803                           
 10804                           	psect	text52
 10805     0FCE                     __ptext52:	
 10806 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 10807 ;; Defined at:
 10808 ;;		line 457 in file "mcc_generated_files/i2c1_master.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;		None
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;		None
 10813 ;; Return value:  Size  Location     Type
 10814 ;;                  1    wreg      enum E12623
 10815 ;; Registers used:
 10816 ;;		wreg, status,2, status,0, pclath, cstack
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10826 ;;Total ram usage:        0 bytes
 10827 ;; Hardware stack levels used: 1
 10828 ;; Hardware stack levels required when called: 1
 10829 ;; This function calls:
 10830 ;;		_I2C1_MasterEnableRestart
 10831 ;; This function is called by:
 10832 ;;		_I2C1_DO_TX
 10833 ;;		_I2C1_MasterFsm
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837     0FCE                     _I2C1_DO_SEND_RESTART_WRITE:	
 10838                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 10839                           
 10840     0FCE                     i1l3197:	
 10841                           ;incstack = 0
 10842                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 10843                           
 10844                           
 10845                           ;mcc_generated_files/i2c1_master.c: 459:     I2C1_MasterEnableRestart();
 10846     0FCE  318F  2792  318F   	fcall	_I2C1_MasterEnableRestart
 10847     0FD1                     i1l3199:
 10848                           
 10849                           ;mcc_generated_files/i2c1_master.c: 460:     return I2C1_SEND_ADR_WRITE;
 10850     0FD1  3002               	movlw	2
 10851     0FD2                     i1l432:
 10852     0FD2  0008               	return
 10853     0FD3                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 10854                           
 10855                           	psect	text53
 10856     0FC9                     __ptext53:	
 10857 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 10858 ;; Defined at:
 10859 ;;		line 451 in file "mcc_generated_files/i2c1_master.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;		None
 10862 ;; Auto vars:     Size  Location     Type
 10863 ;;		None
 10864 ;; Return value:  Size  Location     Type
 10865 ;;                  1    wreg      enum E12623
 10866 ;; Registers used:
 10867 ;;		wreg, status,2, status,0, pclath, cstack
 10868 ;; Tracked objects:
 10869 ;;		On entry : 0/0
 10870 ;;		On exit  : 0/0
 10871 ;;		Unchanged: 0/0
 10872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10877 ;;Total ram usage:        0 bytes
 10878 ;; Hardware stack levels used: 1
 10879 ;; Hardware stack levels required when called: 1
 10880 ;; This function calls:
 10881 ;;		_I2C1_MasterEnableRestart
 10882 ;; This function is called by:
 10883 ;;		_I2C1_DO_TX
 10884 ;;		_I2C1_MasterFsm
 10885 ;; This function uses a non-reentrant model
 10886 ;;
 10887                           
 10888     0FC9                     _I2C1_DO_SEND_RESTART_READ:	
 10889                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 10890                           
 10891     0FC9                     i1l3191:	
 10892                           ;incstack = 0
 10893                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 10894                           
 10895                           
 10896                           ;mcc_generated_files/i2c1_master.c: 453:     I2C1_MasterEnableRestart();
 10897     0FC9  318F  2792  318F   	fcall	_I2C1_MasterEnableRestart
 10898     0FCC                     i1l3193:
 10899                           
 10900                           ;mcc_generated_files/i2c1_master.c: 454:     return I2C1_SEND_ADR_READ;
 10901     0FCC  3001               	movlw	1
 10902     0FCD                     i1l429:
 10903     0FCD  0008               	return
 10904     0FCE                     __end_of_I2C1_DO_SEND_RESTART_READ:
 10905                           
 10906                           	psect	text54
 10907     07E6                     __ptext54:	
 10908 ;; *************** function _I2C1_DO_RCEN *****************
 10909 ;; Defined at:
 10910 ;;		line 404 in file "mcc_generated_files/i2c1_master.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;		None
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;		None
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  1    wreg      enum E12623
 10917 ;; Registers used:
 10918 ;;		wreg, status,2, status,0, pclath, cstack
 10919 ;; Tracked objects:
 10920 ;;		On entry : 0/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;Total ram usage:        0 bytes
 10929 ;; Hardware stack levels used: 1
 10930 ;; Hardware stack levels required when called: 1
 10931 ;; This function calls:
 10932 ;;		_I2C1_MasterStartRx
 10933 ;; This function is called by:
 10934 ;;		_I2C1_MasterFsm
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938     07E6                     _I2C1_DO_RCEN:	
 10939                           ;psect for function _I2C1_DO_RCEN
 10940                           
 10941     07E6                     i1l3451:	
 10942                           ;incstack = 0
 10943                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 10944                           
 10945                           
 10946                           ;mcc_generated_files/i2c1_master.c: 406:     I2C1_Status.addressNackCheck = 0;
 10947     07E6  0021               	movlb	1	; select bank1
 10948     07E7  105D               	bcf	(_I2C1_Status^(0+128)+29),0
 10949     07E8                     i1l3453:
 10950                           
 10951                           ;mcc_generated_files/i2c1_master.c: 407:     I2C1_MasterStartRx();
 10952     07E8  318F  2798  3187   	fcall	_I2C1_MasterStartRx
 10953     07EB                     i1l3455:
 10954                           
 10955                           ;mcc_generated_files/i2c1_master.c: 408:     return I2C1_RX;
 10956     07EB  3004               	movlw	4
 10957     07EC                     i1l405:
 10958     07EC  0008               	return
 10959     07ED                     __end_of_I2C1_DO_RCEN:
 10960                           
 10961                           	psect	text55
 10962     0353                     __ptext55:	
 10963 ;; *************** function _I2C1_DO_RX *****************
 10964 ;; Defined at:
 10965 ;;		line 380 in file "mcc_generated_files/i2c1_master.c"
 10966 ;; Parameters:    Size  Location     Type
 10967 ;;		None
 10968 ;; Auto vars:     Size  Location     Type
 10969 ;;		None
 10970 ;; Return value:  Size  Location     Type
 10971 ;;                  1    wreg      enum E12623
 10972 ;; Registers used:
 10973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10974 ;; Tracked objects:
 10975 ;;		On entry : 0/0
 10976 ;;		On exit  : 0/0
 10977 ;;		Unchanged: 0/0
 10978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10981 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10983 ;;Total ram usage:        2 bytes
 10984 ;; Hardware stack levels used: 1
 10985 ;; Hardware stack levels required when called: 3
 10986 ;; This function calls:
 10987 ;;		NULL
 10988 ;;		_I2C1_CallbackReturnReset
 10989 ;;		_I2C1_CallbackReturnStop
 10990 ;;		_I2C1_DO_RX_NACK_RESTART
 10991 ;;		_I2C1_DO_RX_NACK_STOP
 10992 ;;		_I2C1_MasterGetRxData
 10993 ;;		_I2C1_MasterSendAck
 10994 ;;		_rd1RegCompleteHandler
 10995 ;;		_rd1RegCompleteHandler@i2c1_master_example$F146
 10996 ;;		_rd2RegCompleteHandler
 10997 ;;		_rd2RegCompleteHandler@i2c1_master_example$F157
 10998 ;;		_rdBlkRegCompleteHandler
 10999 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F180
 11000 ;;		_wr1RegCompleteHandler
 11001 ;;		_wr1RegCompleteHandler@i2c1_master_example$F163
 11002 ;;		_wr2RegCompleteHandler
 11003 ;;		_wr2RegCompleteHandler@i2c1_master_example$F169
 11004 ;; This function is called by:
 11005 ;;		_I2C1_MasterFsm
 11006 ;; This function uses a non-reentrant model
 11007 ;;
 11008                           
 11009     0353                     _I2C1_DO_RX:	
 11010                           ;psect for function _I2C1_DO_RX
 11011                           
 11012     0353                     i1l3419:	
 11013                           ;incstack = 0
 11014                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11015                           
 11016                           
 11017                           ;mcc_generated_files/i2c1_master.c: 382:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 11018     0353  0021               	movlb	1	; select bank1
 11019     0354  0857               	movf	(_I2C1_Status^(0+128)+23),w
 11020     0355  0086               	movwf	6
 11021     0356  0858               	movf	((_I2C1_Status+1)^(0+128)+23),w
 11022     0357  0087               	movwf	7
 11023     0358  318F  279B  3183   	fcall	_I2C1_MasterGetRxData
 11024     035B  0081               	movwf	1
 11025     035C                     i1l3421:
 11026     035C  3001               	movlw	1
 11027     035D  0021               	movlb	1	; select bank1
 11028     035E  07D7               	addwf	(_I2C1_Status^(0+128)+23),f
 11029     035F  3000               	movlw	0
 11030     0360  3DD8               	addwfc	((_I2C1_Status+1)^(0+128)+23),f
 11031     0361                     i1l3423:
 11032                           
 11033                           ;mcc_generated_files/i2c1_master.c: 383:     if(--I2C1_Status.data_length)
 11034     0361  3001               	movlw	1
 11035     0362  02D9               	subwf	(_I2C1_Status^(0+128)+25),f
 11036     0363  3000               	movlw	0
 11037     0364  3BDA               	subwfb	((_I2C1_Status+1)^(0+128)+25),f
 11038     0365  0859               	movf	(_I2C1_Status^(0+128)+25),w
 11039     0366  045A               	iorwf	((_I2C1_Status+1)^(0+128)+25),w
 11040     0367  1903               	btfsc	3,2
 11041     0368  2B6A               	goto	u131_21
 11042     0369  2B6B               	goto	u131_20
 11043     036A                     u131_21:
 11044     036A  2B70               	goto	i1l393
 11045     036B                     u131_20:
 11046     036B                     i1l3425:
 11047                           
 11048                           ;mcc_generated_files/i2c1_master.c: 384:     {;mcc_generated_files/i2c1_master.c: 385:  
      +                                 I2C1_MasterSendAck();
 11049     036B  318F  27B7  3183   	fcall	_I2C1_MasterSendAck
 11050     036E                     i1l3427:
 11051                           
 11052                           ;mcc_generated_files/i2c1_master.c: 386:         return I2C1_RCEN;
 11053     036E  3005               	movlw	5
 11054     036F  2B96               	goto	i1l394
 11055     0370                     i1l393:	
 11056                           ;mcc_generated_files/i2c1_master.c: 388:     else
 11057                           
 11058                           
 11059                           ;mcc_generated_files/i2c1_master.c: 389:     {;mcc_generated_files/i2c1_master.c: 390:  
      +                                 I2C1_Status.bufferFree = 1;
 11060     0370  15DD               	bsf	(_I2C1_Status^(0+128)+29),3
 11061                           
 11062                           ;mcc_generated_files/i2c1_master.c: 391:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 11063     0371  2B7A               	goto	i1l3443
 11064     0372                     i1l3433:
 11065                           
 11066                           ;mcc_generated_files/i2c1_master.c: 395:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 11067     0372  318F  27E7  3183   	fcall	_I2C1_DO_RX_NACK_RESTART
 11068     0375  2B96               	goto	i1l394
 11069     0376                     i1l3437:
 11070                           
 11071                           ;mcc_generated_files/i2c1_master.c: 399:                 return I2C1_DO_RX_NACK_STOP();
 11072     0376  318F  27E2  3183   	fcall	_I2C1_DO_RX_NACK_STOP
 11073     0379  2B96               	goto	i1l394
 11074     037A                     i1l3443:
 11075     037A  084C               	movf	(_I2C1_Status^(0+128)+12),w
 11076     037B  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 11077     037C  0841               	movf	(_I2C1_Status+1)^(0+128),w
 11078     037D  008A               	movwf	10
 11079     037E  0840               	movf	_I2C1_Status^(0+128),w
 11080     037F  000A               	callw
 11081     0380  3183               	pagesel	$
 11082     0381  00FA               	movwf	??_I2C1_DO_RX
 11083     0382  01FB               	clrf	??_I2C1_DO_RX+1
 11084                           
 11085                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11086                           ; Switch size 1, requested type "simple"
 11087                           ; Number of cases is 1, Range of values is 0 to 0
 11088                           ; switch strategies available:
 11089                           ; Name         Instructions Cycles
 11090                           ; simple_byte            4     3 (average)
 11091                           ; direct_byte            8     6 (fixed)
 11092                           ; jumptable            260     6 (fixed)
 11093                           ;	Chosen strategy is simple_byte
 11094     0383  087B               	movf	??_I2C1_DO_RX+1,w
 11095     0384  3A00               	xorlw	0	; case 0
 11096     0385  1903               	skipnz
 11097     0386  2B88               	goto	i1l4201
 11098     0387  2B76               	goto	i1l3437
 11099     0388                     i1l4201:
 11100                           
 11101                           ; Switch size 1, requested type "simple"
 11102                           ; Number of cases is 4, Range of values is 1 to 4
 11103                           ; switch strategies available:
 11104                           ; Name         Instructions Cycles
 11105                           ; simple_byte           13     7 (average)
 11106                           ; direct_byte           17     9 (fixed)
 11107                           ; jumptable            263     9 (fixed)
 11108                           ;	Chosen strategy is simple_byte
 11109     0388  087A               	movf	??_I2C1_DO_RX,w
 11110     0389  3A01               	xorlw	1	; case 1
 11111     038A  1903               	skipnz
 11112     038B  2B76               	goto	i1l3437
 11113     038C  3A03               	xorlw	3	; case 2
 11114     038D  1903               	skipnz
 11115     038E  2B72               	goto	i1l3433
 11116     038F  3A01               	xorlw	1	; case 3
 11117     0390  1903               	skipnz
 11118     0391  2B72               	goto	i1l3433
 11119     0392  3A07               	xorlw	7	; case 4
 11120     0393  1903               	skipnz
 11121     0394  2B76               	goto	i1l3437
 11122     0395  2B76               	goto	i1l3437
 11123     0396                     i1l394:
 11124     0396  0008               	return
 11125     0397                     __end_of_I2C1_DO_RX:
 11126                           
 11127                           	psect	text56
 11128     01DD                     __ptext56:	
 11129 ;; *************** function _I2C1_DO_TX *****************
 11130 ;; Defined at:
 11131 ;;		line 356 in file "mcc_generated_files/i2c1_master.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;		None
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;		None
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  1    wreg      enum E12623
 11138 ;; Registers used:
 11139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11140 ;; Tracked objects:
 11141 ;;		On entry : 0/0
 11142 ;;		On exit  : 0/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11147 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11148 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11149 ;;Total ram usage:        2 bytes
 11150 ;; Hardware stack levels used: 1
 11151 ;; Hardware stack levels required when called: 3
 11152 ;; This function calls:
 11153 ;;		NULL
 11154 ;;		_I2C1_CallbackReturnReset
 11155 ;;		_I2C1_CallbackReturnStop
 11156 ;;		_I2C1_DO_SEND_RESTART_READ
 11157 ;;		_I2C1_DO_SEND_RESTART_WRITE
 11158 ;;		_I2C1_DO_SEND_STOP
 11159 ;;		_I2C1_MasterIsNack
 11160 ;;		_I2C1_MasterSendTxData
 11161 ;;		_rd1RegCompleteHandler
 11162 ;;		_rd1RegCompleteHandler@i2c1_master_example$F146
 11163 ;;		_rd2RegCompleteHandler
 11164 ;;		_rd2RegCompleteHandler@i2c1_master_example$F157
 11165 ;;		_rdBlkRegCompleteHandler
 11166 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F180
 11167 ;;		_wr1RegCompleteHandler
 11168 ;;		_wr1RegCompleteHandler@i2c1_master_example$F163
 11169 ;;		_wr2RegCompleteHandler
 11170 ;;		_wr2RegCompleteHandler@i2c1_master_example$F169
 11171 ;; This function is called by:
 11172 ;;		_I2C1_MasterFsm
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176     01DD                     _I2C1_DO_TX:	
 11177                           ;psect for function _I2C1_DO_TX
 11178                           
 11179     01DD                     i1l3385:	
 11180                           ;incstack = 0
 11181                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11182                           
 11183                           
 11184                           ;mcc_generated_files/i2c1_master.c: 358:     if(I2C1_MasterIsNack())
 11185     01DD  3187  27F9  3181   	fcall	_I2C1_MasterIsNack
 11186     01E0  3A00               	xorlw	0
 11187     01E1  1903               	skipnz
 11188     01E2  29E4               	goto	u129_21
 11189     01E3  29E5               	goto	u129_20
 11190     01E4                     u129_21:
 11191     01E4  2A14               	goto	i1l377
 11192     01E5                     u129_20:
 11193     01E5  29F2               	goto	i1l3403
 11194     01E6                     i1l3389:
 11195                           
 11196                           ;mcc_generated_files/i2c1_master.c: 363:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 11197     01E6  318F  27C9  3181   	fcall	_I2C1_DO_SEND_RESTART_READ
 11198     01E9  2A2F               	goto	i1l380
 11199     01EA                     i1l3393:
 11200                           
 11201                           ;mcc_generated_files/i2c1_master.c: 365:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 11202     01EA  318F  27CE  3181   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 11203     01ED  2A2F               	goto	i1l380
 11204     01EE                     i1l3397:
 11205                           
 11206                           ;mcc_generated_files/i2c1_master.c: 369:                 return I2C1_DO_SEND_STOP();
 11207     01EE  318F  27D8  3181   	fcall	_I2C1_DO_SEND_STOP
 11208     01F1  2A2F               	goto	i1l380
 11209     01F2                     i1l3403:
 11210     01F2  0021               	movlb	1	; select bank1
 11211     01F3  084F               	movf	(_I2C1_Status^(0+128)+15),w
 11212     01F4  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 11213     01F5  30C0               	movlw	low _I2C1_Status
 11214     01F6  0086               	movwf	6
 11215     01F7  3000               	movlw	high _I2C1_Status
 11216     01F8  0087               	movwf	7
 11217     01F9  3146               	addfsr 1,6
 11218     01FA  3F41               	moviw [1]fsr1
 11219     01FB  008A               	movwf	10
 11220     01FC  3F40               	moviw [0]fsr1
 11221     01FD  000A               	callw
 11222     01FE  3181               	pagesel	$
 11223     01FF  00FA               	movwf	??_I2C1_DO_TX
 11224     0200  01FB               	clrf	??_I2C1_DO_TX+1
 11225                           
 11226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11227                           ; Switch size 1, requested type "simple"
 11228                           ; Number of cases is 1, Range of values is 0 to 0
 11229                           ; switch strategies available:
 11230                           ; Name         Instructions Cycles
 11231                           ; simple_byte            4     3 (average)
 11232                           ; direct_byte            8     6 (fixed)
 11233                           ; jumptable            260     6 (fixed)
 11234                           ;	Chosen strategy is simple_byte
 11235     0201  087B               	movf	??_I2C1_DO_TX+1,w
 11236     0202  3A00               	xorlw	0	; case 0
 11237     0203  1903               	skipnz
 11238     0204  2A06               	goto	i1l4203
 11239     0205  29EE               	goto	i1l3397
 11240     0206                     i1l4203:
 11241                           
 11242                           ; Switch size 1, requested type "simple"
 11243                           ; Number of cases is 4, Range of values is 1 to 4
 11244                           ; switch strategies available:
 11245                           ; Name         Instructions Cycles
 11246                           ; simple_byte           13     7 (average)
 11247                           ; direct_byte           17     9 (fixed)
 11248                           ; jumptable            263     9 (fixed)
 11249                           ;	Chosen strategy is simple_byte
 11250     0206  087A               	movf	??_I2C1_DO_TX,w
 11251     0207  3A01               	xorlw	1	; case 1
 11252     0208  1903               	skipnz
 11253     0209  29EE               	goto	i1l3397
 11254     020A  3A03               	xorlw	3	; case 2
 11255     020B  1903               	skipnz
 11256     020C  29E6               	goto	i1l3389
 11257     020D  3A01               	xorlw	1	; case 3
 11258     020E  1903               	skipnz
 11259     020F  29EA               	goto	i1l3393
 11260     0210  3A07               	xorlw	7	; case 4
 11261     0211  1903               	skipnz
 11262     0212  29EE               	goto	i1l3397
 11263     0213  29EE               	goto	i1l3397
 11264     0214                     i1l377:	
 11265                           ;mcc_generated_files/i2c1_master.c: 372:     else
 11266                           
 11267                           
 11268                           ;mcc_generated_files/i2c1_master.c: 373:     {;mcc_generated_files/i2c1_master.c: 374:  
      +                                 I2C1_Status.addressNackCheck = 0;
 11269     0214  0021               	movlb	1	; select bank1
 11270     0215  105D               	bcf	(_I2C1_Status^(0+128)+29),0
 11271     0216                     i1l3405:
 11272                           
 11273                           ;mcc_generated_files/i2c1_master.c: 375:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 11274     0216  0858               	movf	((_I2C1_Status+1)^(0+128)+23),w
 11275     0217  0087               	movwf	7
 11276     0218  0857               	movf	(_I2C1_Status^(0+128)+23),w
 11277     0219  0086               	movwf	6
 11278     021A  0AD7               	incf	(_I2C1_Status^(0+128)+23),f
 11279     021B  1903               	skipnz
 11280     021C  0AD8               	incf	((_I2C1_Status+1)^(0+128)+23),f
 11281     021D  0801               	movf	1,w
 11282     021E  318F  27BF  3181   	fcall	_I2C1_MasterSendTxData
 11283     0221                     i1l3407:
 11284                           
 11285                           ;mcc_generated_files/i2c1_master.c: 376:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 11286     0221  3001               	movlw	1
 11287     0222  0021               	movlb	1	; select bank1
 11288     0223  02D9               	subwf	(_I2C1_Status^(0+128)+25),f
 11289     0224  3000               	movlw	0
 11290     0225  3BDA               	subwfb	((_I2C1_Status+1)^(0+128)+25),f
 11291     0226  0859               	movf	(_I2C1_Status^(0+128)+25),w
 11292     0227  045A               	iorwf	((_I2C1_Status+1)^(0+128)+25),w
 11293     0228  1D03               	btfss	3,2
 11294     0229  2A2B               	goto	u130_21
 11295     022A  2A2C               	goto	u130_20
 11296     022B                     u130_21:
 11297     022B  2A2E               	goto	i1l3411
 11298     022C                     u130_20:
 11299     022C                     i1l3409:
 11300     022C  3006               	movlw	6
 11301     022D  2A2F               	goto	i1l380
 11302     022E                     i1l3411:
 11303     022E  3003               	movlw	3
 11304     022F                     i1l380:
 11305     022F  0008               	return
 11306     0230                     __end_of_I2C1_DO_TX:
 11307                           
 11308                           	psect	text57
 11309     07D7                     __ptext57:	
 11310 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 11311 ;; Defined at:
 11312 ;;		line 349 in file "mcc_generated_files/i2c1_master.c"
 11313 ;; Parameters:    Size  Location     Type
 11314 ;;		None
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;		None
 11317 ;; Return value:  Size  Location     Type
 11318 ;;                  1    wreg      enum E12623
 11319 ;; Registers used:
 11320 ;;		wreg, status,2, status,0, pclath, cstack
 11321 ;; Tracked objects:
 11322 ;;		On entry : 0/0
 11323 ;;		On exit  : 0/0
 11324 ;;		Unchanged: 0/0
 11325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;Total ram usage:        0 bytes
 11331 ;; Hardware stack levels used: 1
 11332 ;; Hardware stack levels required when called: 1
 11333 ;; This function calls:
 11334 ;;		_I2C1_MasterSendTxData
 11335 ;; This function is called by:
 11336 ;;		_I2C1_MasterFsm
 11337 ;; This function uses a non-reentrant model
 11338 ;;
 11339                           
 11340     07D7                     _I2C1_DO_SEND_ADR_WRITE:	
 11341                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 11342                           
 11343     07D7                     i1l3377:	
 11344                           ;incstack = 0
 11345                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11346                           
 11347                           
 11348                           ;mcc_generated_files/i2c1_master.c: 351:     I2C1_Status.addressNackCheck = 1;
 11349     07D7  0021               	movlb	1	; select bank1
 11350     07D8  145D               	bsf	(_I2C1_Status^(0+128)+29),0
 11351     07D9                     i1l3379:
 11352                           
 11353                           ;mcc_generated_files/i2c1_master.c: 352:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 11354     07D9  3556               	lslf	(_I2C1_Status^(0+128)+22),w
 11355     07DA  318F  27BF  3187   	fcall	_I2C1_MasterSendTxData
 11356     07DD                     i1l3381:
 11357                           
 11358                           ;mcc_generated_files/i2c1_master.c: 353:     return I2C1_TX;
 11359     07DD  3003               	movlw	3
 11360     07DE                     i1l374:
 11361     07DE  0008               	return
 11362     07DF                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 11363                           
 11364                           	psect	text58
 11365     07C6                     __ptext58:	
 11366 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 11367 ;; Defined at:
 11368 ;;		line 342 in file "mcc_generated_files/i2c1_master.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;		None
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;		None
 11373 ;; Return value:  Size  Location     Type
 11374 ;;                  1    wreg      enum E12623
 11375 ;; Registers used:
 11376 ;;		wreg, status,2, status,0, pclath, cstack
 11377 ;; Tracked objects:
 11378 ;;		On entry : 0/0
 11379 ;;		On exit  : 0/0
 11380 ;;		Unchanged: 0/0
 11381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11386 ;;Total ram usage:        0 bytes
 11387 ;; Hardware stack levels used: 1
 11388 ;; Hardware stack levels required when called: 1
 11389 ;; This function calls:
 11390 ;;		_I2C1_MasterSendTxData
 11391 ;; This function is called by:
 11392 ;;		_I2C1_MasterFsm
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           
 11396     07C6                     _I2C1_DO_SEND_ADR_READ:	
 11397                           ;psect for function _I2C1_DO_SEND_ADR_READ
 11398                           
 11399     07C6                     i1l3369:	
 11400                           ;incstack = 0
 11401                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 11402                           
 11403                           
 11404                           ;mcc_generated_files/i2c1_master.c: 344:     I2C1_Status.addressNackCheck = 1;
 11405     07C6  0021               	movlb	1	; select bank1
 11406     07C7  145D               	bsf	(_I2C1_Status^(0+128)+29),0
 11407     07C8                     i1l3371:
 11408                           
 11409                           ;mcc_generated_files/i2c1_master.c: 345:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 11410     07C8  1403               	setc
 11411     07C9  0D56               	rlf	(_I2C1_Status^(0+128)+22),w
 11412     07CA  318F  27BF  3187   	fcall	_I2C1_MasterSendTxData
 11413     07CD                     i1l3373:
 11414                           
 11415                           ;mcc_generated_files/i2c1_master.c: 346:     return I2C1_RCEN;
 11416     07CD  3005               	movlw	5
 11417     07CE                     i1l371:
 11418     07CE  0008               	return
 11419     07CF                     __end_of_I2C1_DO_SEND_ADR_READ:
 11420                           
 11421                           	psect	text59
 11422     0FC4                     __ptext59:	
 11423 ;; *************** function _I2C1_DO_IDLE *****************
 11424 ;; Defined at:
 11425 ;;		line 335 in file "mcc_generated_files/i2c1_master.c"
 11426 ;; Parameters:    Size  Location     Type
 11427 ;;		None
 11428 ;; Auto vars:     Size  Location     Type
 11429 ;;		None
 11430 ;; Return value:  Size  Location     Type
 11431 ;;                  1    wreg      enum E12623
 11432 ;; Registers used:
 11433 ;;		wreg, status,2
 11434 ;; Tracked objects:
 11435 ;;		On entry : 0/0
 11436 ;;		On exit  : 0/0
 11437 ;;		Unchanged: 0/0
 11438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;Total ram usage:        0 bytes
 11444 ;; Hardware stack levels used: 1
 11445 ;; This function calls:
 11446 ;;		Nothing
 11447 ;; This function is called by:
 11448 ;;		_I2C1_MasterFsm
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452     0FC4                     _I2C1_DO_IDLE:	
 11453                           ;psect for function _I2C1_DO_IDLE
 11454                           
 11455     0FC4                     i1l3361:	
 11456                           ;incstack = 0
 11457                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 11458                           
 11459                           
 11460                           ;mcc_generated_files/i2c1_master.c: 337:     I2C1_Status.busy = 0;
 11461     0FC4  0021               	movlb	1	; select bank1
 11462     0FC5  10DD               	bcf	(_I2C1_Status^(0+128)+29),1
 11463     0FC6                     i1l3363:
 11464                           
 11465                           ;mcc_generated_files/i2c1_master.c: 338:     I2C1_Status.error = I2C1_NOERR;
 11466     0FC6  01DC               	clrf	(_I2C1_Status^(0+128)+28)
 11467     0FC7                     i1l3365:
 11468                           
 11469                           ;mcc_generated_files/i2c1_master.c: 339:     return I2C1_RESET;
 11470     0FC7  300E               	movlw	14
 11471     0FC8                     i1l368:
 11472     0FC8  0008               	return
 11473     0FC9                     __end_of_I2C1_DO_IDLE:
 11474                           
 11475                           	psect	text60
 11476     04CF                     __ptext60:	
 11477 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 11478 ;; Defined at:
 11479 ;;		line 411 in file "mcc_generated_files/i2c1_master.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;		None
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;		None
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  1    wreg      enum E12623
 11486 ;; Registers used:
 11487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/0
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;Total ram usage:        2 bytes
 11498 ;; Hardware stack levels used: 1
 11499 ;; Hardware stack levels required when called: 3
 11500 ;; This function calls:
 11501 ;;		NULL
 11502 ;;		_I2C1_CallbackReturnReset
 11503 ;;		_I2C1_CallbackReturnStop
 11504 ;;		_I2C1_DO_SEND_RESTART
 11505 ;;		_I2C1_DO_SEND_STOP
 11506 ;;		_I2C1_MasterSetIrq
 11507 ;;		_rd1RegCompleteHandler
 11508 ;;		_rd1RegCompleteHandler@i2c1_master_example$F146
 11509 ;;		_rd2RegCompleteHandler
 11510 ;;		_rd2RegCompleteHandler@i2c1_master_example$F157
 11511 ;;		_rdBlkRegCompleteHandler
 11512 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F180
 11513 ;;		_wr1RegCompleteHandler
 11514 ;;		_wr1RegCompleteHandler@i2c1_master_example$F163
 11515 ;;		_wr2RegCompleteHandler
 11516 ;;		_wr2RegCompleteHandler@i2c1_master_example$F169
 11517 ;; This function is called by:
 11518 ;;		_I2C1_MasterFsm
 11519 ;; This function uses a non-reentrant model
 11520 ;;
 11521                           
 11522     04CF                     _I2C1_DO_TX_EMPTY:	
 11523                           ;psect for function _I2C1_DO_TX_EMPTY
 11524                           
 11525     04CF                     i1l3459:	
 11526                           ;incstack = 0
 11527                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11528                           
 11529                           
 11530                           ;mcc_generated_files/i2c1_master.c: 413:     I2C1_Status.bufferFree = 1;
 11531     04CF  0021               	movlb	1	; select bank1
 11532     04D0  15DD               	bsf	(_I2C1_Status^(0+128)+29),3
 11533                           
 11534                           ;mcc_generated_files/i2c1_master.c: 414:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 11535     04D1  2CDF               	goto	i1l3477
 11536     04D2                     i1l3461:
 11537                           
 11538                           ;mcc_generated_files/i2c1_master.c: 418:             return I2C1_DO_SEND_RESTART();
 11539     04D2  318F  27D3  3184   	fcall	_I2C1_DO_SEND_RESTART
 11540     04D5  2CFB               	goto	i1l411
 11541     04D6                     i1l3465:
 11542                           
 11543                           ;mcc_generated_files/i2c1_master.c: 420:             I2C1_MasterSetIrq();
 11544     04D6  318F  279E  3184   	fcall	_I2C1_MasterSetIrq
 11545     04D9                     i1l3467:
 11546                           
 11547                           ;mcc_generated_files/i2c1_master.c: 421:             return I2C1_TX;
 11548     04D9  3003               	movlw	3
 11549     04DA  2CFB               	goto	i1l411
 11550     04DB                     i1l3471:
 11551                           
 11552                           ;mcc_generated_files/i2c1_master.c: 424:             return I2C1_DO_SEND_STOP();
 11553     04DB  318F  27D8  3184   	fcall	_I2C1_DO_SEND_STOP
 11554     04DE  2CFB               	goto	i1l411
 11555     04DF                     i1l3477:
 11556     04DF  084C               	movf	(_I2C1_Status^(0+128)+12),w
 11557     04E0  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 11558     04E1  0841               	movf	(_I2C1_Status+1)^(0+128),w
 11559     04E2  008A               	movwf	10
 11560     04E3  0840               	movf	_I2C1_Status^(0+128),w
 11561     04E4  000A               	callw
 11562     04E5  3184               	pagesel	$
 11563     04E6  00FA               	movwf	??_I2C1_DO_TX_EMPTY
 11564     04E7  01FB               	clrf	??_I2C1_DO_TX_EMPTY+1
 11565                           
 11566                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11567                           ; Switch size 1, requested type "simple"
 11568                           ; Number of cases is 1, Range of values is 0 to 0
 11569                           ; switch strategies available:
 11570                           ; Name         Instructions Cycles
 11571                           ; simple_byte            4     3 (average)
 11572                           ; direct_byte            8     6 (fixed)
 11573                           ; jumptable            260     6 (fixed)
 11574                           ;	Chosen strategy is simple_byte
 11575     04E8  087B               	movf	??_I2C1_DO_TX_EMPTY+1,w
 11576     04E9  3A00               	xorlw	0	; case 0
 11577     04EA  1903               	skipnz
 11578     04EB  2CED               	goto	i1l4205
 11579     04EC  2CDB               	goto	i1l3471
 11580     04ED                     i1l4205:
 11581                           
 11582                           ; Switch size 1, requested type "simple"
 11583                           ; Number of cases is 4, Range of values is 1 to 4
 11584                           ; switch strategies available:
 11585                           ; Name         Instructions Cycles
 11586                           ; simple_byte           13     7 (average)
 11587                           ; direct_byte           17     9 (fixed)
 11588                           ; jumptable            263     9 (fixed)
 11589                           ;	Chosen strategy is simple_byte
 11590     04ED  087A               	movf	??_I2C1_DO_TX_EMPTY,w
 11591     04EE  3A01               	xorlw	1	; case 1
 11592     04EF  1903               	skipnz
 11593     04F0  2CDB               	goto	i1l3471
 11594     04F1  3A03               	xorlw	3	; case 2
 11595     04F2  1903               	skipnz
 11596     04F3  2CD2               	goto	i1l3461
 11597     04F4  3A01               	xorlw	1	; case 3
 11598     04F5  1903               	skipnz
 11599     04F6  2CD2               	goto	i1l3461
 11600     04F7  3A07               	xorlw	7	; case 4
 11601     04F8  1903               	skipnz
 11602     04F9  2CD6               	goto	i1l3465
 11603     04FA  2CDB               	goto	i1l3471
 11604     04FB                     i1l411:
 11605     04FB  0008               	return
 11606     04FC                     __end_of_I2C1_DO_TX_EMPTY:
 11607                           
 11608                           	psect	text61
 11609     0F9E                     __ptext61:	
 11610 ;; *************** function _I2C1_MasterSetIrq *****************
 11611 ;; Defined at:
 11612 ;;		line 647 in file "mcc_generated_files/i2c1_master.c"
 11613 ;; Parameters:    Size  Location     Type
 11614 ;;		None
 11615 ;; Auto vars:     Size  Location     Type
 11616 ;;		None
 11617 ;; Return value:  Size  Location     Type
 11618 ;;                  1    wreg      void 
 11619 ;; Registers used:
 11620 ;;		None
 11621 ;; Tracked objects:
 11622 ;;		On entry : 0/0
 11623 ;;		On exit  : 0/0
 11624 ;;		Unchanged: 0/0
 11625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11630 ;;Total ram usage:        0 bytes
 11631 ;; Hardware stack levels used: 1
 11632 ;; This function calls:
 11633 ;;		Nothing
 11634 ;; This function is called by:
 11635 ;;		_I2C1_DO_TX_EMPTY
 11636 ;; This function uses a non-reentrant model
 11637 ;;
 11638                           
 11639     0F9E                     _I2C1_MasterSetIrq:	
 11640                           ;psect for function _I2C1_MasterSetIrq
 11641                           
 11642     0F9E                     i1l3235:	
 11643                           ;incstack = 0
 11644                           ; Regs used in _I2C1_MasterSetIrq: []
 11645                           
 11646                           
 11647                           ;mcc_generated_files/i2c1_master.c: 649:     PIR3bits.SSP1IF = 1;
 11648     0F9E  002E               	movlb	14	; select bank14
 11649     0F9F  140F               	bsf	15,0	;volatile
 11650     0FA0                     i1l531:
 11651     0FA0  0008               	return
 11652     0FA1                     __end_of_I2C1_MasterSetIrq:
 11653                           
 11654                           	psect	text62
 11655     07F9                     __ptext62:	
 11656 ;; *************** function _I2C1_MasterIsNack *****************
 11657 ;; Defined at:
 11658 ;;		line 599 in file "mcc_generated_files/i2c1_master.c"
 11659 ;; Parameters:    Size  Location     Type
 11660 ;;		None
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;		None
 11663 ;; Return value:  Size  Location     Type
 11664 ;;                  1    wreg      _Bool 
 11665 ;; Registers used:
 11666 ;;		wreg, status,2, status,0
 11667 ;; Tracked objects:
 11668 ;;		On entry : 0/0
 11669 ;;		On exit  : 0/0
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;Total ram usage:        0 bytes
 11677 ;; Hardware stack levels used: 1
 11678 ;; This function calls:
 11679 ;;		Nothing
 11680 ;; This function is called by:
 11681 ;;		_I2C1_MasterFsm
 11682 ;;		_I2C1_DO_TX
 11683 ;; This function uses a non-reentrant model
 11684 ;;
 11685                           
 11686     07F9                     _I2C1_MasterIsNack:	
 11687                           ;psect for function _I2C1_MasterIsNack
 11688                           
 11689     07F9                     i1l3185:	
 11690                           ;incstack = 0
 11691                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 11692                           
 11693                           
 11694                           ;mcc_generated_files/i2c1_master.c: 601:     return SSP1CON2bits.ACKSTAT;
 11695     07F9  0023               	movlb	3	; select bank3
 11696     07FA  0E11               	swapf	17,w	;volatile
 11697     07FB  0C89               	rrf	9,f
 11698     07FC  0C89               	rrf	9,f
 11699     07FD  3901               	andlw	1
 11700     07FE                     i1l504:
 11701     07FE  0008               	return
 11702     07FF                     __end_of_I2C1_MasterIsNack:
 11703                           
 11704                           	psect	text63
 11705     0FBF                     __ptext63:	
 11706 ;; *************** function _I2C1_MasterSendTxData *****************
 11707 ;; Defined at:
 11708 ;;		line 569 in file "mcc_generated_files/i2c1_master.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;  data            1    wreg     unsigned char 
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;  data            1    0[COMMON] unsigned char 
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  1    wreg      void 
 11715 ;; Registers used:
 11716 ;;		wreg
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/0
 11719 ;;		On exit  : 0/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11726 ;;Total ram usage:        1 bytes
 11727 ;; Hardware stack levels used: 1
 11728 ;; This function calls:
 11729 ;;		Nothing
 11730 ;; This function is called by:
 11731 ;;		_I2C1_DO_SEND_ADR_READ
 11732 ;;		_I2C1_DO_SEND_ADR_WRITE
 11733 ;;		_I2C1_DO_TX
 11734 ;; This function uses a non-reentrant model
 11735 ;;
 11736                           
 11737     0FBF                     _I2C1_MasterSendTxData:	
 11738                           ;psect for function _I2C1_MasterSendTxData
 11739                           
 11740                           
 11741                           ;incstack = 0
 11742                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 11743                           ;I2C1_MasterSendTxData@data stored from wreg
 11744     0FBF  00F0               	movwf	I2C1_MasterSendTxData@data
 11745     0FC0                     i1l3189:
 11746                           
 11747                           ;mcc_generated_files/i2c1_master.c: 569: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 570: {;mcc_generated_files/i
      +                          2c1_master.c: 571:     SSP1BUF = data;
 11748     0FC0  0870               	movf	I2C1_MasterSendTxData@data,w
 11749     0FC1  0023               	movlb	3	; select bank3
 11750     0FC2  008C               	movwf	12	;volatile
 11751     0FC3                     i1l486:
 11752     0FC3  0008               	return
 11753     0FC4                     __end_of_I2C1_MasterSendTxData:
 11754                           
 11755                           	psect	text64
 11756     0FB7                     __ptext64:	
 11757 ;; *************** function _I2C1_MasterSendAck *****************
 11758 ;; Defined at:
 11759 ;;		line 604 in file "mcc_generated_files/i2c1_master.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;		None
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;		None
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  1    wreg      void 
 11766 ;; Registers used:
 11767 ;;		None
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11777 ;;Total ram usage:        0 bytes
 11778 ;; Hardware stack levels used: 1
 11779 ;; This function calls:
 11780 ;;		Nothing
 11781 ;; This function is called by:
 11782 ;;		_I2C1_DO_RX
 11783 ;;		_I2C1_DO_RX_ACK
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787     0FB7                     _I2C1_MasterSendAck:	
 11788                           ;psect for function _I2C1_MasterSendAck
 11789                           
 11790     0FB7                     i1l3213:	
 11791                           ;incstack = 0
 11792                           ; Regs used in _I2C1_MasterSendAck: []
 11793                           
 11794                           
 11795                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKDT = 0;
 11796     0FB7  0023               	movlb	3	; select bank3
 11797     0FB8  1291               	bcf	17,5	;volatile
 11798                           
 11799                           ;mcc_generated_files/i2c1_master.c: 607:     SSP1CON2bits.ACKEN = 1;
 11800     0FB9  1611               	bsf	17,4	;volatile
 11801     0FBA                     i1l507:
 11802     0FBA  0008               	return
 11803     0FBB                     __end_of_I2C1_MasterSendAck:
 11804                           
 11805                           	psect	text65
 11806     0F9B                     __ptext65:	
 11807 ;; *************** function _I2C1_MasterGetRxData *****************
 11808 ;; Defined at:
 11809 ;;		line 564 in file "mcc_generated_files/i2c1_master.c"
 11810 ;; Parameters:    Size  Location     Type
 11811 ;;		None
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;		None
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  1    wreg      unsigned char 
 11816 ;; Registers used:
 11817 ;;		wreg
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;Total ram usage:        0 bytes
 11828 ;; Hardware stack levels used: 1
 11829 ;; This function calls:
 11830 ;;		Nothing
 11831 ;; This function is called by:
 11832 ;;		_I2C1_DO_RX
 11833 ;; This function uses a non-reentrant model
 11834 ;;
 11835                           
 11836     0F9B                     _I2C1_MasterGetRxData:	
 11837                           ;psect for function _I2C1_MasterGetRxData
 11838                           
 11839     0F9B                     i1l3209:	
 11840                           ;incstack = 0
 11841                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 11842                           
 11843                           
 11844                           ;mcc_generated_files/i2c1_master.c: 566:     return SSP1BUF;
 11845     0F9B  0023               	movlb	3	; select bank3
 11846     0F9C  080C               	movf	12,w	;volatile
 11847     0F9D                     i1l483:
 11848     0F9D  0008               	return
 11849     0F9E                     __end_of_I2C1_MasterGetRxData:
 11850                           
 11851                           	psect	text66
 11852     0FB3                     __ptext66:	
 11853 ;; *************** function _I2C1_MasterSendNack *****************
 11854 ;; Defined at:
 11855 ;;		line 610 in file "mcc_generated_files/i2c1_master.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;		None
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;		None
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  1    wreg      void 
 11862 ;; Registers used:
 11863 ;;		None
 11864 ;; Tracked objects:
 11865 ;;		On entry : 0/0
 11866 ;;		On exit  : 0/0
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11873 ;;Total ram usage:        0 bytes
 11874 ;; Hardware stack levels used: 1
 11875 ;; This function calls:
 11876 ;;		Nothing
 11877 ;; This function is called by:
 11878 ;;		_I2C1_DO_RX_NACK_STOP
 11879 ;;		_I2C1_DO_RX_NACK_RESTART
 11880 ;; This function uses a non-reentrant model
 11881 ;;
 11882                           
 11883     0FB3                     _I2C1_MasterSendNack:	
 11884                           ;psect for function _I2C1_MasterSendNack
 11885                           
 11886     0FB3                     i1l3101:	
 11887                           ;incstack = 0
 11888                           ; Regs used in _I2C1_MasterSendNack: []
 11889                           
 11890                           
 11891                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKDT = 1;
 11892     0FB3  0023               	movlb	3	; select bank3
 11893     0FB4  1691               	bsf	17,5	;volatile
 11894                           
 11895                           ;mcc_generated_files/i2c1_master.c: 613:     SSP1CON2bits.ACKEN = 1;
 11896     0FB5  1611               	bsf	17,4	;volatile
 11897     0FB6                     i1l510:
 11898     0FB6  0008               	return
 11899     0FB7                     __end_of_I2C1_MasterSendNack:
 11900                           
 11901                           	psect	text67
 11902     0F98                     __ptext67:	
 11903 ;; *************** function _I2C1_MasterStartRx *****************
 11904 ;; Defined at:
 11905 ;;		line 584 in file "mcc_generated_files/i2c1_master.c"
 11906 ;; Parameters:    Size  Location     Type
 11907 ;;		None
 11908 ;; Auto vars:     Size  Location     Type
 11909 ;;		None
 11910 ;; Return value:  Size  Location     Type
 11911 ;;                  1    wreg      void 
 11912 ;; Registers used:
 11913 ;;		None
 11914 ;; Tracked objects:
 11915 ;;		On entry : 0/0
 11916 ;;		On exit  : 0/0
 11917 ;;		Unchanged: 0/0
 11918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11923 ;;Total ram usage:        0 bytes
 11924 ;; Hardware stack levels used: 1
 11925 ;; This function calls:
 11926 ;;		Nothing
 11927 ;; This function is called by:
 11928 ;;		_I2C1_DO_RCEN
 11929 ;; This function uses a non-reentrant model
 11930 ;;
 11931                           
 11932     0F98                     _I2C1_MasterStartRx:	
 11933                           ;psect for function _I2C1_MasterStartRx
 11934                           
 11935     0F98                     i1l3227:	
 11936                           ;incstack = 0
 11937                           ; Regs used in _I2C1_MasterStartRx: []
 11938                           
 11939                           
 11940                           ;mcc_generated_files/i2c1_master.c: 586:     SSP1CON2bits.RCEN = 1;
 11941     0F98  0023               	movlb	3	; select bank3
 11942     0F99  1591               	bsf	17,3	;volatile
 11943     0F9A                     i1l495:
 11944     0F9A  0008               	return
 11945     0F9B                     __end_of_I2C1_MasterStartRx:
 11946                           
 11947                           	psect	text68
 11948     0002                     __ptext68:	
 11949 ;; *************** function _I2C1_CallbackReturnReset *****************
 11950 ;; Defined at:
 11951 ;;		line 526 in file "mcc_generated_files/i2c1_master.c"
 11952 ;; Parameters:    Size  Location     Type
 11953 ;;  funPtr          1    9[COMMON] PTR void 
 11954 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 11955 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 11956 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 11957 ;; Auto vars:     Size  Location     Type
 11958 ;;		None
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  1    wreg      enum E363
 11961 ;; Registers used:
 11962 ;;		wreg
 11963 ;; Tracked objects:
 11964 ;;		On entry : 0/0
 11965 ;;		On exit  : 0/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11968 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11971 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11972 ;;Total ram usage:        1 bytes
 11973 ;; Hardware stack levels used: 1
 11974 ;; This function calls:
 11975 ;;		Nothing
 11976 ;; This function is called by:
 11977 ;;		_I2C1_Open
 11978 ;;		_I2C1_DO_TX
 11979 ;;		_I2C1_DO_RX
 11980 ;;		_I2C1_DO_TX_EMPTY
 11981 ;;		_I2C1_DO_ADDRESS_NACK
 11982 ;;		_I2C1_DO_RX_EMPTY
 11983 ;; This function uses a non-reentrant model
 11984 ;;
 11985                           
 11986     0002                     _I2C1_CallbackReturnReset:	
 11987                           ;psect for function _I2C1_CallbackReturnReset
 11988                           
 11989     0002                     i1l3241:	
 11990                           ;incstack = 0
 11991                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 11992                           
 11993                           
 11994                           ;mcc_generated_files/i2c1_master.c: 526: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 527: {;mcc_generated_files/i2c1_master.c: 5
      +                          28:     return I2C1_RESET_LINK;
 11995     0002  3005               	movlw	5
 11996     0003                     i1l467:
 11997     0003  0008               	return
 11998     0004                     __end_of_I2C1_CallbackReturnReset:
 11999                           
 12000                           	psect	text69
 12001     0F90                     __ptext69:	
 12002 ;; *************** function _I2C1_CallbackReturnStop *****************
 12003 ;; Defined at:
 12004 ;;		line 521 in file "mcc_generated_files/i2c1_master.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;  funPtr          1    9[COMMON] PTR void 
 12007 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12008 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12009 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12010 ;; Auto vars:     Size  Location     Type
 12011 ;;		None
 12012 ;; Return value:  Size  Location     Type
 12013 ;;                  1    wreg      enum E363
 12014 ;; Registers used:
 12015 ;;		wreg
 12016 ;; Tracked objects:
 12017 ;;		On entry : 0/0
 12018 ;;		On exit  : 0/0
 12019 ;;		Unchanged: 0/0
 12020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12021 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12025 ;;Total ram usage:        1 bytes
 12026 ;; Hardware stack levels used: 1
 12027 ;; This function calls:
 12028 ;;		Nothing
 12029 ;; This function is called by:
 12030 ;;		_I2C1_Open
 12031 ;;		_I2C1_SetCallback
 12032 ;;		i1_I2C1_SetCallback
 12033 ;;		_I2C1_DO_TX
 12034 ;;		_I2C1_DO_RX
 12035 ;;		_I2C1_DO_TX_EMPTY
 12036 ;;		_I2C1_DO_ADDRESS_NACK
 12037 ;;		_I2C1_DO_RX_EMPTY
 12038 ;; This function uses a non-reentrant model
 12039 ;;
 12040                           
 12041     0F90                     _I2C1_CallbackReturnStop:	
 12042                           ;psect for function _I2C1_CallbackReturnStop
 12043                           
 12044     0F90                     i1l3237:	
 12045                           ;incstack = 0
 12046                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 12047                           
 12048                           
 12049                           ;mcc_generated_files/i2c1_master.c: 521: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 522: {;mcc_generated_files/i2c1_master.c: 52
      +                          3:     return I2C1_STOP;
 12050     0F90  3001               	movlw	1
 12051     0F91                     i1l464:
 12052     0F91  0008               	return
 12053     0F92                     __end_of_I2C1_CallbackReturnStop:
 12054                           
 12055                           	psect	text70
 12056     062B                     __ptext70:	
 12057 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F180 *****************
 12058 ;; Defined at:
 12059 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12060 ;; Parameters:    Size  Location     Type
 12061 ;;  ptr             1    9[COMMON] PTR void 
 12062 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12063 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12064 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12065 ;; Auto vars:     Size  Location     Type
 12066 ;;		None
 12067 ;; Return value:  Size  Location     Type
 12068 ;;                  1    wreg      enum E363
 12069 ;; Registers used:
 12070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12071 ;; Tracked objects:
 12072 ;;		On entry : 0/0
 12073 ;;		On exit  : 0/0
 12074 ;;		Unchanged: 0/0
 12075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12076 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12080 ;;Total ram usage:        1 bytes
 12081 ;; Hardware stack levels used: 1
 12082 ;; Hardware stack levels required when called: 2
 12083 ;; This function calls:
 12084 ;;		_I2C1_SetDataCompleteCallback
 12085 ;;		i1_I2C1_SetBuffer
 12086 ;; This function is called by:
 12087 ;;		_I2C1_ReadDataBlock
 12088 ;;		_I2C1_DO_TX
 12089 ;;		_I2C1_DO_RX
 12090 ;;		_I2C1_DO_TX_EMPTY
 12091 ;;		_I2C1_DO_ADDRESS_NACK
 12092 ;;		_I2C1_DO_RX_EMPTY
 12093 ;; This function uses a non-reentrant model
 12094 ;;
 12095                           
 12096     062B                     _rdBlkRegCompleteHandler@i2c1_master_example$F180:	
 12097                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F180
 12098                           
 12099     062B                     i1l3179:	
 12100                           ;incstack = 0
 12101                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F180: [wreg+fsr1l+fsr1h+stat
      +                          us,2+status,0+pclath+cstack]
 12102                           
 12103                           
 12104                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 12105     062B  0879               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F180@ptr,w
 12106     062C  3E02               	addlw	2
 12107     062D  0086               	movwf	6
 12108     062E  0187               	clrf	7
 12109     062F  0801               	movf	1,w
 12110     0630  00F0               	movwf	i1I2C1_SetBuffer@buffer
 12111     0631  3000               	movlw	0
 12112     0632  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 12113     0633  0879               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F180@ptr,w
 12114     0634  0086               	movwf	6
 12115     0635  0187               	clrf	7
 12116     0636  3F40               	moviw [0]fsr1
 12117     0637  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 12118     0638  3F41               	moviw [1]fsr1
 12119     0639  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 12120     063A  3187  2774  3186   	fcall	i1_I2C1_SetBuffer
 12121                           
 12122                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 12123     063D  3000               	movlw	0
 12124     063E  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12125     063F  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12126     0640  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 12127     0641  3187  27A9  3186   	fcall	_I2C1_SetDataCompleteCallback
 12128     0644                     i1l3181:
 12129                           
 12130                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 12131     0644  3002               	movlw	2
 12132     0645                     i1l201:
 12133     0645  0008               	return
 12134     0646                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F180:
 12135                           
 12136                           	psect	text71
 12137     06BA                     __ptext71:	
 12138 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F163 *****************
 12139 ;; Defined at:
 12140 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12141 ;; Parameters:    Size  Location     Type
 12142 ;;  ptr             1    9[COMMON] PTR void 
 12143 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12144 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12145 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12146 ;; Auto vars:     Size  Location     Type
 12147 ;;		None
 12148 ;; Return value:  Size  Location     Type
 12149 ;;                  1    wreg      enum E363
 12150 ;; Registers used:
 12151 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12152 ;; Tracked objects:
 12153 ;;		On entry : 0/0
 12154 ;;		On exit  : 0/0
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12157 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12160 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12161 ;;Total ram usage:        1 bytes
 12162 ;; Hardware stack levels used: 1
 12163 ;; Hardware stack levels required when called: 2
 12164 ;; This function calls:
 12165 ;;		_I2C1_SetDataCompleteCallback
 12166 ;;		i1_I2C1_SetBuffer
 12167 ;; This function is called by:
 12168 ;;		_I2C1_Write1ByteRegister
 12169 ;;		_I2C1_DO_TX
 12170 ;;		_I2C1_DO_RX
 12171 ;;		_I2C1_DO_TX_EMPTY
 12172 ;;		_I2C1_DO_ADDRESS_NACK
 12173 ;;		_I2C1_DO_RX_EMPTY
 12174 ;; This function uses a non-reentrant model
 12175 ;;
 12176                           
 12177     06BA                     _wr1RegCompleteHandler@i2c1_master_example$F163:	
 12178                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F163
 12179                           
 12180     06BA                     i1l3163:	
 12181                           ;incstack = 0
 12182                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F163: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 12183                           
 12184                           
 12185                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 12186     06BA  0879               	movf	wr1RegCompleteHandler@i2c1_master_example$F163@ptr,w
 12187     06BB  00F0               	movwf	i1I2C1_SetBuffer@buffer
 12188     06BC  01F1               	clrf	i1I2C1_SetBuffer@buffer+1
 12189     06BD  3001               	movlw	1
 12190     06BE  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 12191     06BF  3000               	movlw	0
 12192     06C0  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 12193     06C1  3187  2774  3186   	fcall	i1_I2C1_SetBuffer
 12194     06C4                     i1l3165:
 12195                           
 12196                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 12197     06C4  3000               	movlw	0
 12198     06C5  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12199     06C6  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12200     06C7  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 12201     06C8  3187  27A9  3186   	fcall	_I2C1_SetDataCompleteCallback
 12202     06CB                     i1l3167:
 12203                           
 12204                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 12205     06CB  3004               	movlw	4
 12206     06CC                     i1l195:
 12207     06CC  0008               	return
 12208     06CD                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F163:
 12209                           
 12210                           	psect	text72
 12211     06CD                     __ptext72:	
 12212 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F157 *****************
 12213 ;; Defined at:
 12214 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12215 ;; Parameters:    Size  Location     Type
 12216 ;;  ptr             1    9[COMMON] PTR void 
 12217 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12218 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12219 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;		None
 12222 ;; Return value:  Size  Location     Type
 12223 ;;                  1    wreg      enum E363
 12224 ;; Registers used:
 12225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12226 ;; Tracked objects:
 12227 ;;		On entry : 0/0
 12228 ;;		On exit  : 0/0
 12229 ;;		Unchanged: 0/0
 12230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12231 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12235 ;;Total ram usage:        1 bytes
 12236 ;; Hardware stack levels used: 1
 12237 ;; Hardware stack levels required when called: 2
 12238 ;; This function calls:
 12239 ;;		_I2C1_SetDataCompleteCallback
 12240 ;;		i1_I2C1_SetBuffer
 12241 ;; This function is called by:
 12242 ;;		_I2C1_Read2ByteRegister
 12243 ;;		_I2C1_DO_TX
 12244 ;;		_I2C1_DO_RX
 12245 ;;		_I2C1_DO_TX_EMPTY
 12246 ;;		_I2C1_DO_ADDRESS_NACK
 12247 ;;		_I2C1_DO_RX_EMPTY
 12248 ;; This function uses a non-reentrant model
 12249 ;;
 12250                           
 12251     06CD                     _rd2RegCompleteHandler@i2c1_master_example$F157:	
 12252                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F157
 12253                           
 12254     06CD                     i1l3155:	
 12255                           ;incstack = 0
 12256                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F157: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 12257                           
 12258                           
 12259                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 12260     06CD  0879               	movf	rd2RegCompleteHandler@i2c1_master_example$F157@ptr,w
 12261     06CE  00F0               	movwf	i1I2C1_SetBuffer@buffer
 12262     06CF  01F1               	clrf	i1I2C1_SetBuffer@buffer+1
 12263     06D0  3002               	movlw	2
 12264     06D1  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 12265     06D2  3000               	movlw	0
 12266     06D3  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 12267     06D4  3187  2774  3186   	fcall	i1_I2C1_SetBuffer
 12268     06D7                     i1l3157:
 12269                           
 12270                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 12271     06D7  3000               	movlw	0
 12272     06D8  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12273     06D9  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12274     06DA  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 12275     06DB  3187  27A9  3186   	fcall	_I2C1_SetDataCompleteCallback
 12276     06DE                     i1l3159:
 12277                           
 12278                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 12279     06DE  3002               	movlw	2
 12280     06DF                     i1l192:
 12281     06DF  0008               	return
 12282     06E0                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F157:
 12283                           
 12284                           	psect	text73
 12285     06E0                     __ptext73:	
 12286 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F146 *****************
 12287 ;; Defined at:
 12288 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12289 ;; Parameters:    Size  Location     Type
 12290 ;;  ptr             1    9[COMMON] PTR void 
 12291 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12292 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12293 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;		None
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  1    wreg      enum E363
 12298 ;; Registers used:
 12299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12305 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12308 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12309 ;;Total ram usage:        1 bytes
 12310 ;; Hardware stack levels used: 1
 12311 ;; Hardware stack levels required when called: 2
 12312 ;; This function calls:
 12313 ;;		_I2C1_SetDataCompleteCallback
 12314 ;;		i1_I2C1_SetBuffer
 12315 ;; This function is called by:
 12316 ;;		_I2C1_Read1ByteRegister
 12317 ;;		_I2C1_DO_TX
 12318 ;;		_I2C1_DO_RX
 12319 ;;		_I2C1_DO_TX_EMPTY
 12320 ;;		_I2C1_DO_ADDRESS_NACK
 12321 ;;		_I2C1_DO_RX_EMPTY
 12322 ;; This function uses a non-reentrant model
 12323 ;;
 12324                           
 12325     06E0                     _rd1RegCompleteHandler@i2c1_master_example$F146:	
 12326                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F146
 12327                           
 12328     06E0                     i1l3147:	
 12329                           ;incstack = 0
 12330                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F146: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 12331                           
 12332                           
 12333                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 12334     06E0  0879               	movf	rd1RegCompleteHandler@i2c1_master_example$F146@ptr,w
 12335     06E1  00F0               	movwf	i1I2C1_SetBuffer@buffer
 12336     06E2  01F1               	clrf	i1I2C1_SetBuffer@buffer+1
 12337     06E3  3001               	movlw	1
 12338     06E4  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 12339     06E5  3000               	movlw	0
 12340     06E6  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 12341     06E7  3187  2774  3186   	fcall	i1_I2C1_SetBuffer
 12342     06EA                     i1l3149:
 12343                           
 12344                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 12345     06EA  3000               	movlw	0
 12346     06EB  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12347     06EC  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12348     06ED  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 12349     06EE  3187  27A9  3186   	fcall	_I2C1_SetDataCompleteCallback
 12350     06F1                     i1l3151:
 12351                           
 12352                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 12353     06F1  3002               	movlw	2
 12354     06F2                     i1l189:
 12355     06F2  0008               	return
 12356     06F3                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F146:
 12357                           
 12358                           	psect	text74
 12359     0646                     __ptext74:	
 12360 ;; *************** function _rdBlkRegCompleteHandler *****************
 12361 ;; Defined at:
 12362 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;  p               1    9[COMMON] PTR void 
 12365 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12366 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12367 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12368 ;; Auto vars:     Size  Location     Type
 12369 ;;		None
 12370 ;; Return value:  Size  Location     Type
 12371 ;;                  1    wreg      enum E363
 12372 ;; Registers used:
 12373 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12374 ;; Tracked objects:
 12375 ;;		On entry : 0/0
 12376 ;;		On exit  : 0/0
 12377 ;;		Unchanged: 0/0
 12378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12379 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12383 ;;Total ram usage:        1 bytes
 12384 ;; Hardware stack levels used: 1
 12385 ;; Hardware stack levels required when called: 2
 12386 ;; This function calls:
 12387 ;;		_I2C1_SetDataCompleteCallback
 12388 ;;		i1_I2C1_SetBuffer
 12389 ;; This function is called by:
 12390 ;;		_i2c_readDataBlock
 12391 ;;		_I2C1_DO_TX
 12392 ;;		_I2C1_DO_RX
 12393 ;;		_I2C1_DO_TX_EMPTY
 12394 ;;		_I2C1_DO_ADDRESS_NACK
 12395 ;;		_I2C1_DO_RX_EMPTY
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399     0646                     _rdBlkRegCompleteHandler:	
 12400                           ;psect for function _rdBlkRegCompleteHandler
 12401                           
 12402     0646                     i1l3141:	
 12403                           ;incstack = 0
 12404                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12405                           
 12406                           
 12407                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 12408     0646  0879               	movf	rdBlkRegCompleteHandler@p,w
 12409     0647  3E02               	addlw	2
 12410     0648  0086               	movwf	6
 12411     0649  0187               	clrf	7
 12412     064A  0801               	movf	1,w
 12413     064B  00F0               	movwf	i1I2C1_SetBuffer@buffer
 12414     064C  3000               	movlw	0
 12415     064D  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 12416     064E  0879               	movf	rdBlkRegCompleteHandler@p,w
 12417     064F  0086               	movwf	6
 12418     0650  0187               	clrf	7
 12419     0651  3F40               	moviw [0]fsr1
 12420     0652  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 12421     0653  3F41               	moviw [1]fsr1
 12422     0654  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 12423     0655  3187  2774  3186   	fcall	i1_I2C1_SetBuffer
 12424                           
 12425                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 12426     0658  3000               	movlw	0
 12427     0659  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12428     065A  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12429     065B  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 12430     065C  3187  27A9  3186   	fcall	_I2C1_SetDataCompleteCallback
 12431     065F                     i1l3143:
 12432                           
 12433                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 12434     065F  3002               	movlw	2
 12435     0660                     i1l79:
 12436     0660  0008               	return
 12437     0661                     __end_of_rdBlkRegCompleteHandler:
 12438                           
 12439                           	psect	text75
 12440     06F3                     __ptext75:	
 12441 ;; *************** function _wr2RegCompleteHandler *****************
 12442 ;; Defined at:
 12443 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12444 ;; Parameters:    Size  Location     Type
 12445 ;;  p               1    9[COMMON] PTR void 
 12446 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12447 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12448 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12449 ;; Auto vars:     Size  Location     Type
 12450 ;;		None
 12451 ;; Return value:  Size  Location     Type
 12452 ;;                  1    wreg      enum E363
 12453 ;; Registers used:
 12454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12455 ;; Tracked objects:
 12456 ;;		On entry : 0/0
 12457 ;;		On exit  : 0/0
 12458 ;;		Unchanged: 0/0
 12459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12460 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12464 ;;Total ram usage:        1 bytes
 12465 ;; Hardware stack levels used: 1
 12466 ;; Hardware stack levels required when called: 2
 12467 ;; This function calls:
 12468 ;;		_I2C1_SetDataCompleteCallback
 12469 ;;		i1_I2C1_SetBuffer
 12470 ;; This function is called by:
 12471 ;;		_i2c_write2ByteRegister
 12472 ;;		_I2C1_DO_TX
 12473 ;;		_I2C1_DO_RX
 12474 ;;		_I2C1_DO_TX_EMPTY
 12475 ;;		_I2C1_DO_ADDRESS_NACK
 12476 ;;		_I2C1_DO_RX_EMPTY
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480     06F3                     _wr2RegCompleteHandler:	
 12481                           ;psect for function _wr2RegCompleteHandler
 12482                           
 12483     06F3                     i1l3133:	
 12484                           ;incstack = 0
 12485                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12486                           
 12487                           
 12488                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 12489     06F3  0879               	movf	wr2RegCompleteHandler@p,w
 12490     06F4  00F0               	movwf	i1I2C1_SetBuffer@buffer
 12491     06F5  01F1               	clrf	i1I2C1_SetBuffer@buffer+1
 12492     06F6  3002               	movlw	2
 12493     06F7  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 12494     06F8  3000               	movlw	0
 12495     06F9  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 12496     06FA  3187  2774  3186   	fcall	i1_I2C1_SetBuffer
 12497     06FD                     i1l3135:
 12498                           
 12499                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 12500     06FD  3000               	movlw	0
 12501     06FE  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12502     06FF  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12503     0700  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 12504     0701  3187  27A9  3186   	fcall	_I2C1_SetDataCompleteCallback
 12505     0704                     i1l3137:
 12506                           
 12507                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 12508     0704  3004               	movlw	4
 12509     0705                     i1l67:
 12510     0705  0008               	return
 12511     0706                     __end_of_wr2RegCompleteHandler:
 12512                           
 12513                           	psect	text76
 12514     0706                     __ptext76:	
 12515 ;; *************** function _rd2RegCompleteHandler *****************
 12516 ;; Defined at:
 12517 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12518 ;; Parameters:    Size  Location     Type
 12519 ;;  p               1    9[COMMON] PTR void 
 12520 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12521 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12522 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12523 ;; Auto vars:     Size  Location     Type
 12524 ;;		None
 12525 ;; Return value:  Size  Location     Type
 12526 ;;                  1    wreg      enum E363
 12527 ;; Registers used:
 12528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12529 ;; Tracked objects:
 12530 ;;		On entry : 0/0
 12531 ;;		On exit  : 0/0
 12532 ;;		Unchanged: 0/0
 12533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12534 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12537 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12538 ;;Total ram usage:        1 bytes
 12539 ;; Hardware stack levels used: 1
 12540 ;; Hardware stack levels required when called: 2
 12541 ;; This function calls:
 12542 ;;		_I2C1_SetDataCompleteCallback
 12543 ;;		i1_I2C1_SetBuffer
 12544 ;; This function is called by:
 12545 ;;		_i2c_read2ByteRegister
 12546 ;;		_I2C1_DO_TX
 12547 ;;		_I2C1_DO_RX
 12548 ;;		_I2C1_DO_TX_EMPTY
 12549 ;;		_I2C1_DO_ADDRESS_NACK
 12550 ;;		_I2C1_DO_RX_EMPTY
 12551 ;; This function uses a non-reentrant model
 12552 ;;
 12553                           
 12554     0706                     _rd2RegCompleteHandler:	
 12555                           ;psect for function _rd2RegCompleteHandler
 12556                           
 12557     0706                     i1l3125:	
 12558                           ;incstack = 0
 12559                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12560                           
 12561                           
 12562                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 12563     0706  0879               	movf	rd2RegCompleteHandler@p,w
 12564     0707  00F0               	movwf	i1I2C1_SetBuffer@buffer
 12565     0708  01F1               	clrf	i1I2C1_SetBuffer@buffer+1
 12566     0709  3002               	movlw	2
 12567     070A  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 12568     070B  3000               	movlw	0
 12569     070C  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 12570     070D  3187  2774  3187   	fcall	i1_I2C1_SetBuffer
 12571     0710                     i1l3127:
 12572                           
 12573                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 12574     0710  3000               	movlw	0
 12575     0711  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12576     0712  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12577     0713  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 12578     0714  3187  27A9  3187   	fcall	_I2C1_SetDataCompleteCallback
 12579     0717                     i1l3129:
 12580                           
 12581                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 12582     0717  3002               	movlw	2
 12583     0718                     i1l55:
 12584     0718  0008               	return
 12585     0719                     __end_of_rd2RegCompleteHandler:
 12586                           
 12587                           	psect	text77
 12588     0719                     __ptext77:	
 12589 ;; *************** function _rd1RegCompleteHandler *****************
 12590 ;; Defined at:
 12591 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12592 ;; Parameters:    Size  Location     Type
 12593 ;;  p               1    9[COMMON] PTR void 
 12594 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12595 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12596 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12597 ;; Auto vars:     Size  Location     Type
 12598 ;;		None
 12599 ;; Return value:  Size  Location     Type
 12600 ;;                  1    wreg      enum E363
 12601 ;; Registers used:
 12602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12603 ;; Tracked objects:
 12604 ;;		On entry : 0/0
 12605 ;;		On exit  : 0/0
 12606 ;;		Unchanged: 0/0
 12607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12608 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12612 ;;Total ram usage:        1 bytes
 12613 ;; Hardware stack levels used: 1
 12614 ;; Hardware stack levels required when called: 2
 12615 ;; This function calls:
 12616 ;;		_I2C1_SetDataCompleteCallback
 12617 ;;		i1_I2C1_SetBuffer
 12618 ;; This function is called by:
 12619 ;;		_i2c_read1ByteRegister
 12620 ;;		_I2C1_DO_TX
 12621 ;;		_I2C1_DO_RX
 12622 ;;		_I2C1_DO_TX_EMPTY
 12623 ;;		_I2C1_DO_ADDRESS_NACK
 12624 ;;		_I2C1_DO_RX_EMPTY
 12625 ;; This function uses a non-reentrant model
 12626 ;;
 12627                           
 12628     0719                     _rd1RegCompleteHandler:	
 12629                           ;psect for function _rd1RegCompleteHandler
 12630                           
 12631     0719                     i1l3117:	
 12632                           ;incstack = 0
 12633                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12634                           
 12635                           
 12636                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 12637     0719  0879               	movf	rd1RegCompleteHandler@p,w
 12638     071A  00F0               	movwf	i1I2C1_SetBuffer@buffer
 12639     071B  01F1               	clrf	i1I2C1_SetBuffer@buffer+1
 12640     071C  3001               	movlw	1
 12641     071D  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 12642     071E  3000               	movlw	0
 12643     071F  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 12644     0720  3187  2774  3187   	fcall	i1_I2C1_SetBuffer
 12645     0723                     i1l3119:
 12646                           
 12647                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 12648     0723  3000               	movlw	0
 12649     0724  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12650     0725  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12651     0726  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 12652     0727  3187  27A9  3187   	fcall	_I2C1_SetDataCompleteCallback
 12653     072A                     i1l3121:
 12654                           
 12655                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 12656     072A  3002               	movlw	2
 12657     072B                     i1l40:
 12658     072B  0008               	return
 12659     072C                     __end_of_rd1RegCompleteHandler:
 12660                           
 12661                           	psect	text78
 12662     072C                     __ptext78:	
 12663 ;; *************** function _wr1RegCompleteHandler *****************
 12664 ;; Defined at:
 12665 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12666 ;; Parameters:    Size  Location     Type
 12667 ;;  p               1    9[COMMON] PTR void 
 12668 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12669 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12670 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12671 ;; Auto vars:     Size  Location     Type
 12672 ;;		None
 12673 ;; Return value:  Size  Location     Type
 12674 ;;                  1    wreg      enum E363
 12675 ;; Registers used:
 12676 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12677 ;; Tracked objects:
 12678 ;;		On entry : 0/0
 12679 ;;		On exit  : 0/0
 12680 ;;		Unchanged: 0/0
 12681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12682 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12686 ;;Total ram usage:        1 bytes
 12687 ;; Hardware stack levels used: 1
 12688 ;; Hardware stack levels required when called: 2
 12689 ;; This function calls:
 12690 ;;		_I2C1_SetDataCompleteCallback
 12691 ;;		i1_I2C1_SetBuffer
 12692 ;; This function is called by:
 12693 ;;		_i2c_write1ByteRegister
 12694 ;;		_I2C1_DO_TX
 12695 ;;		_I2C1_DO_RX
 12696 ;;		_I2C1_DO_TX_EMPTY
 12697 ;;		_I2C1_DO_ADDRESS_NACK
 12698 ;;		_I2C1_DO_RX_EMPTY
 12699 ;; This function uses a non-reentrant model
 12700 ;;
 12701                           
 12702     072C                     _wr1RegCompleteHandler:	
 12703                           ;psect for function _wr1RegCompleteHandler
 12704                           
 12705     072C                     i1l3109:	
 12706                           ;incstack = 0
 12707                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12708                           
 12709                           
 12710                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 12711     072C  0879               	movf	wr1RegCompleteHandler@p,w
 12712     072D  00F0               	movwf	i1I2C1_SetBuffer@buffer
 12713     072E  01F1               	clrf	i1I2C1_SetBuffer@buffer+1
 12714     072F  3001               	movlw	1
 12715     0730  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 12716     0731  3000               	movlw	0
 12717     0732  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 12718     0733  3187  2774  3187   	fcall	i1_I2C1_SetBuffer
 12719     0736                     i1l3111:
 12720                           
 12721                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 12722     0736  3000               	movlw	0
 12723     0737  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12724     0738  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12725     0739  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 12726     073A  3187  27A9  3187   	fcall	_I2C1_SetDataCompleteCallback
 12727     073D                     i1l3113:
 12728                           
 12729                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 12730     073D  3004               	movlw	4
 12731     073E                     i1l19:
 12732     073E  0008               	return
 12733     073F                     __end_of_wr1RegCompleteHandler:
 12734                           
 12735                           	psect	text79
 12736     073F                     __ptext79:	
 12737 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F169 *****************
 12738 ;; Defined at:
 12739 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12740 ;; Parameters:    Size  Location     Type
 12741 ;;  ptr             1    9[COMMON] PTR void 
 12742 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12743 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12744 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12745 ;; Auto vars:     Size  Location     Type
 12746 ;;		None
 12747 ;; Return value:  Size  Location     Type
 12748 ;;                  1    wreg      enum E363
 12749 ;; Registers used:
 12750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12751 ;; Tracked objects:
 12752 ;;		On entry : 0/0
 12753 ;;		On exit  : 0/0
 12754 ;;		Unchanged: 0/0
 12755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12756 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;Total ram usage:        1 bytes
 12761 ;; Hardware stack levels used: 1
 12762 ;; Hardware stack levels required when called: 2
 12763 ;; This function calls:
 12764 ;;		_I2C1_SetDataCompleteCallback
 12765 ;;		i1_I2C1_SetBuffer
 12766 ;; This function is called by:
 12767 ;;		_I2C1_Write2ByteRegister
 12768 ;;		_I2C1_DO_TX
 12769 ;;		_I2C1_DO_RX
 12770 ;;		_I2C1_DO_TX_EMPTY
 12771 ;;		_I2C1_DO_ADDRESS_NACK
 12772 ;;		_I2C1_DO_RX_EMPTY
 12773 ;; This function uses a non-reentrant model
 12774 ;;
 12775                           
 12776     073F                     _wr2RegCompleteHandler@i2c1_master_example$F169:	
 12777                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F169
 12778                           
 12779     073F                     i1l3171:	
 12780                           ;incstack = 0
 12781                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F169: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 12782                           
 12783                           
 12784                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 12785     073F  0879               	movf	wr2RegCompleteHandler@i2c1_master_example$F169@ptr,w
 12786     0740  00F0               	movwf	i1I2C1_SetBuffer@buffer
 12787     0741  01F1               	clrf	i1I2C1_SetBuffer@buffer+1
 12788     0742  3002               	movlw	2
 12789     0743  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 12790     0744  3000               	movlw	0
 12791     0745  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 12792     0746  3187  2774  3187   	fcall	i1_I2C1_SetBuffer
 12793     0749                     i1l3173:
 12794                           
 12795                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 12796     0749  3000               	movlw	0
 12797     074A  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12798     074B  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12799     074C  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 12800     074D  3187  27A9  3187   	fcall	_I2C1_SetDataCompleteCallback
 12801     0750                     i1l3175:
 12802                           
 12803                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 12804     0750  3004               	movlw	4
 12805     0751                     i1l198:
 12806     0751  0008               	return
 12807     0752                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F169:
 12808                           
 12809                           	psect	text80
 12810     0774                     __ptext80:	
 12811 ;; *************** function i1_I2C1_SetBuffer *****************
 12812 ;; Defined at:
 12813 ;;		line 264 in file "mcc_generated_files/i2c1_master.c"
 12814 ;; Parameters:    Size  Location     Type
 12815 ;;  buffer          2    0[COMMON] PTR void 
 12816 ;;		 -> i2c_write1ByteRegister@data$data(2), i2c_read1ByteRegister@d2$data(2), i2c_read2ByteRegister@result$data(2), i2c
      +_write2ByteRegister@data$data(2), 
 12817 ;;		 -> I2C1_Read1ByteRegister@returnValue$data(2), I2C1_Read2ByteRegister@returnValue$data(2), I2C1_Write1ByteRegister@
      +data$data(2), I2C1_Write2ByteRegister@data$data(2), 
 12818 ;;		 -> pcf8574_write_wEnable@writeBuffer(3), pcf8574_write@data(1), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@buffe
      +rBlock(4), 
 12819 ;;		 -> bufferBlock$data(2), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@re
      +g(1), 
 12820 ;;		 -> I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read
      +1ByteRegister@reg(1), 
 12821 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), d$data(2), 
 12822 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 12823 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
 12824 ;;		 -> NULL(0), 
 12825 ;;  bufferSize      2    2[COMMON] unsigned int 
 12826 ;; Auto vars:     Size  Location     Type
 12827 ;;		None
 12828 ;; Return value:  Size  Location     Type
 12829 ;;                  1    wreg      void 
 12830 ;; Registers used:
 12831 ;;		wreg
 12832 ;; Tracked objects:
 12833 ;;		On entry : 0/0
 12834 ;;		On exit  : 0/0
 12835 ;;		Unchanged: 0/0
 12836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12840 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12841 ;;Total ram usage:        4 bytes
 12842 ;; Hardware stack levels used: 1
 12843 ;; This function calls:
 12844 ;;		Nothing
 12845 ;; This function is called by:
 12846 ;;		_wr1RegCompleteHandler
 12847 ;;		_rd1RegCompleteHandler
 12848 ;;		_rd2RegCompleteHandler
 12849 ;;		_wr2RegCompleteHandler
 12850 ;;		_rdBlkRegCompleteHandler
 12851 ;;		_rd1RegCompleteHandler@i2c1_master_example$F146
 12852 ;;		_rd2RegCompleteHandler@i2c1_master_example$F157
 12853 ;;		_wr1RegCompleteHandler@i2c1_master_example$F163
 12854 ;;		_wr2RegCompleteHandler@i2c1_master_example$F169
 12855 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F180
 12856 ;; This function uses a non-reentrant model
 12857 ;;
 12858                           
 12859     0774                     i1_I2C1_SetBuffer:	
 12860                           ;psect for function i1_I2C1_SetBuffer
 12861                           
 12862     0774                     i1l3103:	
 12863                           ;incstack = 0
 12864                           ; Regs used in i1_I2C1_SetBuffer: [wreg]
 12865                           
 12866                           
 12867                           ;mcc_generated_files/i2c1_master.c: 264: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 265: {;mcc_generated_files/i2c1_master.c: 266: 
      +                              if(I2C1_Status.bufferFree)
 12868     0774  0021               	movlb	1	; select bank1
 12869     0775  1DDD               	btfss	(_I2C1_Status^(0+128)+29),3
 12870     0776  2F78               	goto	u104_21
 12871     0777  2F79               	goto	u104_20
 12872     0778                     u104_21:
 12873     0778  2F82               	goto	i1l335
 12874     0779                     u104_20:
 12875     0779                     i1l3105:
 12876                           
 12877                           ;mcc_generated_files/i2c1_master.c: 267:     {;mcc_generated_files/i2c1_master.c: 268:  
      +                                 I2C1_Status.data_ptr = buffer;
 12878     0779  0871               	movf	i1I2C1_SetBuffer@buffer+1,w
 12879     077A  00D8               	movwf	((_I2C1_Status+1)^(0+128)+23)
 12880     077B  0870               	movf	i1I2C1_SetBuffer@buffer,w
 12881     077C  00D7               	movwf	(_I2C1_Status^(0+128)+23)
 12882                           
 12883                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.data_length = bufferSize;
 12884     077D  0873               	movf	i1I2C1_SetBuffer@bufferSize+1,w
 12885     077E  00DA               	movwf	((_I2C1_Status+1)^(0+128)+25)
 12886     077F  0872               	movf	i1I2C1_SetBuffer@bufferSize,w
 12887     0780  00D9               	movwf	(_I2C1_Status^(0+128)+25)
 12888     0781                     i1l3107:
 12889                           
 12890                           ;mcc_generated_files/i2c1_master.c: 270:         I2C1_Status.bufferFree = 0;
 12891     0781  11DD               	bcf	(_I2C1_Status^(0+128)+29),3
 12892     0782                     i1l335:
 12893     0782  0008               	return
 12894     0783                     __end_ofi1_I2C1_SetBuffer:
 12895                           
 12896                           	psect	text81
 12897     07A9                     __ptext81:	
 12898 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 12899 ;; Defined at:
 12900 ;;		line 274 in file "mcc_generated_files/i2c1_master.c"
 12901 ;; Parameters:    Size  Location     Type
 12902 ;;  cb              2    6[COMMON] PTR FTN(PTR void ,)enum 
 12903 ;;		 -> NULL(1), rdBlkRegCompleteHandler@i2c1_master_example$F180(1), wr2RegCompleteHandler@i2c1_master_example$F169(1),
      + wr1RegCompleteHandler@i2c1_master_example$F163(1), 
 12904 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F157(1), rd1RegCompleteHandler@i2c1_master_example$F146(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 12905 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12906 ;;  ptr             1    8[COMMON] PTR void 
 12907 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12908 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12909 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12910 ;; Auto vars:     Size  Location     Type
 12911 ;;		None
 12912 ;; Return value:  Size  Location     Type
 12913 ;;                  1    wreg      void 
 12914 ;; Registers used:
 12915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12916 ;; Tracked objects:
 12917 ;;		On entry : 0/0
 12918 ;;		On exit  : 0/0
 12919 ;;		Unchanged: 0/0
 12920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12921 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12924 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12925 ;;Total ram usage:        3 bytes
 12926 ;; Hardware stack levels used: 1
 12927 ;; Hardware stack levels required when called: 1
 12928 ;; This function calls:
 12929 ;;		i1_I2C1_SetCallback
 12930 ;; This function is called by:
 12931 ;;		_wr1RegCompleteHandler
 12932 ;;		_rd1RegCompleteHandler
 12933 ;;		_rd2RegCompleteHandler
 12934 ;;		_wr2RegCompleteHandler
 12935 ;;		_rdBlkRegCompleteHandler
 12936 ;;		_rd1RegCompleteHandler@i2c1_master_example$F146
 12937 ;;		_rd2RegCompleteHandler@i2c1_master_example$F157
 12938 ;;		_wr1RegCompleteHandler@i2c1_master_example$F163
 12939 ;;		_wr2RegCompleteHandler@i2c1_master_example$F169
 12940 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F180
 12941 ;;		_i2c_write1ByteRegister
 12942 ;;		_i2c_read1ByteRegister
 12943 ;;		_i2c_read2ByteRegister
 12944 ;;		_i2c_write2ByteRegister
 12945 ;;		_i2c_readDataBlock
 12946 ;;		_I2C1_Read1ByteRegister
 12947 ;;		_I2C1_Read2ByteRegister
 12948 ;;		_I2C1_Write1ByteRegister
 12949 ;;		_I2C1_Write2ByteRegister
 12950 ;;		_I2C1_ReadDataBlock
 12951 ;; This function uses a non-reentrant model
 12952 ;;
 12953                           
 12954     07A9                     _I2C1_SetDataCompleteCallback:	
 12955                           ;psect for function _I2C1_SetDataCompleteCallback
 12956                           
 12957     07A9                     i1l3083:	
 12958                           ;incstack = 0
 12959                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 12960                           
 12961                           
 12962                           ;mcc_generated_files/i2c1_master.c: 274: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 275: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 276:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 12963     07A9  0877               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 12964     07AA  00F1               	movwf	i1I2C1_SetCallback@cb+1
 12965     07AB  0876               	movf	I2C1_SetDataCompleteCallback@cb,w
 12966     07AC  00F0               	movwf	i1I2C1_SetCallback@cb
 12967     07AD  0878               	movf	I2C1_SetDataCompleteCallback@ptr,w
 12968     07AE  00F2               	movwf	i1I2C1_SetCallback@ptr
 12969     07AF  3000               	movlw	0
 12970     07B0  3184  240A  3187   	fcall	i1_I2C1_SetCallback
 12971     07B3                     i1l338:
 12972     07B3  0008               	return
 12973     07B4                     __end_of_I2C1_SetDataCompleteCallback:
 12974                           
 12975                           	psect	text82
 12976     040A                     __ptext82:	
 12977 ;; *************** function i1_I2C1_SetCallback *****************
 12978 ;; Defined at:
 12979 ;;		line 304 in file "mcc_generated_files/i2c1_master.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;  idx             1    wreg     enum E12641
 12982 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 12983 ;;		 -> NULL(1), rdBlkRegCompleteHandler@i2c1_master_example$F180(1), wr2RegCompleteHandler@i2c1_master_example$F169(1),
      + wr1RegCompleteHandler@i2c1_master_example$F163(1), 
 12984 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F157(1), rd1RegCompleteHandler@i2c1_master_example$F146(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 12985 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12986 ;;  ptr             1    2[COMMON] PTR void 
 12987 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 12988 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 12989 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 12990 ;; Auto vars:     Size  Location     Type
 12991 ;;  idx             1    5[COMMON] enum E12641
 12992 ;; Return value:  Size  Location     Type
 12993 ;;                  1    wreg      void 
 12994 ;; Registers used:
 12995 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12996 ;; Tracked objects:
 12997 ;;		On entry : 0/0
 12998 ;;		On exit  : 0/0
 12999 ;;		Unchanged: 0/0
 13000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13001 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13004 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13005 ;;Total ram usage:        6 bytes
 13006 ;; Hardware stack levels used: 1
 13007 ;; This function calls:
 13008 ;;		Nothing
 13009 ;; This function is called by:
 13010 ;;		_I2C1_SetDataCompleteCallback
 13011 ;; This function uses a non-reentrant model
 13012 ;;
 13013                           
 13014     040A                     i1_I2C1_SetCallback:	
 13015                           ;psect for function i1_I2C1_SetCallback
 13016                           
 13017                           
 13018                           ;incstack = 0
 13019                           ; Regs used in i1_I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 13020                           ;i1I2C1_SetCallback@idx stored from wreg
 13021     040A  00F5               	movwf	i1I2C1_SetCallback@idx
 13022     040B                     i1l3077:
 13023                           
 13024                           ;mcc_generated_files/i2c1_master.c: 304: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 305: {;mcc_gen
      +                          erated_files/i2c1_master.c: 306:     if(cb)
 13025     040B  0870               	movf	i1I2C1_SetCallback@cb,w
 13026     040C  0471               	iorwf	i1I2C1_SetCallback@cb+1,w
 13027     040D  1903               	btfsc	3,2
 13028     040E  2C10               	goto	u101_21
 13029     040F  2C11               	goto	u101_20
 13030     0410                     u101_21:
 13031     0410  2C2A               	goto	i1l3081
 13032     0411                     u101_20:
 13033     0411                     i1l3079:
 13034                           
 13035                           ;mcc_generated_files/i2c1_master.c: 307:     {;mcc_generated_files/i2c1_master.c: 308:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 13036     0411  3575               	lslf	i1I2C1_SetCallback@idx,w
 13037     0412  3EC0               	addlw	low _I2C1_Status
 13038     0413  0086               	movwf	6
 13039     0414  3000               	movlw	high _I2C1_Status
 13040     0415  3D87               	addwfc	7,f
 13041     0416  3575               	lslf	i1I2C1_SetCallback@idx,w
 13042     0417  3000               	movlw	0
 13043     0418  3D87               	addwfc	7,f
 13044     0419  0870               	movf	i1I2C1_SetCallback@cb,w
 13045     041A  3FC0               	movwi [0]fsr1
 13046     041B  0871               	movf	i1I2C1_SetCallback@cb+1,w
 13047     041C  3FC1               	movwi [1]fsr1
 13048                           
 13049                           ;mcc_generated_files/i2c1_master.c: 309:         I2C1_Status.callbackPayload[idx] = ptr;
 13050     041D  30CC               	movlw	low (_I2C1_Status+12)
 13051     041E  00F3               	movwf	??i1_I2C1_SetCallback
 13052     041F  3000               	movlw	high (_I2C1_Status+12)
 13053     0420  00F4               	movwf	??i1_I2C1_SetCallback+1
 13054     0421  0875               	movf	i1I2C1_SetCallback@idx,w
 13055     0422  0773               	addwf	??i1_I2C1_SetCallback,w
 13056     0423  0086               	movwf	6
 13057     0424  3000               	movlw	0
 13058     0425  3D74               	addwfc	??i1_I2C1_SetCallback+1,w
 13059     0426  0087               	movwf	7
 13060     0427  0872               	movf	i1I2C1_SetCallback@ptr,w
 13061     0428  0081               	movwf	1
 13062                           
 13063                           ;mcc_generated_files/i2c1_master.c: 310:     }
 13064     0429  2C41               	goto	i1l358
 13065     042A                     i1l3081:
 13066                           
 13067                           ;mcc_generated_files/i2c1_master.c: 312:     {;mcc_generated_files/i2c1_master.c: 313:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 13068     042A  3575               	lslf	i1I2C1_SetCallback@idx,w
 13069     042B  3EC0               	addlw	low _I2C1_Status
 13070     042C  0086               	movwf	6
 13071     042D  3000               	movlw	high _I2C1_Status
 13072     042E  3D87               	addwfc	7,f
 13073     042F  3575               	lslf	i1I2C1_SetCallback@idx,w
 13074     0430  3000               	movlw	0
 13075     0431  3D87               	addwfc	7,f
 13076     0432  3090               	movlw	low (low _I2C1_CallbackReturnStop)
 13077     0433  3FC0               	movwi [0]fsr1
 13078     0434  3000               	movlw	high (low _I2C1_CallbackReturnStop)
 13079     0435  3FC1               	movwi [1]fsr1
 13080                           
 13081                           ;mcc_generated_files/i2c1_master.c: 314:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 13082     0436  30CC               	movlw	low (_I2C1_Status+12)
 13083     0437  00F3               	movwf	??i1_I2C1_SetCallback
 13084     0438  3000               	movlw	high (_I2C1_Status+12)
 13085     0439  00F4               	movwf	??i1_I2C1_SetCallback+1
 13086     043A  0875               	movf	i1I2C1_SetCallback@idx,w
 13087     043B  0773               	addwf	??i1_I2C1_SetCallback,w
 13088     043C  0086               	movwf	6
 13089     043D  3000               	movlw	0
 13090     043E  3D74               	addwfc	??i1_I2C1_SetCallback+1,w
 13091     043F  0087               	movwf	7
 13092     0440  0181               	clrf	1
 13093     0441                     i1l358:
 13094     0441  0008               	return
 13095     0442                     __end_ofi1_I2C1_SetCallback:
 13096                           
 13097                           	psect	text83
 13098     0F95                     __ptext83:	
 13099 ;; *************** function _I2C1_MasterStop *****************
 13100 ;; Defined at:
 13101 ;;		line 594 in file "mcc_generated_files/i2c1_master.c"
 13102 ;; Parameters:    Size  Location     Type
 13103 ;;		None
 13104 ;; Auto vars:     Size  Location     Type
 13105 ;;		None
 13106 ;; Return value:  Size  Location     Type
 13107 ;;                  1    wreg      void 
 13108 ;; Registers used:
 13109 ;;		None
 13110 ;; Tracked objects:
 13111 ;;		On entry : 0/0
 13112 ;;		On exit  : 0/0
 13113 ;;		Unchanged: 0/0
 13114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13119 ;;Total ram usage:        0 bytes
 13120 ;; Hardware stack levels used: 1
 13121 ;; This function calls:
 13122 ;;		Nothing
 13123 ;; This function is called by:
 13124 ;;		_I2C1_DO_SEND_STOP
 13125 ;; This function uses a non-reentrant model
 13126 ;;
 13127                           
 13128     0F95                     _I2C1_MasterStop:	
 13129                           ;psect for function _I2C1_MasterStop
 13130                           
 13131     0F95                     i1l3099:	
 13132                           ;incstack = 0
 13133                           ; Regs used in _I2C1_MasterStop: []
 13134                           
 13135                           
 13136                           ;mcc_generated_files/i2c1_master.c: 596:     SSP1CON2bits.PEN = 1;
 13137     0F95  0023               	movlb	3	; select bank3
 13138     0F96  1511               	bsf	17,2	;volatile
 13139     0F97                     i1l501:
 13140     0F97  0008               	return
 13141     0F98                     __end_of_I2C1_MasterStop:
 13142                           
 13143                           	psect	text84
 13144     0F92                     __ptext84:	
 13145 ;; *************** function _I2C1_MasterEnableRestart *****************
 13146 ;; Defined at:
 13147 ;;		line 574 in file "mcc_generated_files/i2c1_master.c"
 13148 ;; Parameters:    Size  Location     Type
 13149 ;;		None
 13150 ;; Auto vars:     Size  Location     Type
 13151 ;;		None
 13152 ;; Return value:  Size  Location     Type
 13153 ;;                  1    wreg      void 
 13154 ;; Registers used:
 13155 ;;		None
 13156 ;; Tracked objects:
 13157 ;;		On entry : 0/0
 13158 ;;		On exit  : 0/0
 13159 ;;		Unchanged: 0/0
 13160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13165 ;;Total ram usage:        0 bytes
 13166 ;; Hardware stack levels used: 1
 13167 ;; This function calls:
 13168 ;;		Nothing
 13169 ;; This function is called by:
 13170 ;;		_I2C1_DO_SEND_RESTART_READ
 13171 ;;		_I2C1_DO_SEND_RESTART_WRITE
 13172 ;;		_I2C1_DO_SEND_RESTART
 13173 ;;		_I2C1_DO_RX_EMPTY
 13174 ;; This function uses a non-reentrant model
 13175 ;;
 13176                           
 13177     0F92                     _I2C1_MasterEnableRestart:	
 13178                           ;psect for function _I2C1_MasterEnableRestart
 13179                           
 13180     0F92                     i1l3097:	
 13181                           ;incstack = 0
 13182                           ; Regs used in _I2C1_MasterEnableRestart: []
 13183                           
 13184                           
 13185                           ;mcc_generated_files/i2c1_master.c: 576:     SSP1CON2bits.RSEN = 1;
 13186     0F92  0023               	movlb	3	; select bank3
 13187     0F93  1491               	bsf	17,1	;volatile
 13188     0F94                     i1l489:
 13189     0F94  0008               	return
 13190     0F95                     __end_of_I2C1_MasterEnableRestart:
 13191     0002                     ___latbits      equ	2
 13192     007E                     btemp           set	126	;btemp
 13193     007E                     int$flags       set	126
 13194     007E                     wtemp0          set	126
 13195                           
 13196                           	psect	idloc
 13197                           
 13198                           ;Config register IDLOC0 @ 0x8000
 13199                           ;	unspecified, using default values
 13200     8000                     	org	32768
 13201     8000  3FFF               	dw	16383
 13202                           
 13203                           ;Config register IDLOC1 @ 0x8001
 13204                           ;	unspecified, using default values
 13205     8001                     	org	32769
 13206     8001  3FFF               	dw	16383
 13207                           
 13208                           ;Config register IDLOC2 @ 0x8002
 13209                           ;	unspecified, using default values
 13210     8002                     	org	32770
 13211     8002  3FFF               	dw	16383
 13212                           
 13213                           ;Config register IDLOC3 @ 0x8003
 13214                           ;	unspecified, using default values
 13215     8003                     	org	32771
 13216     8003  3FFF               	dw	16383
 13217                           
 13218                           	psect	config
 13219                           
 13220                           ;Config register CONFIG1 @ 0x8007
 13221                           ;	External Oscillator mode selection bits
 13222                           ;	FEXTOSC = OFF, Oscillator not enabled
 13223                           ;	Power-up default value for COSC bits
 13224                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 13225                           ;	Clock Out Enable bit
 13226                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 13227                           ;	Clock Switch Enable bit
 13228                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13229                           ;	Fail-Safe Clock Monitor Enable bit
 13230                           ;	FCMEN = ON, FSCM timer enabled
 13231     8007                     	org	32775
 13232     8007  3FEC               	dw	16364
 13233                           
 13234                           ;Config register CONFIG2 @ 0x8008
 13235                           ;	Master Clear Enable bit
 13236                           ;	MCLRE = ON, MCLR pin is Master Clear function
 13237                           ;	Power-up Timer Enable bit
 13238                           ;	PWRTE = OFF, PWRT disabled
 13239                           ;	Low-Power BOR enable bit
 13240                           ;	LPBOREN = OFF, ULPBOR disabled
 13241                           ;	Brown-out reset enable bits
 13242                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 13243                           ;	Brown-out Reset Voltage Selection
 13244                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 13245                           ;	Zero-cross detect disable
 13246                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 13247                           ;	Peripheral Pin Select one-way control
 13248                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 13249                           ;	Stack Overflow/Underflow Reset Enable bit
 13250                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 13251                           ;	Background Debugger
 13252                           ;	DEBUG = OFF, Background Debugger disabled
 13253     8008                     	org	32776
 13254     8008  3FFF               	dw	16383
 13255                           
 13256                           ;Config register CONFIG3 @ 0x8009
 13257                           ;	WDT Period Select bits
 13258                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13259                           ;	WDT operating mode
 13260                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 13261                           ;	WDT Window Select bits
 13262                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13263                           ;	WDT input clock selector
 13264                           ;	WDTCCS = SC, Software Control
 13265     8009                     	org	32777
 13266     8009  3F9F               	dw	16287
 13267                           
 13268                           ;Config register CONFIG4 @ 0x800A
 13269                           ;	UserNVM self-write protection bits
 13270                           ;	WRT = OFF, Write protection off
 13271                           ;	Scanner Enable bit
 13272                           ;	SCANE = available, Scanner module is available for use
 13273                           ;	Low Voltage Programming Enable bit
 13274                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 13275     800A                     	org	32778
 13276     800A  3FFF               	dw	16383
 13277                           
 13278                           ;Config register CONFIG5 @ 0x800B
 13279                           ;	UserNVM Program memory code protection bit
 13280                           ;	CP = OFF, Program Memory code protection disabled
 13281                           ;	DataNVM code protection bit
 13282                           ;	CPD = OFF, Data EEPROM code protection disabled
 13283     800B                     	org	32779
 13284     800B  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    32
    Data        0
    BSS         71
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      79
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    d$data	PTR unsigned char  size(2) Largest target is 0

    f$.$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@buffer(BANK0[17]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@buffer(BANK0[17]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$2574	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F146(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F157(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F180(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F163(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F169(), 
		 -> NULL(), 

    I2C1_DO_TX$2574$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_DO_TX$2579	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    i2c1_fsmStateTable	const PTR FTN()enum E12623[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_MasterFsm$2573	const PTR FTN()enum E12623 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_IDLE(), I2C1_DO_RCEN(), I2C1_DO_RESET(), 
		 -> I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), 
		 -> I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), I2C1_DO_TX(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read1ByteRegister@reg(COMMON[1]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> pcf8574_write@data(BANK0[1]), pcf8574_write_wEnable@writeBuffer(BANK0[3]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F146(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F157(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F180(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F163(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F169(), NULL(), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F146(), rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F157(), 
		 -> rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F180(), wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F163(), 
		 -> wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F169(), NULL(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_MasterIsr(), 

    I2C1_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F146(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F157(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F180(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F163(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F169(), 
		 -> NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> bufferBlock$data(COMMON[2]), d$data(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> I2C1_Read1ByteRegister@returnValue$data(COMMON[2]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read2ByteRegister@returnValue$data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@data$data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@data$data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_read1ByteRegister@d2$data(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@reg(COMMON[1]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read2ByteRegister@result$data(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@data$data(COMMON[2]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_write2ByteRegister@data$data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), pcf8574_write@data(BANK0[1]), pcf8574_write_wEnable@writeBuffer(BANK0[3]), 
		 -> NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2$data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result$data	PTR unsigned char  size(2) Largest target is 0

    i2c_write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 3
		 -> pcf8574_write@data(BANK0[1]), pcf8574_write_wEnable@writeBuffer(BANK0[3]), 

    lcd_writemessage@message	PTR const unsigned char  size(1) Largest target is 17
		 -> main@buffer(BANK0[17]), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_MasterIsr(), NULL(), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F146@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F157@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F180@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F180@ptr$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@p$data	PTR unsigned char  size(2) Largest target is 0

    S2047$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@buffer(BANK0[17]), 

    S2047$source	PTR const unsigned char  size(2) Largest target is 0

    S330$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S330$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    S330$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd1RegCompleteHandler@i2c1_master_example$F146(), 
		 -> rd2RegCompleteHandler(), rd2RegCompleteHandler@i2c1_master_example$F157(), rdBlkRegCompleteHandler(), rdBlkRegCompleteHandler@i2c1_master_example$F180(), 
		 -> wr1RegCompleteHandler(), wr1RegCompleteHandler@i2c1_master_example$F163(), wr2RegCompleteHandler(), wr2RegCompleteHandler@i2c1_master_example$F169(), 
		 -> NULL(), 

    S330$data_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read1ByteRegister@reg(COMMON[1]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), 
		 -> pcf8574_write@data(BANK0[1]), pcf8574_write_wEnable@writeBuffer(BANK0[3]), NULL(NULL[0]), 

    S75$data	PTR unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer(BANK0[17]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    wr1RegCompleteHandler@i2c1_master_example$F163@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F169@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_ReadDataBlock@bufferBlock(COMMON[4]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_readDataBlock@d(COMMON[4]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C1_MasterIsr->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F146
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F157
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F180
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F163
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F169
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F146
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F157
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F180
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F163
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F169
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F146
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F157
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F180
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F163
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F169
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F146
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F157
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F180
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F163
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F169
    _wr2RegCompleteHandler@i2c1_master_example$F169->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F163->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F180->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F157->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F146->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->i1_I2C1_SetCallback

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _lcd_writemessage->_lcd_go
    _lcd_writeletter->_pcf8574_write_wEnable
    _lcd_go->_lcd_command
    _lcd_start->_lcd_command
    _lcd_lighting_ac->_pcf8574_write
    _pcf8574_write->_i2c_writeNBytes
    _lcd_delete->_lcd_command
    _lcd_command->_pcf8574_write_wEnable
    _pcf8574_write_wEnable->_i2c_writeNBytes
    _i2c_writeNBytes->_I2C1_SetAddressNackCallback
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_Open->_I2C1_SetInterruptHandler
    _I2C1_MasterWrite->_I2C1_MasterOperation

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    7388
                                             51 BANK0     21    21      0
           _ADCC_GetSingleConversion
                  _SYSTEM_Initialize
                         _lcd_delete
                          _lcd_start
                   _lcd_writemessage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    14      5    1760
                                             34 BANK0     17    12      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     3      5    1559
                                             26 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    12      4    1434
                                             10 BANK0     16    12      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     230
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2      67
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     302
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_writemessage                                     3     1      2    1626
                                             22 BANK0      3     1      2
                             _lcd_go
                    _lcd_writeletter
 ---------------------------------------------------------------------------------
 (2) _lcd_writeletter                                      2     2      0     692
                                             17 BANK0      2     2      0
                           _lcd_busy
              _pcf8574_write_wEnable
 ---------------------------------------------------------------------------------
 (2) _lcd_go                                               3     2      1     836
                                             19 BANK0      3     2      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            1     1      0    3208
                                             19 BANK0      1     1      0
                        _lcd_command
                         _lcd_delete
                    _lcd_lighting_ac
                      _pcf8574_write
              _pcf8574_write_wEnable
 ---------------------------------------------------------------------------------
 (2) _lcd_lighting_ac                                      0     0      0     595
                      _pcf8574_write
 ---------------------------------------------------------------------------------
 (2) _pcf8574_write                                        1     1      0     595
                                             14 BANK0      1     1      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _lcd_delete                                           0     0      0     692
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          2     2      0     692
                                             17 BANK0      2     2      0
                           _lcd_busy
              _pcf8574_write_wEnable
 ---------------------------------------------------------------------------------
 (3) _pcf8574_write_wEnable                                5     5      0     634
                                             14 BANK0      3     3      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (4) _i2c_writeNBytes                                      4     1      3     560
                                             10 BANK0      4     1      3
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetBuffer                                       4     0      4      72
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetAddressNackCallback                          4     0      4     258
                                              6 BANK0      4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetCallback                                     6     3      3     190
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (5) _I2C1_Open                                            2     2      0      76
                                              2 BANK0      2     2      0
                _I2C1_MasterClearIrq
               _I2C1_MasterEnableIrq
                    _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetInterruptHandler                             2     0      2      23
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterEnableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     0     0      0      53
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterOperation                                 2     2      0      53
                                              0 BANK0      2     2      0
                   _I2C1_MasterStart
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_Close                                           1     1      0      24
                                              0 BANK0      1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             3     1      2      29
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0   14443
                                NULL *
                     _I2C1_MasterIsr *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsr                                      0     0      0   14443
                     _I2C1_MasterFsm
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterFsm                                      2     2      0   14443
                                             12 COMMON     2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                  _I2C1_MasterIsNack
              i1_I2C1_MasterClearIrq
 ---------------------------------------------------------------------------------
 (12) i1_I2C1_MasterClearIrq                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_TX_EMPTY                                    2     2      0    3589
                                             10 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (13) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_TX                                          2     2      0    3618
                                             10 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      29
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_SEND_ADR_READ                               0     0      0      29
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (13) _I2C1_MasterSendTxData                               1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_RX                                          2     2      0    3589
                                             10 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (13) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (13) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (13) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_DO_ADDRESS_NACK                                2     2      0    3589
                                             10 COMMON     2     2      0
                                NULL *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (13) _wr2RegCompleteHandler@i2c1_master_example$F169      1     0      1     354
                                              9 COMMON     1     0      1
       _I2C1_SetDataCompleteCallback
                   i1_I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (13) _wr2RegCompleteHandler                               1     0      1     354
                                              9 COMMON     1     0      1
       _I2C1_SetDataCompleteCallback
                   i1_I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (13) _wr1RegCompleteHandler@i2c1_master_example$F163      1     0      1     354
                                              9 COMMON     1     0      1
       _I2C1_SetDataCompleteCallback
                   i1_I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (13) _wr1RegCompleteHandler                               1     0      1     354
                                              9 COMMON     1     0      1
       _I2C1_SetDataCompleteCallback
                   i1_I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (13) _rdBlkRegCompleteHandler@i2c1_master_example$F180    1     0      1     376
                                              9 COMMON     1     0      1
       _I2C1_SetDataCompleteCallback
                   i1_I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (13) _rdBlkRegCompleteHandler                             1     0      1     376
                                              9 COMMON     1     0      1
       _I2C1_SetDataCompleteCallback
                   i1_I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (13) _rd2RegCompleteHandler@i2c1_master_example$F157      1     0      1     354
                                              9 COMMON     1     0      1
       _I2C1_SetDataCompleteCallback
                   i1_I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (13) _rd2RegCompleteHandler                               1     0      1     354
                                              9 COMMON     1     0      1
       _I2C1_SetDataCompleteCallback
                   i1_I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (13) _rd1RegCompleteHandler@i2c1_master_example$F146      1     0      1     354
                                              9 COMMON     1     0      1
       _I2C1_SetDataCompleteCallback
                   i1_I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (13) _rd1RegCompleteHandler                               1     0      1     354
                                              9 COMMON     1     0      1
       _I2C1_SetDataCompleteCallback
                   i1_I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (14) i1_I2C1_SetBuffer                                    4     0      4      64
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (14) _I2C1_SetDataCompleteCallback                        3     0      3     268
                                              6 COMMON     3     0      3
                 i1_I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (15) i1_I2C1_SetCallback                                  6     3      3     184
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_CallbackReturnStop                             1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) _I2C1_CallbackReturnReset                            1     0      1       5
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _lcd_delete
     _lcd_command
       _lcd_busy
       _pcf8574_write_wEnable
         _i2c_writeNBytes
           _I2C1_Close
             _I2C1_MasterClearIrq
             _I2C1_MasterClose
             _I2C1_MasterDisableIrq
           _I2C1_MasterWrite
             _I2C1_MasterOperation
               _I2C1_MasterStart
           _I2C1_Open
             _I2C1_MasterClearIrq
             _I2C1_MasterEnableIrq
             _I2C1_MasterOpen
             _I2C1_SetInterruptHandler
           _I2C1_SetAddressNackCallback
             _I2C1_SetCallback
           _I2C1_SetBuffer
   _lcd_start
     _lcd_command
     _lcd_delete
     _lcd_lighting_ac
       _pcf8574_write
         _i2c_writeNBytes
     _pcf8574_write
     _pcf8574_write_wEnable
   _lcd_writemessage
     _lcd_go
       _lcd_command
     _lcd_writeletter
       _lcd_busy
       _pcf8574_write_wEnable
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _I2C1_MasterIsr *
     _I2C1_MasterFsm
       _I2C1_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_SEND_RESTART *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_STOP *
           _I2C1_MasterStop
         _rd1RegCompleteHandler *
           _I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
           i1_I2C1_SetBuffer
         _rd1RegCompleteHandler@i2c1_master_example$F146 *
           _I2C1_SetDataCompleteCallback
           i1_I2C1_SetBuffer
         _rd2RegCompleteHandler *
           _I2C1_SetDataCompleteCallback
           i1_I2C1_SetBuffer
         _rd2RegCompleteHandler@i2c1_master_example$F157 *
           _I2C1_SetDataCompleteCallback
           i1_I2C1_SetBuffer
         _rdBlkRegCompleteHandler *
           _I2C1_SetDataCompleteCallback
           i1_I2C1_SetBuffer
         _rdBlkRegCompleteHandler@i2c1_master_example$F180 *
           _I2C1_SetDataCompleteCallback
           i1_I2C1_SetBuffer
         _wr1RegCompleteHandler *
           _I2C1_SetDataCompleteCallback
           i1_I2C1_SetBuffer
         _wr1RegCompleteHandler@i2c1_master_example$F163 *
           _I2C1_SetDataCompleteCallback
           i1_I2C1_SetBuffer
         _wr2RegCompleteHandler *
           _I2C1_SetDataCompleteCallback
           i1_I2C1_SetBuffer
         _wr2RegCompleteHandler@i2c1_master_example$F169 *
           _I2C1_SetDataCompleteCallback
           i1_I2C1_SetBuffer
       _I2C1_DO_IDLE *
       _I2C1_DO_RCEN *
         _I2C1_MasterStartRx
       _I2C1_DO_RESET *
       _I2C1_DO_RX *
         NULL(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_RX_NACK_RESTART *
           _I2C1_MasterSendNack
         _I2C1_DO_RX_NACK_STOP *
           _I2C1_MasterSendNack
         _I2C1_MasterGetRxData *
         _I2C1_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd1RegCompleteHandler@i2c1_master_example$F146 *
         _rd2RegCompleteHandler *
         _rd2RegCompleteHandler@i2c1_master_example$F157 *
         _rdBlkRegCompleteHandler *
         _rdBlkRegCompleteHandler@i2c1_master_example$F180 *
         _wr1RegCompleteHandler *
         _wr1RegCompleteHandler@i2c1_master_example$F163 *
         _wr2RegCompleteHandler *
         _wr2RegCompleteHandler@i2c1_master_example$F169 *
       _I2C1_DO_RX_ACK *
         _I2C1_MasterSendAck
       _I2C1_DO_RX_NACK_RESTART *
       _I2C1_DO_RX_NACK_STOP *
       _I2C1_DO_SEND_ADR_READ *
         _I2C1_MasterSendTxData
       _I2C1_DO_SEND_ADR_WRITE *
         _I2C1_MasterSendTxData
       _I2C1_DO_SEND_RESTART *
       _I2C1_DO_SEND_RESTART_READ *
         _I2C1_MasterEnableRestart
       _I2C1_DO_SEND_RESTART_WRITE *
         _I2C1_MasterEnableRestart
       _I2C1_DO_SEND_STOP *
       _I2C1_DO_TX *
         NULL(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
         _I2C1_DO_SEND_STOP *
         _I2C1_MasterIsNack *
         _I2C1_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd1RegCompleteHandler@i2c1_master_example$F146 *
         _rd2RegCompleteHandler *
         _rd2RegCompleteHandler@i2c1_master_example$F157 *
         _rdBlkRegCompleteHandler *
         _rdBlkRegCompleteHandler@i2c1_master_example$F180 *
         _wr1RegCompleteHandler *
         _wr1RegCompleteHandler@i2c1_master_example$F163 *
         _wr2RegCompleteHandler *
         _wr2RegCompleteHandler@i2c1_master_example$F169 *
       _I2C1_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_SEND_RESTART *
         _I2C1_DO_SEND_STOP *
         _I2C1_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd1RegCompleteHandler@i2c1_master_example$F146 *
         _rd2RegCompleteHandler *
         _rd2RegCompleteHandler@i2c1_master_example$F157 *
         _rdBlkRegCompleteHandler *
         _rdBlkRegCompleteHandler@i2c1_master_example$F180 *
         _wr1RegCompleteHandler *
         _wr1RegCompleteHandler@i2c1_master_example$F163 *
         _wr2RegCompleteHandler *
         _wr2RegCompleteHandler@i2c1_master_example$F169 *
       _I2C1_MasterIsNack *
       i1_I2C1_MasterClearIrq *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     72      79     98.8%
BANK1               80      0      64     80.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     157      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr 16 20:04:07 2025

                                  ?_pcf8574_write_wEnable 0070  
                                            lcd_go@column 0033  
                                                      l37 04CE  
                                            ___awdiv@sign 0025  
                                                     l311 030B  
                                                     l320 05EB  
                                                     l312 030D  
                                                     l322 05F3  
                                                     l308 07C5  
                                                     l316 062A  
                                                     l335 068F  
                                                     l328 0FFA  
                                                     l344 07A8  
                                                     l353 07F8  
                                                     l525 0FAC  
                                                     l358 0409  
                                                     l519 0FB2  
                                                     l528 0FA6  
                                                     l480 0FA9  
                                                     l619 0352  
                                                     l477 079C  
                                                     l717 078F  
                                                     l742 06B9  
                                                     l903 0678  
                                                     l823 07E5  
                                                     l681 07BC  
                                                     l745 03D0  
                                                     l498 0FAF  
                                                     l754 0525  
                                                     l770 04A1  
                                                     l915 0699  
                                                     l684 07D6  
                                                     l773 0473  
                                                     l781 0FFF  
                                                     l918 06A5  
                                                     l678 0773  
                                                     l767 0FF5  
                                                     l759 060F  
                                                     u940 0795  
                                                     u941 0794  
                                                     u950 05DF  
                                                     u951 05DE  
                                                     u960 05E7  
                                                     u961 05E6  
                                                     u970 03D9  
                                                     u971 03D8  
                                                     u980 067E  
                                                     u981 067D  
                                                     u990 02D1  
                                                     u991 02D0  
                                   ?_I2C1_MasterOperation 0070  
                                                     _abs 0752  
                                            ___awmod@sign 0025  
                                                     wreg 0009  
                                  ?_I2C1_MasterSendTxData 0070  
                                    _I2C1_DO_RX_NACK_STOP 0FE2  
                               ?_I2C1_MasterEnableRestart 0070  
                                   __end_of_pcf8574_write 0790  
                                    I2C1_SetBuffer@buffer 0020  
                                  ?i1_I2C1_MasterClearIrq 0070  
                                                    ?_abs 0026  
                                 ??_rd2RegCompleteHandler 007A  
                                                    l1302 0281  
                                                    l3001 05EE  
                                                    l3003 05F1  
                                                    l3011 03F2  
                                                    l3021 02D1  
                                                    l3013 0679  
                                                    l3031 02DA  
                                                    l3023 02D5  
                                                    l3007 03D3  
                                                    l3015 067E  
                                                    l3041 02ED  
                                                    l3033 02DE  
                                                    l3025 02D6  
                                                    l3009 03D9  
                                                    l3017 068E  
                                                    l3051 0303  
                                                    l3043 02F2  
                                                    l3035 02E3  
                                                    l3027 02D7  
                                                    l3019 02CA  
                                                    l4011 0294  
                                                    l4003 0282  
                                                    l3061 0FF6  
                                                    l3053 0306  
                                                    l3045 02F3  
                                                    l3037 02E4  
                                                    l3029 02D8  
                                                    l3301 0232  
                                                    l4021 02BC  
                                                    l4013 0297  
                                                    l4005 0285  
                                                    l3071 0624  
                                                    l3055 0309  
                                                    l3047 02F8  
                                                    l3039 02E9  
                                                    l3311 0246  
                                                    l3303 0236  
                                                    l4015 02A3  
                                                    l4007 0286  
                                                    l3073 0628  
                                                    l3065 0610  
                                                    l3049 0300  
                                                    l1289 0183  
                                                    l3321 025A  
                                                    l3313 024C  
                                                    l3305 023B  
                                                    l4017 02A6  
                                                    l4009 0287  
                                                    l1650 0763  
                                                    l3067 0618  
                                                    l3059 079D  
                                                    l3091 04B9  
                                                    l3251 06AF  
                                                    l3331 0278  
                                                    l3323 0264  
                                                    l3315 024F  
                                                    l3307 023D  
                                                    l1643 05D5  
                                                    l4019 02AF  
                                                    l3253 0FF1  
                                                    l3069 061B  
                                                    l3093 04C3  
                                                    l3085 04A4  
                                                    l3245 06A6  
                                                    l3261 0133  
                                                    l3333 027D  
                                                    l3325 0268  
                                                    l3317 0254  
                                                    l3309 0241  
                                                    l3341 0191  
                                                    l1637 0127  
                                                    l1662 01DC  
                                                    l3095 04C6  
                                                    l3087 04A4  
                                                    l3247 06A9  
                                                    l3271 0142  
                                                    l3263 0135  
                                                    l3255 0128  
                                                    l3327 026D  
                                                    l3319 0256  
                                                    l3343 0196  
                                                    l3089 04AE  
                                                    l3249 06AC  
                                                    l3521 0444  
                                                    l3281 0156  
                                                    l3273 0148  
                                                    l3265 0139  
                                                    l3257 012A  
                                                    l3329 0273  
                                                    l3353 0752  
                                                    l1673 07FF  
                                                    l3345 01A0  
                                                    l3337 0184  
                                                    l3611 0314  
                                                    l3531 045C  
                                                    l3523 0447  
                                                    l3283 0165  
                                                    l3275 014B  
                                                    l3291 0175  
                                                    l3267 013E  
                                                    l3259 012E  
                                                    l3355 0757  
                                                    l3347 01BE  
                                                    l3339 018B  
                                                    l3621 031E  
                                                    l3613 0316  
                                                    l3533 0467  
                                                    l3525 0449  
                                                    l3701 047B  
                                                    l3293 017A  
                                                    l3285 0169  
                                                    l3277 0150  
                                                    l3269 0140  
                                                    l3357 0758  
                                                    l3349 01D3  
                                                    l3541 0055  
                                                    l3631 0333  
                                                    l3623 0321  
                                                    l3615 0318  
                                                    l3535 046A  
                                                    l3527 0450  
                                                    l3519 0785  
                                                    l3711 049A  
                                                    l3703 0482  
                                                    l3295 017F  
                                                    l3287 016A  
                                                    l3279 0152  
                                                    l3551 007A  
                                                    l3543 005B  
                                                    l1599 05B7  
                                                    l3641 033D  
                                                    l3633 0335  
                                                    l3625 0323  
                                                    l3617 031A  
                                                    l3609 030E  
                                                    l3529 0453  
                                                    l3705 0485  
                                                    l3289 016F  
                                                    l3561 00B9  
                                                    l3553 0086  
                                                    l3545 005F  
                                                    l3537 003B  
                                                    l3713 05B8  
                                                    l3651 0347  
                                                    l3643 033F  
                                                    l3635 0337  
                                                    l3627 0325  
                                                    l3619 031C  
                                                    l3731 039D  
                                                    l3707 048C  
                                                    l3299 0230  
                                                    l3571 00DE  
                                                    l3563 00C9  
                                                    l3555 0093  
                                                    l3547 0066  
                                                    l3539 004D  
                                                    l3715 05BE  
                                                    l3661 07B4  
                                                    l3653 034A  
                                                    l3645 0341  
                                                    l3637 0339  
                                                    l3629 0327  
                                                    l3725 0764  
                                                    l3741 03BD  
                                                    l3733 03A1  
                                                    l3709 0497  
                                                    l3573 00E7  
                                                    l3565 00CF  
                                                    l3557 0095  
                                                    l3549 0070  
                                                    l3717 05C9  
                                                    l3751 0696  
                                                    l3671 0676  
                                                    l3591 07BD  
                                                    l3663 07B7  
                                                    l3655 034D  
                                                    l3647 0343  
                                                    l3639 033B  
                                                    l3743 03CA  
                                                    l3735 03AD  
                                                    l3727 0397  
                                                    l3575 00F9  
                                                    l3567 00D4  
                                                    l3559 009C  
                                                    l3583 010D  
                                                    l3719 05D3  
                                                    l3753 0697  
                                                    l3593 07BF  
                                                    l3665 07B9  
                                                    l3657 034F  
                                                    l3649 0345  
                                                    l3673 0FFB  
                                                    l3745 03CD  
                                                    l3737 03B1  
                                                    l3729 039B  
                                                    l3681 04FF  
                                                    l3569 00D9  
                                                    l3577 00FC  
                                                    l3761 059A  
                                                    l3755 0698  
                                                    l3747 0692  
                                                    l3667 0661  
                                                    l3595 07C2  
                                                    l3659 07CF  
                                                    l2971 0FA4  
                                                    l3675 07DF  
                                                    l3739 03B9  
                                                    l3683 0503  
                                                    l3691 050F  
                                                    l3579 0103  
                                                    l3763 05A0  
                                                    l3757 069E  
                                                    l3749 0695  
                                                    l3669 0674  
                                                    l3597 07C4  
                                                    l2981 079B  
                                                    l2973 0790  
                                                    l3677 07E1  
                                                    l3685 0507  
                                                    l3693 051D  
                                                    l3773 05F6  
                                                    l3765 05A2  
                                                    l2967 0FAD  
                                                    l2991 05D8  
                                                    l2975 0795  
                                                    l3695 0521  
                                                    l3687 050B  
                                                    l3679 04FE  
                                                    l3775 05FC  
                                                    l3767 05A4  
                                                    l2993 05DF  
                                                    l2985 0FB0  
                                                    l2977 0796  
                                                    l2969 07F3  
                                                    l3697 0476  
                                                    l3777 0604  
                                                    l3769 05B1  
                                                    l2987 0FAA  
                                                    l2995 05E0  
                                                    l2979 0799  
                                                    l3699 0479  
                                                    l3779 0607  
                                                    l2989 0FA7  
                                                    l2997 05E2  
                                                    l2999 05E7  
                                                    STR_1 0597  
                                                    u1000 0618  
                                                    u1001 0617  
                                                    u1020 04AE  
                                                    u1021 04AD  
                                                    u1030 04CE  
                                                    u1110 0165  
                                                    u1031 04CD  
                                                    u1111 0164  
                                                    u1200 0264  
                                                    u1105 0157  
                                                    u1201 0263  
                                                    u1130 0175  
                                                    u1050 012E  
                                                    u1131 0174  
                                                    u1115 0161  
                                                    u1051 012D  
                                                    u1140 017A  
                                                    u1060 0139  
                                                    u1220 0273  
                                                    u1141 0179  
                                                    u1125 016B  
                                                    u1061 0138  
                                                    u1221 0272  
                                                    u1205 0260  
                                                    u1070 0148  
                                                    u1230 0278  
                                                    u1150 0236  
                                                    u1071 0147  
                                                    u1231 0277  
                                                    u1215 0269  
                                                    u1151 0235  
                                                    u1160 0241  
                                                    u1240 018B  
                                                    u1400 00D9  
                                                    u1161 0240  
                                                    u1241 018A  
                                                    u1401 00D8  
                                                    u1090 0156  
                                                    u1170 024C  
                                                    u1250 0191  
                                                    u1410 00DE  
                                                    u1330 004D  
                                                    u1091 0155  
                                                    u1171 024B  
                                                    u1251 0190  
                                                    u1411 00DD  
                                                    u1331 004C  
                                                    u1260 01A0  
                                                    u1420 0102  
                                                    u1340 0070  
                                                    u1325 0460  
                                                    u1085 014C  
                                                    u1261 019F  
                                                    u1421 0101  
                                                    u1341 006F  
                                                    _LATA 0016  
                                                    u1190 025A  
                                                    u1270 01BE  
                                                    u1350 007A  
                                                    _LATB 0017  
                                                    u1191 0259  
                                                    u1271 01BD  
                                                    u1351 0079  
                                                    _LATC 0018  
                                                    u1280 0757  
                                                    u1360 009A  
                                                    _LATD 0019  
                                                    u1185 0250  
                                                    u1281 0756  
                                                    u1361 0098  
                                                    _LATE 001A  
                                                    u1370 009B  
                                                    u1275 01BA  
                                                    u1380 00CF  
                                                    u1460 05D3  
                                                    u1381 00CE  
                                                    u1461 05D2  
                                                    u1470 069E  
                                                    u1390 00D4  
                                                    u1471 069D  
                                                    u1455 0490  
                                                    u1391 00D3  
                                                    u1480 060F  
                                                    u1481 060E  
                                                    u1907 0522  
                                                    u1917 03A8  
                                                    u1927 03B2  
                                                    u1937 03BA  
                                                    u1947 03C5  
                                                    u1867 028D  
                                                    _PMD0 0796  
                                                    u1957 0457  
                                                    u1877 029D  
                                                    _PMD1 0797  
                                                    _PMD2 0798  
                                                    u1967 046E  
                                                    u1887 0486  
                                                    _PMD3 0799  
                                                    i1l40 072B  
                                                    _PMD4 079A  
                                                    u1977 0FF2  
                                                    u1897 049B  
                                                    _PMD5 079B  
                                                    i1l19 073E  
                                                    i1l55 0718  
                                                    i1l67 0705  
                                                    i1l79 0660  
                                                    _WPUA 0F39  
                                                    _WPUB 0F44  
                                                    _WPUC 0F4F  
                                                    _WPUD 0F5A  
                                                    _WPUE 0F65  
                                 ??_wr2RegCompleteHandler 007A  
                                        ??_I2C1_MasterFsm 007C  
                                        ??_I2C1_MasterIsr 007E  
                               ??_I2C1_CallbackReturnStop 007A  
                                                    abs@a 0026  
                                                    _dbuf 00A0  
                                                    _main 0282  
                                                    _prec 0068  
                                                    fsr0h 0005  
                                                    fsr1h 0007  
                                                    indf0 0000  
                                                    fsr0l 0004  
                                                    indf1 0001  
                                                    fsr1l 0006  
                                                    btemp 007E  
                                                    start 0025  
                                        ??_I2C1_SetBuffer 0024  
                           I2C1_CallbackReturnStop@funPtr 0079  
                                                   ??_abs 0028  
                           __end_of_OSCILLATOR_Initialize 07BD  
                                                   _ADACQ 009D  
                                       __end_of_I2C1_Open 030E  
                                                   _ADCAP 009B  
                                                   _ADACT 0099  
                                                   ?_main 0070  
                                                   _ADCLK 0098  
                                                   _ADCNT 010C  
                                                   _ADPCH 009E  
                                                   _ADREF 009A  
                                         __end_of___awdiv 0184  
                                                   _ADPRE 009C  
                                         __end_of___awmod 0282  
                                                   _ADRPT 010D  
                                         ___awdiv@divisor 0020  
                                                   i1l201 0645  
                                                   i1l411 04FB  
                                                   i1l501 0F97  
                                                   i1l405 07EC  
                                                   i1l510 0FB6  
                                                   i1l335 0782  
                                                   i1l192 06DF  
                                                   i1l504 07FE  
                                                   i1l432 0FD2  
                                                   i1l441 0FE1  
                                                   i1l361 0FBE  
                                                   i1l338 07B3  
                                                   i1l450 0FF0  
                                                   i1l195 06CC  
                                                   i1l507 0FBA  
                                                   i1l531 0FA0  
                                                   i1l371 07CE  
                                                   i1l435 0FD7  
                                                   i1l380 022F  
                                                   i1l444 0FE6  
                                                   i1l189 06F2  
                                                   i1l429 0FCD  
                                                   i1l365 0576  
                                                   i1l358 0441  
                                                   i1l198 0751  
                                                   i1l374 07DE  
                                                   i1l438 0FDC  
                                                   i1l447 0FEB  
                                                   i1l464 0F91  
                                                   i1l368 0FC8  
                                                   i1l456 054E  
                                                   i1l528 0FA3  
                                                   i1l377 0214  
                                                   i1l393 0370  
                                                   i1l641 0023  
                                                   i1l394 0396  
                                                   i1l467 0003  
                                                   i1l483 0F9D  
                                                   i1l636 001A  
                                                   i1l637 0023  
                                                   i1l486 0FC3  
                                                   i1l495 0F9A  
                                                   i1l489 0F94  
                                         ___awdiv@counter 0024  
                              __end_of_i2c1_fsmStateTable 0597  
                                                   _OSCEN 0891  
                                            vfpfcnvrt@fmt 002C  
                                  ??_I2C1_MasterEnableIrq 0020  
                                                   _TRISA 0011  
                                                   _TRISB 0012  
                                                   _TRISC 0013  
                                                   _TRISD 0014  
                                                   _TRISE 0015  
                                  ??_I2C1_MasterGetRxData 0070  
                                   ?_I2C1_DO_RX_NACK_STOP 0070  
                              ??_I2C1_CallbackReturnReset 007A  
                                       ??_I2C1_MasterOpen 0020  
                                       ??_I2C1_MasterStop 0070  
                                       ??_I2C1_Initialize 0020  
                                                   _flags 006C  
                                                   _fputc 0184  
                                                   _width 00DE  
                                                   _putch 07FF  
                                 __end_of_lcd_writeletter 04A2  
       rd1RegCompleteHandler@i2c1_master_example$F146@ptr 0079  
       wr1RegCompleteHandler@i2c1_master_example$F163@ptr 0079  
                                                   pclath 000A  
     rdBlkRegCompleteHandler@i2c1_master_example$F180@ptr 0079  
       rd2RegCompleteHandler@i2c1_master_example$F157@ptr 0079  
       wr2RegCompleteHandler@i2c1_master_example$F169@ptr 0079  
                                                   status 0003  
                                                   wtemp0 007E  
                                         __end_of_sprintf 05B8  
                                            ??_I2C1_DO_RX 007A  
                                            ??_I2C1_DO_TX 007A  
                                    i1I2C1_SetCallback@cb 0070  
                                  ??_I2C1_DO_ADDRESS_NACK 007A  
                                            ??_I2C1_Close 0020  
                                         __initialization 0027  
                                            __end_of_main 02C8  
                             ?_INTERRUPT_InterruptManager 0070  
                                  ??_I2C1_MasterOperation 0020  
                                                  ??_main 0053  
                                      __end_of_I2C1_DO_RX 0397  
                                      __end_of_I2C1_DO_TX 0230  
                                      __end_of_I2C1_Close 062B  
                                                  _ADACCH 0091  
                                                  _ADACCL 0090  
                                                  _ADCON0 0093  
                                                  _ADCON1 0094  
                                                  _ADCON2 0095  
                                                  _ADCON3 0096  
                                                  _ADERRH 0117  
                                                  _ADERRL 0116  
                                                  ?_fputc 0020  
                                                  _ADLTHH 010F  
                                                  _ADLTHL 010E  
                                                  _ADRESH 008D  
                                                  _ADRESL 008C  
                                                  _ADSTAT 0097  
                                                  _ADUTHH 0111  
                                        ___awdiv@dividend 0022  
                                                  _ADUTHL 0110  
                                                  _ANSELA 0F38  
                                                  ?_putch 0070  
                                                  _ANSELB 0F43  
                                                  _ANSELC 0F4E  
                                                  _ANSELD 0F59  
                                                  _ANSELE 0F64  
                                                  u101_20 0411  
                                                  u101_21 0410  
                                                  _RC3PPS 0F23  
                                                  _RC4PPS 0F24  
                                                  i1l3101 0FB3  
                                                  i1l3103 0774  
                                                  i1l3111 0736  
                                                  u104_20 0779  
                                                  i1l3105 0779  
                                                  u104_21 0778  
                                                  i1l3113 073D  
                                                  i1l3121 072A  
                                                  _ODCONA 0F3A  
                                                  _ODCONB 0F45  
                                                  i1l3107 0781  
                                                  i1l3203 0FD8  
                                                  _ODCONC 0F50  
                                                  _ODCOND 0F5B  
                                                  i1l3109 072C  
                                                  i1l3117 0719  
                                                  i1l3125 0706  
                                                  i1l3133 06F3  
                                                  i1l3141 0646  
                                                  i1l3213 0FB7  
                                                  i1l3205 0FDB  
                                                  i1l3221 0FE2  
                                                  _ODCONE 0F66  
                                                  i1l3119 0723  
                                                  i1l3127 0710  
                                                  i1l3135 06FD  
                                                  i1l3143 065F  
                                                  i1l3151 06F1  
                                                  i1l3231 0FD6  
                                                  i1l3223 0FE5  
                                                  i1l3215 0FE7  
                                                  i1l3081 042A  
                                                  i1l3129 0717  
                                                  i1l3137 0704  
                                                  i1l3241 0002  
                                                  i1l3209 0F9B  
                                                  i1l4201 0388  
                                                  i1l3217 0FEA  
                                                  i1l3083 07A9  
                                                  i1l3171 073F  
                                                  i1l3147 06E0  
                                                  i1l3155 06CD  
                                                  i1l3163 06BA  
                                                  i1l3227 0F98  
                                                  i1l3235 0F9E  
                                                  i1l3411 022E  
                                                  i1l4203 0206  
                                                  i1l3403 01F2  
                                                  i1l3077 040B  
                                                  i1l3173 0749  
                                                  i1l3149 06EA  
                                                  i1l3157 06D7  
                                                  i1l3165 06C4  
                                                  i1l3181 0644  
                                                  i1l3237 0F90  
                                                  i1l4205 04ED  
                                                  i1l3405 0216  
                                                  i1l3421 035C  
                                                  i1l3229 0FD3  
                                                  i1l3501 052B  
                                                  i1l3079 0411  
                                                  i1l3175 0750  
                                                  i1l3159 06DE  
                                                  i1l3167 06CB  
                                                  i1l3407 0221  
                                                  i1l3423 0361  
                                                  i1l3191 0FC9  
                                                  i1l3511 0533  
                                                  u130_20 022C  
                                                  i1l3097 0F92  
                                                  i1l3185 07F9  
                                                  i1l3361 0FC4  
                                                  i1l3409 022C  
                                                  u130_21 022B  
                                                  i1l3433 0372  
                                                  i1l3425 036B  
                                                  i1l3193 0FCC  
                                                  i1l3505 052F  
                                                  i1l3601 0552  
                                                  i1l3099 0F95  
                                                  i1l3179 062B  
                                                  i1l3363 0FC6  
                                                  i1l3371 07C8  
                                                  i1l3443 037A  
                                                  i1l3427 036E  
                                                  i1l3419 0353  
                                                  i1l3451 07E6  
                                                  i1l3603 0557  
                                                  i1l3189 0FC0  
                                                  i1l3461 04D2  
                                                  i1l3365 0FC7  
                                                  i1l3373 07CD  
                                                  i1l3381 07DD  
                                                  i1l3437 0376  
                                                  i1l3453 07E8  
                                                  i1l3197 0FCE  
                                                  i1l3605 055F  
                                                  i1l3471 04DB  
                                                  i1l3455 07EB  
                                                  i1l3199 0FD1  
                                                  i1l3607 0562  
                                                  u131_20 036B  
                                                  i1l3465 04D6  
                                                  i1l3369 07C6  
                                                  i1l3377 07D7  
                                                  i1l3393 01EA  
                                                  i1l3385 01DD  
                                                  u131_21 036A  
                                                  i1l3467 04D9  
                                                  i1l3459 04CF  
                                                  i1l3379 07D9  
                                                  i1l3491 0FEC  
                                                  i1l3723 0FBB  
                                                  i1l3477 04DF  
                                                  i1l3397 01EE  
                                                  i1l3389 01E6  
                                                  i1l3485 0FDD  
                                                  i1l3493 0FEE  
                                                  i1l3487 0FE0  
                                                  i1l3495 0FEF  
                                                  i1l4199 0546  
                                                  i1l3499 0526  
                                                  i1l3589 0FA1  
                                                  i1l3599 054F  
                                                  i1l3991 0006  
                                                  i1l3993 000A  
                                                  i1l3995 000F  
                                                  i1l3997 0013  
                                                  i1l3999 001E  
                                                  u143_20 0557  
                                                  u143_21 0556  
                                                  u144_20 055F  
                                                  u144_21 055E  
                                                  _INLVLA 0F3C  
                                                  _INLVLB 0F47  
                                                  _INLVLC 0F52  
                                                  _INLVLD 0F5D  
                                                  _INLVLE 0F68  
                                                  u129_20 01E5  
                                                  u129_21 01E4  
                                                  u180_20 0013  
                                                  u180_21 0012  
                                                  u181_20 001E  
                                                  u181_21 001D  
                                                  u182_20 0022  
                                                  u182_21 0021  
                                                  u178_20 000A  
                                                  u178_21 0009  
                                                  u179_20 000F  
                                                  u179_21 000E  
                                                  _OSCFRQ 0893  
                                           vfpfcnvrt@done 0032  
                                       ?_I2C1_MasterClose 0070  
                                rdBlkRegCompleteHandler@p 0079  
                                 ??_I2C1_MasterDisableIrq 0020  
                                       ?_I2C1_MasterStart 0070  
                                       ?_I2C1_MasterWrite 0070  
                                      ??_I2C1_MasterClose 0020  
                                        _I2C1_DO_TX_EMPTY 04CF  
                                    lcd_writemessage@line 0038  
                                      ??_I2C1_MasterStart 0020  
                                      ??_I2C1_MasterWrite 0022  
                                            vfprintf@cfmt 0040  
                                        __end_of_lcd_busy 0FF6  
                                               ??___awdiv 0024  
                                               ??___awmod 0024  
                                       ??_i2c_writeNBytes 002D  
                                                  _lcd_go 04FC  
                                __end_ofi1_I2C1_SetBuffer 0783  
                                        ___awdiv@quotient 0026  
                                         ___awmod@divisor 0020  
                                         ___awmod@counter 0024  
                                ??_I2C1_DO_SEND_ADR_WRITE 0071  
                                       ?_I2C1_SetCallback 0020  
                                __end_of_lcd_writemessage 0610  
                                  ??_I2C1_DO_RX_NACK_STOP 0070  
                        __end_of_I2C1_SetInterruptHandler 07F9  
                                         _ADCC_Initialize 0661  
                                   _I2C1_DO_SEND_ADR_READ 07C6  
                                                  fputc@c 0020  
                                          _PMD_Initialize 07CF  
                           ?_I2C1_SetDataCompleteCallback 0076  
                                      ??_I2C1_SetCallback 0023  
                                                  putch@c 0070  
                                        __end_of_vfprintf 05D6  
                               ?_ADCC_GetSingleConversion 0020  
                I2C1_SetInterruptHandler@InterruptHandler 0020  
                                               ??_sprintf 0047  
                                 _I2C1_DO_RX_NACK_RESTART 0FE7  
                                   i1I2C1_SetCallback@idx 0075  
                                   i1I2C1_SetCallback@ptr 0072  
                                        ?_lcd_writeletter 0070  
                                       _SYSTEM_Initialize 0764  
                          I2C1_SetDataCompleteCallback@cb 0076  
                                 __end_of__initialization 0037  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0070  
                                 ??_pcf8574_write_wEnable 002E  
                                 _rdBlkRegCompleteHandler 0646  
                                          __pcstackCOMMON 0070  
                                     ??_SYSTEM_Initialize 0020  
                        __end_of_I2C1_MasterEnableRestart 0F95  
                                           __end_of_fputc 01DD  
                                           __end_of_putch 0800  
                                  __end_of_PMD_Initialize 07D7  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0070  
                                 ??_I2C1_MasterSendTxData 0070  
                                 ??i1_I2C1_MasterClearIrq 0070  
                                   __end_of_I2C1_DO_RESET 0FF1  
                                                 ??_fputc 0024  
                               __end_of_SYSTEM_Initialize 0774  
                                                 ??_putch 0020  
                                              __pbssBANK0 0068  
                                              __pbssBANK1 00A0  
                           __end_of_rd2RegCompleteHandler 0719  
                                    I2C1_Open@returnValue 0023  
                           __end_of_wr2RegCompleteHandler 0706  
                                   _rd1RegCompleteHandler 0719  
                                       _I2C1_DO_SEND_STOP 0FD8  
                                   _wr1RegCompleteHandler 072C  
                                              __pmaintext 0282  
                                      ?_I2C1_DO_SEND_STOP 0070  
                                 __end_of_ADCC_Initialize 0679  
                                         _I2C1_MasterOpen 0790  
                                              __pintentry 0004  
                                                 ?_lcd_go 0033  
                                         _I2C1_MasterStop 0F95  
                                         _I2C1_Initialize 07BD  
                                                 _ADFLTRH 0115  
                                                 _ADFLTRL 0114  
                                                 _ADPREVH 008F  
                                                 _ADPREVL 008E  
                                                 _ADSTPTH 0113  
                                                 _ADSTPTL 0112  
                                         ?_PMD_Initialize 0070  
                                  ?_I2C1_DO_SEND_ADR_READ 0070  
                                     ??_I2C1_DO_SEND_STOP 0070  
                                              _lcd_delete 0FFB  
                                       _I2C1_MasterIsNack 07F9  
                                                 _OSCCON1 088D  
                                                 _OSCCON3 088F  
                                               _I2C1_Open 02C8  
                               ??_I2C1_DO_RX_NACK_RESTART 0070  
                                                 _OSCTUNE 0892  
                                       _I2C1_MasterSetIrq 0F9E  
                                                 _SSP1ADD 018D  
                                                 _SLRCONA 0F3B  
                                                 _SLRCONB 0F46  
                                                 _SLRCONC 0F51  
                                                 _SLRCOND 0F5C  
                                                 _SLRCONE 0F67  
                                                 _SSP1BUF 018C  
                                _I2C1_SetInterruptHandler 07F3  
                                      ?_I2C1_MasterIsNack 0070  
                              ?_I2C1_DO_SEND_RESTART_READ 0070  
                                   lcd_writeletter@letter 0032  
                                               ?_lcd_busy 0070  
                          ??_I2C1_SetDataCompleteCallback 0079  
                                      ?_I2C1_MasterSetIrq 0070  
                     ??_wr1RegCompleteHandler@putch$F2180 007A  
                      ?_rd1RegCompleteHandler@putch$F2186 0079  
                      ?_wr1RegCompleteHandler@putch$F2178 0079  
                     ??_rd1RegCompleteHandler@putch$F2188 007A  
                                      _i2c1_fsmStateTable 0577  
                                     ??_I2C1_MasterIsNack 0070  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F146 06F3  
          _rd1RegCompleteHandler@i2c1_master_example$F146 06E0  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F163 06CD  
          _wr1RegCompleteHandler@i2c1_master_example$F163 06BA  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F180 0646  
        _rdBlkRegCompleteHandler@i2c1_master_example$F180 062B  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F157 06E0  
          _rd2RegCompleteHandler@i2c1_master_example$F157 06CD  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F169 0752  
          _wr2RegCompleteHandler@i2c1_master_example$F169 073F  
                               __end_of_I2C1_DO_SEND_STOP 0FDD  
                               ??_rdBlkRegCompleteHandler 007A  
                                      I2C1_SetCallback@cb 0020  
                                     ??_I2C1_MasterSetIrq 0070  
                                       __end_of_lcd_start 03D1  
                                                 ___awdiv 0128  
                                                 ___awmod 0230  
                                               ?_vfprintf 003A  
                                           ?_I2C1_DO_IDLE 0070  
                                           ?_I2C1_DO_RCEN 0070  
                                  i2c_writeNBytes@address 002D  
                                                 __ptext1 059A  
                                                 __ptext2 05B8  
                                                 __ptext3 003B  
                                                 __ptext4 0184  
                                                 __ptext5 07FF  
                                                 __ptext6 0752  
                                                 __ptext7 0230  
                                                 __ptext8 0128  
                                                 __ptext9 05F4  
                                _I2C1_MasterEnableRestart 0F92  
                               __end_of_I2C1_MasterIsNack 07FF  
                            ?_I2C1_SetAddressNackCallback 0026  
                                   _OSCILLATOR_Initialize 07B4  
                               __end_of_I2C1_MasterSetIrq 0FA1  
                                __end_of_I2C1_DO_TX_EMPTY 04FC  
                                        ___awmod@dividend 0022  
                                ??_PIN_MANAGER_Initialize 0020  
                                              ?_I2C1_Open 0070  
                                ?_I2C1_CallbackReturnStop 0079  
                                                 _sprintf 059A  
                                                 clrloop0 07EE  
                                              ??_lcd_busy 0020  
                       __end_of_I2C1_DO_SEND_RESTART_READ 0FCE  
                                    end_of_initialization 0037  
                              __end_of_I2C1_MasterSendAck 0FBB  
                                     _I2C1_MasterClearIrq 0FA4  
                                                 fputc@fp 0022  
                              __end_of_I2C1_MasterStartRx 0F9B  
                                  ?_rd1RegCompleteHandler 0079  
                                         _i2c_writeNBytes 04A2  
                                  _I2C1_DO_SEND_ADR_WRITE 07D7  
                            __end_of_I2C1_DO_SEND_RESTART 0FD8  
                                 __end_of_I2C1_MasterOpen 079D  
                                  ?_wr1RegCompleteHandler 0079  
                                 __end_of_I2C1_MasterStop 0F98  
                                 __end_of_I2C1_Initialize 07C6  
                               ?_I2C1_CallbackReturnReset 0079  
                           __end_of_I2C1_MasterDisableIrq 0FAD  
                                             _I2C1_Status 00C0  
                                       ??_lcd_lighting_ac 002F  
                                       __end_of_vfpfcnvrt 0128  
                                        vfpfcnvrt@convarg 0035  
                                     _I2C1_MasterSendNack 0FB3  
                     __end_of_I2C1_SetAddressNackCallback 07A9  
                             _I2C1_SetAddressNackCallback 079D  
                                        ?_ADCC_Initialize 0070  
                                              ??_vfprintf 003F  
                        __end_of_ADCC_GetSingleConversion 06A6  
                                    ?_I2C1_MasterClearIrq 0070  
                                          ??_I2C1_DO_IDLE 0070  
                                          ??_I2C1_DO_RCEN 0070  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 0FD3  
                              _I2C1_DO_SEND_RESTART_WRITE 0FCE  
                                       ?i1_I2C1_SetBuffer 0070  
                         __end_of_rdBlkRegCompleteHandler 0661  
                                      ??i1_I2C1_SetBuffer 0074  
                                       ?_lcd_writemessage 0036  
                                             ?_lcd_delete 0070  
                           ??_I2C1_SetAddressNackCallback 002A  
                         I2C1_SetDataCompleteCallback@ptr 0078  
                                      ??_lcd_writemessage 0038  
                                              lcd_go@line 0034  
                                              lcd_go@temp 0035  
                          I2C1_CallbackReturnReset@funPtr 0079  
                                    ?_I2C1_MasterSendNack 0070  
                                           _pcf8574_write 0783  
                                              main@buffer 0055  
                                           ??_lcd_command 0031  
                           __end_of_pcf8574_write_wEnable 06BA  
                                   ??_I2C1_MasterClearIrq 0020  
                                             vfpfcnvrt@ap 002D  
                                             vfpfcnvrt@cp 0033  
                                             vfpfcnvrt@fp 002A  
                                          _I2C1_DO_RX_ACK 0FDD  
                                       pcf8574_write@data 002E  
                                          __end_of_lcd_go 0526  
                                  ?_OSCILLATOR_Initialize 0070  
                         __end_of_I2C1_CallbackReturnStop 0F92  
                           __end_of_I2C1_MasterSendTxData 0FC4  
                                     start_initialization 0027  
                                             ??_I2C1_Open 0022  
                                             __end_of_abs 0764  
                           __end_ofi1_I2C1_MasterClearIrq 0FA4  
                                 lcd_writemessage@message 0037  
                                   ??_I2C1_MasterSendNack 0070  
                                          ?_pcf8574_write 0070  
                                 __end_of_i2c_writeNBytes 04CF  
                        pcf8574_write_wEnable@writeBuffer 002E  
                                  rd1RegCompleteHandler@p 0079  
                                      lcd_command@command 0032  
                                I2C1_SetBuffer@bufferSize 0022  
                                        ?_I2C1_MasterOpen 0070  
                                        ?_I2C1_MasterStop 0070  
                                        ?_I2C1_Initialize 0070  
                                             vfprintf@fmt 003C  
                                        ??_PMD_Initialize 0020  
                                  __end_of_I2C1_DO_RX_ACK 0FE2  
                                  wr1RegCompleteHandler@p 0079  
                                 ??_I2C1_DO_SEND_ADR_READ 0070  
                                     __end_of_lcd_command 0474  
                              __end_ofi1_I2C1_SetCallback 0442  
                                                ??_lcd_go 0034  
                              ??_I2C1_SetInterruptHandler 0022  
                                        I2C1_Open@address 0022  
                                _ADCC_GetSingleConversion 0690  
                                    _I2C1_DO_SEND_RESTART 0FD3  
                                               ___latbits 0002  
                                           __pcstackBANK0 0020  
                             ??_I2C1_DO_SEND_RESTART_READ 0070  
                              i1I2C1_SetBuffer@bufferSize 0072  
                                    __end_of_I2C1_DO_IDLE 0FC9  
                                    __end_of_I2C1_DO_RCEN 07ED  
                           I2C1_SetAddressNackCallback@cb 0026  
                                   _rd2RegCompleteHandler 0706  
                                  _PIN_MANAGER_Initialize 030E  
                                   _wr2RegCompleteHandler 06F3  
                                  _MSSP1_InterruptHandler 006A  
                              ??_I2C1_MasterEnableRestart 0070  
                                          _I2C1_MasterFsm 054F  
                                          _I2C1_MasterIsr 0FBB  
                         ADCC_GetSingleConversion@channel 0022  
                                         ?_I2C1_DO_RX_ACK 0070  
                                                ?___awdiv 0020  
                                                ?___awmod 0020  
                    ?_rdBlkRegCompleteHandler@putch$F2204 0079  
                   ??_rdBlkRegCompleteHandler@putch$F2206 007A  
                                        _I2C1_MasterClose 0FA7  
                                          _I2C1_SetBuffer 0679  
                            ??_INTERRUPT_InterruptManager 007E  
                                               _lcd_start 0397  
                                        _I2C1_MasterStart 0FAD  
                                        _I2C1_MasterWrite 0FF6  
                                   ?_I2C1_DO_SEND_RESTART 0070  
                                         ??_pcf8574_write 002E  
                                       ?_I2C1_DO_TX_EMPTY 0070  
                        __end_of_I2C1_CallbackReturnReset 0004  
                                        ?_i2c_writeNBytes 002A  
                                      ??_I2C1_DO_TX_EMPTY 007A  
                                                ?_sprintf 0042  
                                 ??_rd1RegCompleteHandler 007A  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0070  
                               I2C1_MasterSendTxData@data 0070  
                                         _lcd_lighting_ac 07DF  
                                 ??_wr1RegCompleteHandler 007A  
                                        _I2C1_SetCallback 03D1  
                                              _I2C1_DO_RX 0353  
                                              _I2C1_DO_TX 01DD  
                                               clear_ram0 07ED  
                                                _PIE3bits 0719  
                                             _lcd_command 0442  
                                              _I2C1_Close 0610  
                                  __end_of_I2C1_MasterFsm 0577  
                                  __end_of_I2C1_MasterIsr 0FBF  
                            __end_of_I2C1_MasterEnableIrq 0FB3  
                            __end_of_I2C1_MasterGetRxData 0F9E  
                                                _PIR3bits 070F  
                                      _I2C1_MasterSendAck 0FB7  
                               _I2C1_DO_SEND_RESTART_READ 0FC9  
                                                _SSP1CON1 0190  
                                                _SSP1CON2 0191  
                                  __end_of_I2C1_SetBuffer 0690  
                                                _SSP1STAT 018F  
                    __end_of_I2C1_SetDataCompleteCallback 07B4  
                            _I2C1_SetDataCompleteCallback 07A9  
                                      _I2C1_MasterStartRx 0F98  
                                               _vfpfcnvrt 003B  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                       ??_lcd_writeletter 0031  
                                     ?_I2C1_MasterSendAck 0070  
                                              ?_lcd_start 0070  
                                              _ADCON0bits 0093  
                                              _ADCON1bits 0094  
                                              _ADCON2bits 0095  
                                              _ADCON3bits 0096  
                                ?_I2C1_DO_RX_NACK_RESTART 0070  
                                            ??_lcd_delete 0033  
                                     ?_I2C1_MasterStartRx 0070  
                            __end_of_I2C1_DO_ADDRESS_NACK 054F  
                                               main@valor 0066  
                                    _display_cursor_blink 006D  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 07DF  
                                           _I2C1_DO_RESET 0FEC  
                                              vfpfcnvrt@c 0039  
                                   I2C1_Close@returnValue 0020  
                                ?_rdBlkRegCompleteHandler 0079  
                                     I2C1_SetCallback@idx 0025  
                                     I2C1_SetCallback@ptr 0022  
                                  lcd_writemessage@column 0036  
                                    ??_I2C1_MasterSendAck 0070  
                                  ?_rd2RegCompleteHandler 0079  
                            __end_of_I2C1_MasterOperation 05F4  
                                  ?_wr2RegCompleteHandler 0079  
                                    ??_I2C1_MasterStartRx 0070  
                                              _ADSTATbits 0097  
                                         ?_I2C1_MasterFsm 0070  
                                         ?_I2C1_MasterIsr 0070  
                                              vfprintf@ap 003E  
                                              vfprintf@fp 003A  
                                      __end_of_lcd_delete 1000  
                                     i2c_writeNBytes@data 002A  
                                   _I2C1_MasterDisableIrq 0FAA  
                                 ??_OSCILLATOR_Initialize 0020  
                                         ?_I2C1_SetBuffer 0020  
                                              ?_vfpfcnvrt 002A  
                                  ??_I2C1_DO_SEND_RESTART 0070  
                     ??_wr2RegCompleteHandler@putch$F2200 007A  
                      ?_rd2RegCompleteHandler@putch$F2192 0079  
                     ??_rd2RegCompleteHandler@putch$F2194 007A  
                      ?_wr2RegCompleteHandler@putch$F2198 0079  
                                              sprintf@fmt 0043  
                                 __end_of_lcd_lighting_ac 07E6  
                                          ?_I2C1_DO_RESET 0070  
                                                __ptext10 0474  
                                                __ptext11 04FC  
                                                __ptext20 079D  
                                                __ptext12 0397  
                                                __ptext21 03D1  
                                                __ptext13 07DF  
                                                __ptext30 0FAA  
                                                __ptext22 02C8  
                                                __ptext14 0783  
                                                __ptext31 0FA7  
                                                __ptext23 07F3  
                                                __ptext15 0FFB  
                                                __ptext40 0690  
                                                __ptext32 0FA4  
                                                __ptext24 0790  
                                                __ptext16 0442  
                                                __ptext33 0FF1  
                                                __ptext25 0FB0  
                                                __ptext17 06A6  
                                                __ptext50 0FD8  
                                                __ptext42 0FBB  
                                                __ptext34 0764  
                                                __ptext26 0FF6  
                                                __ptext18 04A2  
                                                __ptext51 0FD3  
                                                __ptext43 054F  
                                                __ptext35 07CF  
                                                __ptext27 05D6  
                                                __ptext19 0679  
                                                __ptext60 04CF  
                                                __ptext52 0FCE  
                                                __ptext44 0FA1  
                                                __ptext36 030E  
                                                __ptext28 0FAD  
                                                __ptext61 0F9E  
                                                __ptext53 0FC9  
                                                __ptext45 0526  
                                                __ptext37 07B4  
                                                __ptext29 0610  
                                                __ptext70 062B  
                                                __ptext62 07F9  
                                                __ptext54 07E6  
                                                __ptext46 0FEC  
                                                __ptext38 07BD  
                                                __ptext71 06BA  
                                                __ptext63 0FBF  
                                                __ptext55 0353  
                                                __ptext47 0FE7  
                                                __ptext39 0661  
                                                __ptext80 0774  
                                                __ptext72 06CD  
                                                __ptext64 0FB7  
                                                __ptext56 01DD  
                                                __ptext48 0FE2  
                                                __ptext81 07A9  
                                                __ptext73 06E0  
                                                __ptext65 0F9B  
                                                __ptext57 07D7  
                                                __ptext49 0FDD  
                                                __ptext82 040A  
                                                __ptext74 0646  
                                                __ptext66 0FB3  
                                                __ptext58 07C6  
                                                __ptext83 0F95  
                                                __ptext75 06F3  
                                                __ptext67 0F98  
                                                __ptext59 0FC4  
                                                __ptext84 0F92  
                                                __ptext76 0706  
                                                __ptext68 0002  
                                                __ptext77 0719  
                                                __ptext69 0F90  
                                                __ptext78 072C  
                                                __ptext79 073F  
                                            _SSP1CON1bits 0190  
                                            _SSP1CON2bits 0191  
                                                _lcd_busy 0FF1  
                                _I2C1_CallbackReturnReset 0002  
                                                _pcf_port 006E  
                                             ?_I2C1_DO_RX 0070  
                                             ?_I2C1_DO_TX 0070  
                             __end_of_I2C1_MasterClearIrq 0FA7  
                            __end_of_I2C1_DO_RX_NACK_STOP 0FE7  
                                             ?_I2C1_Close 0070  
                              ??_ADCC_GetSingleConversion 0022  
                                                int$flags 007E  
                         __end_of_I2C1_DO_RX_NACK_RESTART 0FEC  
                                I2C1_MasterOperation@read 0020  
                                   _pcf8574_write_wEnable 06A6  
                                                _vfprintf 05B8  
                      __end_of_INTERRUPT_InterruptManager 0025  
                              _INTERRUPT_InterruptManager 0004  
                                            _SSP1STATbits 018F  
                           __end_of_I2C1_DO_SEND_ADR_READ 07CF  
                                            _I2C1_DO_IDLE 0FC4  
                                            _I2C1_DO_RCEN 07E6  
                                             ??_lcd_start 0033  
                             __end_of_I2C1_MasterSendNack 0FB7  
                                              _INTCONbits 000B  
                          I2C1_SetAddressNackCallback@ptr 0028  
                                    _I2C1_MasterEnableIrq 0FB0  
                                      i1_I2C1_SetCallback 040A  
                                      i2c_writeNBytes@len 002B  
                                    _I2C1_MasterGetRxData 0F9B  
                                   _I2C1_MasterSendTxData 0FBF  
                                   i1_I2C1_MasterClearIrq 0FA1  
                                                intlevel1 0000  
                                               sprintf@ap 0047  
                                __end_of_I2C1_MasterClose 0FAA  
                                  rd2RegCompleteHandler@p 0079  
                                     ?i1_I2C1_SetCallback 0070  
                                 ?_PIN_MANAGER_Initialize 0070  
                                __end_of_I2C1_MasterStart 0FB0  
                                __end_of_I2C1_MasterWrite 0FFB  
                                        ??_I2C1_DO_RX_ACK 0070  
                                 _I2C1_CallbackReturnStop 0F90  
                                    _I2C1_DO_ADDRESS_NACK 0526  
                                  ?_I2C1_MasterDisableIrq 0070  
                                  wr2RegCompleteHandler@p 0079  
                                             ??_vfpfcnvrt 002E  
                                    ??i1_I2C1_SetCallback 0073  
                                           __pstringtext1 0577  
                                           __pstringtext2 0000  
                                __end_of_I2C1_SetCallback 040A  
                                                sprintf@f 0048  
                                                sprintf@s 0042  
                                              _SSP1DATPPS 0EC6  
                                              _SSP1CLKPPS 0EC5  
                                         ??_I2C1_DO_RESET 0070  
                                    _I2C1_MasterOperation 05D6  
                                        ?_lcd_lighting_ac 0070  
                                   ?_I2C1_MasterEnableIrq 0070  
                                   ?_I2C1_MasterGetRxData 0070  
                                  i1I2C1_SetBuffer@buffer 0070  
                                        i1_I2C1_SetBuffer 0774  
                          __end_of_PIN_MANAGER_Initialize 0353  
                                       ??_ADCC_Initialize 0020  
                               ?_I2C1_SetInterruptHandler 0020  
                           __end_of_rd1RegCompleteHandler 072C  
                                        _lcd_writemessage 05F4  
                           __end_of_wr1RegCompleteHandler 073F  
                                            ?_lcd_command 0070  
                                         _lcd_writeletter 0474  
                                   ?_I2C1_DO_ADDRESS_NACK 0070  
